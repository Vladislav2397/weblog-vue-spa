{"version":3,"file":"js/routes/article.df049ffb.js","mappings":"wJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAUF,EAAIG,MAAMC,YAAY,OAAOF,EAAG,MAAM,CAACG,YAAY,WAAW,CAAEL,EAAIM,QAASJ,EAAG,cAAc,CAACK,MAAM,CAAC,MAAQP,EAAIM,QAAQE,MAAM,KAAO,MAAM,CAACN,EAAG,MAAM,CAACG,YAAY,kBAAkB,CAACH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAMP,EAAIM,QAAQG,MAAMC,IAAI,IAAMV,EAAIM,QAAQG,MAAME,IAAI,MAAQX,EAAIY,UAAU,GAAG,OAASZ,EAAIY,UAAU,QAAQV,EAAG,MAAM,CAACG,YAAY,wBAAwB,CAACL,EAAIa,GAAGb,EAAIc,GAAGd,EAAIM,QAAQS,gBAAgBb,EAAG,MAAM,CAACG,YAAY,wBAAwBW,SAAS,CAAC,UAAYhB,EAAIc,GAAGd,EAAIM,QAAQW,cAAcjB,EAAIkB,MAAM,EACnkB,EACIC,EAAkB,G,+WCatB,IAAqBC,EAArB,cAAqCC,EAAAA,GAC7BC,oBACA,OAAOrB,KAAKsB,OAAOC,UAAU,kBACjC,CAEIZ,gBACA,OAAIX,KAAKwB,QAAQC,KAAKC,UAAkB,CAAC,MAAO,OACzC,CAAC,MAAO,MACnB,CAEIV,cACA,MAAMX,EAAUL,KAAKqB,cAErB,OAAKhB,EAEEA,EAAQW,QAAQW,OAAOC,QAAQ,SAAU,MAF3B,EAGzB,CAEIvB,cACA,MAAMA,EAAUL,KAAKqB,cAErB,IAAKhB,EAAS,OAAO,KAErB,MAAMwB,EAAK,IAAIC,KAEf,MAAO,IACAzB,EACHW,QAASa,EAAG/B,OAAOE,KAAKgB,SAEhC,CAEAe,gBACI,MAAMC,EAAQhC,KAAKiC,OACbC,EAAQlC,KAAKsB,QACb,GAAEa,GAAOH,EAAMI,aAEfF,EAAMG,SAAS,qBAAsBF,EAC/C,GArCiBhB,EAAOmB,EAAA,EAL3BC,EAAAA,EAAAA,IAAU,CACPC,WAAY,CACR,cAAeC,EAAAA,MAGFtB,G,QCfoR,I,UCQrSuB,GAAY,OACd,EACA5C,EACAoB,GACA,EACA,KACA,WACA,MAIF,EAAewB,EAAiB,O,oECnBhC,IAAI5C,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAUF,EAAIG,MAAMC,YAAY,OAAOF,EAAG,MAAM,CAACG,YAAY,eAAe,CAACH,EAAG,MAAM,CAACG,YAAY,yBAAyBuC,MAAO,gCAA+B5C,EAAI0B,QAAQ,CAACxB,EAAG,KAAK,CAACG,YAAY,sBAAsB,CAACL,EAAIa,GAAGb,EAAIc,GAAGd,EAAIQ,UAAUR,EAAI6C,GAAG,YAAY,IACnU,EACI1B,EAAkB,G,4VCMtB,IAAqBuB,EAArB,cAAwCrB,EAAAA,GAAGyB,eAAAC,GAAA,SAAAA,IAAAC,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,sBAC/BT,EAAA,EAAPU,EAAAA,EAAAA,OAAM,4BACiBV,EAAA,EAAvBU,EAAAA,EAAAA,IAAK,CAAEC,QAAS,OAAM,2BAFNR,EAAUH,EAAA,CAD9BC,EAAAA,IACoBE,G,QCRmS,I,UCQpTC,GAAY,OACd,EACA5C,EACAoB,GACA,EACA,KACA,KACA,MAIF,EAAewB,EAAiB,O,oCCXhC,SAASQ,EAAOC,GACd,IAAIC,EAAUC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAUpD,OARAL,EAAQM,SAAQ,SAAUC,GACnBA,GAELC,OAAOC,KAAKF,GAAQD,SAAQ,SAAUI,GACpCX,EAAIW,GAAOH,EAAOG,EACpB,GACF,IAEOX,CACT,CAEA,SAASY,EAAOZ,GAAO,OAAOS,OAAON,UAAUU,SAASR,KAAKL,EAAM,CACnE,SAASc,EAASd,GAAO,MAAuB,oBAAhBY,EAAOZ,EAA4B,CACnE,SAASe,EAASf,GAAO,MAAuB,oBAAhBY,EAAOZ,EAA4B,CACnE,SAASgB,EAAShB,GAAO,MAAuB,oBAAhBY,EAAOZ,EAA4B,CACnE,SAASiB,EAAWjB,GAAO,MAAuB,sBAAhBY,EAAOZ,EAA8B,CAGvE,SAASkB,EAASC,GAAO,OAAOA,EAAI1C,QAAQ,uBAAwB,OAAS,CAtB7E2C,EAAA,MA2BA,IAAIC,EAAiB,CACnBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAIX,SAASC,EAAazB,GACpB,OAAOS,OAAOC,KAAKV,GAAO,CAAC,GAAG0B,QAAO,SAAUC,EAAKC,GAClD,OAAOD,GAAON,EAAeQ,eAAeD,EAC9C,IAAG,EACL,CAGA,IAAIE,EAAiB,CACnB,QAAS,CACPC,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAK5B,MAAM6B,GAQtB,OANKC,EAAKE,GAAGC,OAEXH,EAAKE,GAAGC,KAAQ,IAAIC,OAClB,UAAYJ,EAAKE,GAAGG,SAAWL,EAAKE,GAAGI,qBAAuBN,EAAKE,GAAGK,SAAU,MAGhFP,EAAKE,GAAGC,KAAKK,KAAKP,GACbA,EAAKQ,MAAMT,EAAKE,GAAGC,MAAM,GAAGO,OAE9B,CACT,GAEF,SAAW,QACX,OAAW,QACX,KAAW,CACTb,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAK5B,MAAM6B,GAkBtB,OAhBKC,EAAKE,GAAGS,UAEXX,EAAKE,GAAGS,QAAW,IAAIP,OACrB,IACAJ,EAAKE,GAAGG,SAGR,sBAAwBL,EAAKE,GAAGU,WAAa,SAAWZ,EAAKE,GAAGW,gBAAkB,IAClFb,EAAKE,GAAGY,SACRd,EAAKE,GAAGa,oBACRf,EAAKE,GAAGK,SAER,MAIAP,EAAKE,GAAGS,QAAQH,KAAKP,GAEnBF,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,IACvBA,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,GADqB,EAEzCE,EAAKQ,MAAMT,EAAKE,GAAGS,SAAS,GAAGD,OAEjC,CACT,GAEF,UAAW,CACTb,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAK5B,MAAM6B,GAOtB,OALKC,EAAKE,GAAGc,SACXhB,EAAKE,GAAGc,OAAU,IAAIZ,OACpB,IAAMJ,EAAKE,GAAGe,eAAiB,IAAMjB,EAAKE,GAAGgB,gBAAiB,MAG9DlB,EAAKE,GAAGc,OAAOR,KAAKP,GACfA,EAAKQ,MAAMT,EAAKE,GAAGc,QAAQ,GAAGN,OAEhC,CACT,IAOAS,EAAkB,0VAGlBC,EAAe,8EAA8EC,MAAM,KAMvG,SAASC,EAAetB,GACtBA,EAAKuB,WAAa,EAClBvB,EAAKwB,eAAmB,EAC1B,CAEA,SAASC,EAAgBvB,GACvB,OAAO,SAAUJ,EAAMC,GACrB,IAAIE,EAAOH,EAAK5B,MAAM6B,GAEtB,OAAIG,EAAGM,KAAKP,GACHA,EAAKQ,MAAMP,GAAI,GAAGQ,OAEpB,CACT,CACF,CAEA,SAASgB,IACP,OAAO,SAAUjB,EAAOT,GACtBA,EAAK2B,UAAUlB,EACjB,CACF,CAIA,SAASmB,EAAQ5B,GAGf,IAAIE,EAAKF,EAAKE,GAAKhB,EAAQ,KAARA,CAAoBc,EAAK6B,UAGxCC,EAAO9B,EAAK+B,SAAS7D,QAWzB,SAAS8D,EAAMC,GAAO,OAAOA,EAAI1F,QAAQ,SAAU2D,EAAGgC,SAAW,CATjElC,EAAKmC,YAEAnC,EAAKoC,mBACRN,EAAKO,KAAKlB,GAEZW,EAAKO,KAAKnC,EAAGoC,QAEbpC,EAAGgC,SAAWJ,EAAKS,KAAK,KAIxBrC,EAAGsC,YAAmBpC,OAAO4B,EAAM9B,EAAGuC,iBAAkB,KACxDvC,EAAGwC,WAAmBtC,OAAO4B,EAAM9B,EAAGyC,gBAAiB,KACvDzC,EAAG0C,iBAAmBxC,OAAO4B,EAAM9B,EAAG2C,sBAAuB,KAC7D3C,EAAG4C,gBAAmB1C,OAAO4B,EAAM9B,EAAG6C,qBAAsB,KAM5D,IAAIC,EAAU,GAId,SAASC,EAAYC,EAAMC,GACzB,MAAM,IAAIC,MAAM,+BAAiCF,EAAO,MAAQC,EAClE,CAJAnD,EAAKqD,aAAe,CAAC,EAMrB9E,OAAOC,KAAKwB,EAAKsD,aAAajF,SAAQ,SAAU6E,GAC9C,IAAIC,EAAMnD,EAAKsD,YAAYJ,GAG3B,GAAY,OAARC,EAAJ,CAEA,IAAII,EAAW,CAAE1D,SAAU,KAAM2D,KAAM,MAIvC,GAFAxD,EAAKqD,aAAaH,GAAQK,EAEtB1E,EAASsE,GAiBX,OAhBIrE,EAASqE,EAAItD,UACf0D,EAAS1D,SAAW4B,EAAgB0B,EAAItD,UAC/Bd,EAAWoE,EAAItD,UACxB0D,EAAS1D,SAAWsD,EAAItD,SAExBoD,EAAYC,EAAMC,QAGhBpE,EAAWoE,EAAIxB,WACjB4B,EAAS5B,UAAYwB,EAAIxB,UACfwB,EAAIxB,UAGdsB,EAAYC,EAAMC,GAFlBI,EAAS5B,UAAYD,KAQrB9C,EAASuE,GACXH,EAAQX,KAAKa,GAIfD,EAAYC,EAAMC,EA/BU,CAgC9B,IAMAH,EAAQ3E,SAAQ,SAAUoF,GACnBzD,EAAKqD,aAAarD,EAAKsD,YAAYG,MAMxCzD,EAAKqD,aAAaI,GAAO5D,SACvBG,EAAKqD,aAAarD,EAAKsD,YAAYG,IAAQ5D,SAC7CG,EAAKqD,aAAaI,GAAO9B,UACvB3B,EAAKqD,aAAarD,EAAKsD,YAAYG,IAAQ9B,UAC/C,IAKA3B,EAAKqD,aAAa,IAAM,CAAExD,SAAU,KAAM8B,UAAWD,KAKrD,IAAIgC,EAAQnF,OAAOC,KAAKwB,EAAKqD,cACRM,QAAO,SAAUT,GAEhB,OAAOA,EAAKxC,OAAS,GAAKV,EAAKqD,aAAaH,EAC9C,IACCU,IAAI5E,GACJuD,KAAK,KAE1BvC,EAAKE,GAAG2D,YAAkBzD,OAAO,oBAA2BF,EAAG4D,SAAW,MAAQJ,EAAQ,IAAK,KAC/F1D,EAAKE,GAAG6D,cAAkB3D,OAAO,oBAA2BF,EAAG4D,SAAW,MAAQJ,EAAQ,IAAK,MAC/F1D,EAAKE,GAAG8D,gBAAkB5D,OAAO,IAAMJ,EAAKE,GAAG6D,cAAczF,OAAQ,KAErE0B,EAAKE,GAAG+D,QAAU7D,OAChB,IAAMJ,EAAKE,GAAG2D,YAAYvF,OAAS,MAAQ0B,EAAKE,GAAG4C,gBAAgBxE,OAAS,MAC5E,KAOFgD,EAAetB,EACjB,CAOA,SAASkE,EAAMlE,EAAMmE,GACnB,IAAIC,EAAQpE,EAAKuB,UACb8C,EAAQrE,EAAKsE,eACbxE,EAAQE,EAAKwB,eAAetD,MAAMkG,EAAOC,GAO7C1J,KAAK4J,OAAYvE,EAAKwE,WAAWC,cAMjC9J,KAAK+J,MAAYN,EAAQD,EAMzBxJ,KAAKgK,UAAYN,EAAMF,EAMvBxJ,KAAKiK,IAAY9E,EAMjBnF,KAAKmF,KAAYA,EAMjBnF,KAAKkK,IAAY/E,CACnB,CAEA,SAASgF,EAAY9E,EAAMmE,GACzB,IAAI1D,EAAQ,IAAIyD,EAAMlE,EAAMmE,GAI5B,OAFAnE,EAAKqD,aAAa5C,EAAM8D,QAAQ5C,UAAUlB,EAAOT,GAE1CS,CACT,CAyCA,SAASsE,EAAUC,EAASC,GAC1B,KAAMtK,gBAAgBoK,GACpB,OAAO,IAAIA,EAAUC,EAASC,GAG3BA,GACC1F,EAAayF,KACfC,EAAUD,EACVA,EAAU,CAAC,GAIfrK,KAAKkH,SAAqBhE,EAAO,CAAC,EAAGsB,EAAgB8F,GAGrDtK,KAAK4G,WAAsB,EAC3B5G,KAAK2J,gBAAsB,EAC3B3J,KAAK6J,WAAqB,GAC1B7J,KAAK6G,eAAqB,GAE1B7G,KAAK2I,YAAqBzF,EAAO,CAAC,EAAG+B,EAAgBoF,GACrDrK,KAAK0I,aAAqB,CAAC,EAE3B1I,KAAKoH,SAAqBX,EAC1BzG,KAAKyH,mBAAqB,EAE1BzH,KAAKuF,GAAK,CAAC,EAEX0B,EAAQjH,KACV,CAUAoK,EAAU9G,UAAUiH,IAAM,SAAaX,EAAQY,GAG7C,OAFAxK,KAAK2I,YAAYiB,GAAUY,EAC3BvD,EAAQjH,MACDA,IACT,EASAoK,EAAU9G,UAAUmH,IAAM,SAAaH,GAErC,OADAtK,KAAKkH,SAAWhE,EAAOlD,KAAKkH,SAAUoD,GAC/BtK,IACT,EAQAoK,EAAU9G,UAAUuC,KAAO,SAAcV,GAKvC,GAHAnF,KAAK6G,eAAiB1B,EACtBnF,KAAK4G,WAAkB,GAElBzB,EAAKY,OAAU,OAAO,EAE3B,IAAI2E,EAAGC,EAAIC,EAAIC,EAAKrB,EAAOsB,EAAMvF,EAAIwF,EAASC,EAG9C,GAAIhL,KAAKuF,GAAG2D,YAAYrD,KAAKV,GAAO,CAClCI,EAAKvF,KAAKuF,GAAG6D,cACb7D,EAAGyE,UAAY,EACf,MAA+B,QAAvBU,EAAInF,EAAG0F,KAAK9F,IAElB,GADA0F,EAAM7K,KAAKkL,aAAa/F,EAAMuF,EAAE,GAAInF,EAAGyE,WACnCa,EAAK,CACP7K,KAAK6J,WAAiBa,EAAE,GACxB1K,KAAK4G,UAAiB8D,EAAEX,MAAQW,EAAE,GAAG3E,OACrC/F,KAAK2J,eAAiBe,EAAEX,MAAQW,EAAE,GAAG3E,OAAS8E,EAC9C,KACF,CAEJ,CA2CA,OAzCI7K,KAAKkH,SAASzC,WAAazE,KAAK0I,aAAa,WAE/CqC,EAAU5F,EAAKgG,OAAOnL,KAAKuF,GAAG4C,iBAC1B4C,GAAW,IAET/K,KAAK4G,UAAY,GAAKmE,EAAU/K,KAAK4G,YAC0D,QAA5F+D,EAAKxF,EAAKW,MAAM9F,KAAKkH,SAASvC,QAAU3E,KAAKuF,GAAGwC,WAAa/H,KAAKuF,GAAG0C,qBAExEuB,EAAQmB,EAAGZ,MAAQY,EAAG,GAAG5E,QAErB/F,KAAK4G,UAAY,GAAK4C,EAAQxJ,KAAK4G,aACrC5G,KAAK6J,WAAiB,GACtB7J,KAAK4G,UAAiB4C,EACtBxJ,KAAK2J,eAAiBgB,EAAGZ,MAAQY,EAAG,GAAG5E,UAO7C/F,KAAKkH,SAASxC,YAAc1E,KAAK0I,aAAa,aAEhDsC,EAAS7F,EAAKiG,QAAQ,KAClBJ,GAAU,GAGmC,QAA1CJ,EAAKzF,EAAKW,MAAM9F,KAAKuF,GAAGsC,gBAE3B2B,EAAQoB,EAAGb,MAAQa,EAAG,GAAG7E,OACzB+E,EAAQF,EAAGb,MAAQa,EAAG,GAAG7E,QAErB/F,KAAK4G,UAAY,GAAK4C,EAAQxJ,KAAK4G,WAClC4C,IAAUxJ,KAAK4G,WAAakE,EAAO9K,KAAK2J,kBAC3C3J,KAAK6J,WAAiB,UACtB7J,KAAK4G,UAAiB4C,EACtBxJ,KAAK2J,eAAiBmB,KAMvB9K,KAAK4G,WAAa,CAC3B,EAUAwD,EAAU9G,UAAUgG,QAAU,SAAiBnE,GAC7C,OAAOnF,KAAKuF,GAAG+D,QAAQzD,KAAKV,EAC9B,EAYAiF,EAAU9G,UAAU4H,aAAe,SAAsB/F,EAAMyE,EAAQxE,GAErE,OAAKpF,KAAK0I,aAAakB,EAAOE,eAGvB9J,KAAK0I,aAAakB,EAAOE,eAAe5E,SAASC,EAAMC,EAAKpF,MAF1D,CAGX,EAmBAoK,EAAU9G,UAAUwC,MAAQ,SAAeX,GACzC,IAAIqE,EAAQ,EAAG6B,EAAS,GAGpBrL,KAAK4G,WAAa,GAAK5G,KAAK6G,iBAAmB1B,IACjDkG,EAAO3D,KAAKyC,EAAYnK,KAAMwJ,IAC9BA,EAAQxJ,KAAK2J,gBAIf,IAAIrE,EAAOkE,EAAQrE,EAAK5B,MAAMiG,GAASrE,EAGvC,MAAOnF,KAAK6F,KAAKP,GACf+F,EAAO3D,KAAKyC,EAAYnK,KAAMwJ,IAE9BlE,EAAOA,EAAK/B,MAAMvD,KAAK2J,gBACvBH,GAASxJ,KAAK2J,eAGhB,OAAI0B,EAAOtF,OACFsF,EAGF,IACT,EASAjB,EAAU9G,UAAUgI,aAAe,SAAsBnG,GAKvD,GAHAnF,KAAK6G,eAAiB1B,EACtBnF,KAAK4G,WAAkB,GAElBzB,EAAKY,OAAQ,OAAO,KAEzB,IAAI2E,EAAI1K,KAAKuF,GAAG8D,gBAAgB4B,KAAK9F,GACrC,IAAKuF,EAAG,OAAO,KAEf,IAAIG,EAAM7K,KAAKkL,aAAa/F,EAAMuF,EAAE,GAAIA,EAAE,GAAG3E,QAC7C,OAAK8E,GAEL7K,KAAK6J,WAAiBa,EAAE,GACxB1K,KAAK4G,UAAiB8D,EAAEX,MAAQW,EAAE,GAAG3E,OACrC/F,KAAK2J,eAAiBe,EAAEX,MAAQW,EAAE,GAAG3E,OAAS8E,EAEvCV,EAAYnK,KAAM,IANR,IAOnB,EAkBAoK,EAAU9G,UAAU6D,KAAO,SAAcoE,EAAMC,GAG7C,OAFAD,EAAOlI,MAAMoI,QAAQF,GAAQA,EAAO,CAAEA,GAEjCC,GAOLxL,KAAKoH,SAAWpH,KAAKoH,SAASsE,OAAOH,GACJI,OACA3C,QAAO,SAAU4C,EAAIC,EAAKC,GACzB,OAAOF,IAAOE,EAAID,EAAM,EAC1B,IACCE,UAEjC9E,EAAQjH,MACDA,OAdLA,KAAKoH,SAAWmE,EAAKhI,QACrBvD,KAAKyH,mBAAoB,EACzBR,EAAQjH,MACDA,KAYX,EAOAoK,EAAU9G,UAAU0D,UAAY,SAAmBlB,GAK5CA,EAAM8D,SAAU9D,EAAMoE,IAAM,UAAYpE,EAAMoE,KAE9B,YAAjBpE,EAAM8D,QAAyB,YAAY/D,KAAKC,EAAMoE,OACxDpE,EAAMoE,IAAM,UAAYpE,EAAMoE,IAElC,EAQAE,EAAU9G,UAAUkE,UAAY,WAChC,EAGAwE,EAAOC,QAAU7B,C,oCCppBjB4B,EAAOC,QAAU,SAAUC,GACzB,IAAI3G,EAAK,CAAC,EACV2G,EAAOA,GAAQ,CAAC,EAGhB3G,EAAG4G,QAAU5H,EAAAA,KAAAA,OACbgB,EAAG6G,OAAU7H,EAAAA,MAAAA,OACbgB,EAAG8G,MAAU9H,EAAAA,MAAAA,OACbgB,EAAG+G,MAAU/H,EAAAA,KAAAA,OAGbgB,EAAG4D,SAAW,CAAE5D,EAAG8G,MAAO9G,EAAG+G,MAAO/G,EAAG6G,QAASxE,KAAK,KAGrDrC,EAAGgH,QAAU,CAAEhH,EAAG8G,MAAO9G,EAAG6G,QAASxE,KAAK,KAI1C,IAAI4E,EAAkB,QAgKtB,OA3JAjH,EAAGkH,kBAA0B,SAAWD,EAAkB,IAAMjH,EAAG4D,SAAW,IAAM5D,EAAG4G,QAAU,IAMjG5G,EAAGmH,QAED,yFAGFnH,EAAGG,SAAc,YAAcH,EAAGgH,QAAU,uBAE5ChH,EAAGY,SAED,kFAEFZ,EAAGa,oBAED,QAAUoG,EAAkB,IAAMjH,EAAG4D,SAArC,QACS+C,EAAK,OAAS,WAAa,MAAQ,uBAAyB3G,EAAG4D,SAAW,KAErF5D,EAAGK,SAED,iBAGcL,EAAGgH,QAAU,IAAMC,EAHjC,qCAIoBjH,EAAGgH,QAJvB,wBAKoBhH,EAAGgH,QALvB,wBAMoBhH,EAAGgH,QANvB,wBAOoBhH,EAAGgH,QAPvB,yBAQoBhH,EAAGgH,QARvB,qBASiBhH,EAAGkH,kBATpB,qCAkBiBlH,EAAGgH,QAAU,YACvBL,EAAK,OACJ,6BAEA,SAEF,OAAS3G,EAAGgH,QAxBlB,WAyBehH,EAAGgH,QAzBlB,cA0BkBhH,EAAGgH,QA1BrB,iBA2BiBhH,EAAGgH,QA3BpB,kBAkCFhH,EAAGe,eAED,iEAEFf,EAAGoC,OAED,wBAKFpC,EAAGW,gBAGD,MACEX,EAAGoC,OACH,IACApC,EAAGkH,kBAHL,UAMFlH,EAAGU,WAED,MACEV,EAAGoC,OADL,OAGUpC,EAAGkH,kBAHb,QAKUlH,EAAGkH,kBAAoB,QAAUlH,EAAGkH,kBAAoB,UAAYlH,EAAGkH,kBALjF,KAQFlH,EAAGoH,SAED,eAIgBpH,EAAGU,WAAa,SAAWV,EAAGU,WAJ9C,KAOFV,EAAGqH,eAED,MACErH,EAAGmH,QADL,aAGgBnH,EAAGU,WAHnB,qBAMFV,EAAGsH,qBAED,YAActH,EAAGU,WAAa,oBAEhCV,EAAGgB,gBAEDhB,EAAGoH,SAAWpH,EAAGa,oBAEnBb,EAAGuH,sBAEDvH,EAAGqH,eAAiBrH,EAAGa,oBAEzBb,EAAGI,qBAEDJ,EAAGoH,SAAWpH,EAAGY,SAAWZ,EAAGa,oBAEjCb,EAAGwH,2BAEDxH,EAAGqH,eAAiBrH,EAAGY,SAAWZ,EAAGa,oBAEvCb,EAAGyH,iCAEDzH,EAAGsH,qBAAuBtH,EAAGY,SAAWZ,EAAGa,oBAO7Cb,EAAG6C,oBAED,sDAAwD7C,EAAG4D,SAAW,SAExE5D,EAAGuC,gBAEC,MAAQ0E,EAAkB,UAAYjH,EAAGgH,QAAzC,KACMhH,EAAGe,eAAiB,IAAMf,EAAGuH,sBAAwB,IAE/DvH,EAAGyC,eAGC,mCAA0CzC,EAAG4D,SAA7C,qBAC0B5D,EAAGwH,2BAA6BxH,EAAGK,SAAW,IAE5EL,EAAG2C,qBAGC,mCAA0C3C,EAAG4D,SAA7C,qBAC0B5D,EAAGyH,iCAAmCzH,EAAGK,SAAW,IAE3EL,CACT,C,oCCnLAyG,EAAOC,QAAU,EAAjBD,K,oCCEAA,EAAOC,QAAU,EAAjBD,K,gCCCAA,EAAOC,QAAU,CACf,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,K,gCChEF,IAAIgB,EAAgB,6BAEhBC,EAAgB,yBAChBC,EAAgB,UAChBC,EAAgB,UAEhBC,EAAc,MAAQH,EAAW,IAAMC,EAAgB,IAAMC,EAAgB,IAE7EE,EAAc,UAAYL,EAAY,eAAiBI,EAAa,MAEpEE,EAAc,2BAA6BD,EAAY,aAEvDE,EAAc,mCACdC,EAAc,oDACdC,EAAc,qBACdC,EAAc,qBACdC,EAAc,iCAEdC,EAAc,IAAIpI,OAAO,OAAS8H,EAAW,IAAMC,EAAY,IAAMC,EACjD,IAAMC,EAAa,IAAMC,EAAc,IAAMC,EAAQ,KACzEE,EAAyB,IAAIrI,OAAO,OAAS8H,EAAW,IAAMC,EAAY,KAE9ExB,EAAOC,QAAQ,EAAc4B,EAC7B7B,EAAOC,QAAQ,EAAyB6B,C,mCCtBxC,SAAS/J,EAAOZ,GAAO,OAAOS,OAAON,UAAUU,SAASR,KAAKL,EAAM,CAEnE,SAASc,EAASd,GAAO,MAAuB,oBAAhBY,EAAOZ,EAA4B,CAEnE,IAAI4K,EAAkBnK,OAAON,UAAU0B,eAEvC,SAASgJ,EAAIC,EAAQnK,GACnB,OAAOiK,EAAgBvK,KAAKyK,EAAQnK,EACtC,CAIA,SAASZ,EAAOC,GACd,IAAIC,EAAUC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAcpD,OAZAL,EAAQM,SAAQ,SAAUC,GACxB,GAAKA,EAAL,CAEA,GAAsB,kBAAXA,EACT,MAAM,IAAIuK,UAAUvK,EAAS,kBAG/BC,OAAOC,KAAKF,GAAQD,SAAQ,SAAUI,GACpCX,EAAIW,GAAOH,EAAOG,EACpB,GARuB,CASzB,IAEOX,CACT,CAIA,SAASgL,EAAe1N,EAAK2E,EAAKgJ,GAChC,MAAO,GAAG1C,OAAOjL,EAAI8C,MAAM,EAAG6B,GAAMgJ,EAAa3N,EAAI8C,MAAM6B,EAAM,GACnE,CAIA,SAASiJ,EAAkBC,GAGzB,QAAIA,GAAK,OAAUA,GAAK,WAEpBA,GAAK,OAAUA,GAAK,SACH,SAAZ,MAAJA,IAA2C,SAAZ,MAAJA,OAE5BA,GAAK,GAAQA,GAAK,KACZ,KAANA,MACAA,GAAK,IAAQA,GAAK,QAClBA,GAAK,KAAQA,GAAK,QAElBA,EAAI,cAEV,CAEA,SAASC,EAAcD,GAErB,GAAIA,EAAI,MAAQ,CACdA,GAAK,MACL,IAAIE,EAAa,OAAUF,GAAK,IAC5BG,EAAa,OAAc,KAAJH,GAE3B,OAAOI,OAAOC,aAAaH,EAAYC,EACzC,CACA,OAAOC,OAAOC,aAAaL,EAC7B,CAGA,IAAIM,EAAkB,8CAClBC,EAAkB,6BAClBC,EAAkB,IAAIrJ,OAAOmJ,EAAejL,OAAS,IAAMkL,EAAUlL,OAAQ,MAE7EoL,EAAyB,qCAEzBC,EAAWzK,EAAQ,MAEvB,SAAS0K,EAAqBnJ,EAAOyC,GACnC,IAAI2G,EAAO,EAEX,OAAIlB,EAAIgB,EAAUzG,GACTyG,EAASzG,GAGS,KAAvBA,EAAK4G,WAAW,IAAsBJ,EAAuBlJ,KAAK0C,KACpE2G,EAAiC,MAA1B3G,EAAK,GAAGuB,cACbsF,SAAS7G,EAAKhF,MAAM,GAAI,IAAM6L,SAAS7G,EAAKhF,MAAM,GAAI,IAEpD8K,EAAkBa,IACbX,EAAcW,GAIlBpJ,CACT,CAQA,SAASuJ,EAAW/K,GAClB,OAAIA,EAAI8G,QAAQ,MAAQ,EAAY9G,EAC7BA,EAAI1C,QAAQgN,EAAgB,KACrC,CAEA,SAASU,EAAYhL,GACnB,OAAIA,EAAI8G,QAAQ,MAAQ,GAAK9G,EAAI8G,QAAQ,KAAO,EAAY9G,EAErDA,EAAI1C,QAAQkN,GAAiB,SAAUhJ,EAAOyJ,EAASC,GAC5D,OAAID,GACGN,EAAqBnJ,EAAO0J,EACrC,GACF,CAIA,IAAIC,EAAsB,SACtBC,EAAyB,UACzBC,EAAoB,CACtB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,UAGP,SAASC,EAAkBC,GACzB,OAAOF,EAAkBE,EAC3B,CAEA,SAASC,EAAWxL,GAClB,OAAImL,EAAoB5J,KAAKvB,GACpBA,EAAI1C,QAAQ8N,EAAwBE,GAEtCtL,CACT,CAIA,IAAIyL,EAAmB,uBAEvB,SAAS1L,EAASC,GAChB,OAAOA,EAAI1C,QAAQmO,EAAkB,OACvC,CAIA,SAASC,EAAQd,GACf,OAAQA,GACN,KAAK,EACL,KAAK,GACH,OAAO,EAEX,OAAO,CACT,CAGA,SAASe,EAAaf,GACpB,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,OAAO,EAC/C,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACH,OAAO,EAEX,OAAO,CACT,CAKA,IAAIgB,EAAmB3L,EAAQ,KAG/B,SAAS4L,EAAYN,GACnB,OAAOK,EAAiBrK,KAAKgK,EAC/B,CAUA,SAASO,EAAeP,GACtB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAIA,SAASQ,EAAmB/L,GA+C1B,OA5CAA,EAAMA,EAAI3C,OAAOC,QAAQ,OAAQ,KAQP,MAAtB,IAAIkI,gBACNxF,EAAMA,EAAI1C,QAAQ,KAAM,MAmCnB0C,EAAIwF,cAAcwG,aAC3B,CAQArE,EAAQsE,IAAsB,CAAC,EAC/BtE,EAAQsE,IAAIC,MAAZvE,EAAAA,MACAA,EAAQsE,IAAIE,QAAZxE,EAAAA,KAEAA,EAAQ/I,OAAsBA,EAC9B+I,EAAQhI,SAAsBA,EAC9BgI,EAAQ+B,IAAsBA,EAC9B/B,EAAQoD,WAAsBA,EAC9BpD,EAAQqD,YAAsBA,EAC9BrD,EAAQoC,kBAAsBA,EAC9BpC,EAAQsC,cAAsBA,EAE9BtC,EAAQ6D,WAAsBA,EAC9B7D,EAAQkC,eAAsBA,EAC9BlC,EAAQ+D,QAAsBA,EAC9B/D,EAAQgE,aAAsBA,EAC9BhE,EAAQmE,eAAsBA,EAC9BnE,EAAQkE,YAAsBA,EAC9BlE,EAAQ5H,SAAsBA,EAC9B4H,EAAQoE,mBAAsBA,C,oCCxT9BpE,EAAQyE,eAARzE,EAAAA,MACAA,EAAQ0E,qBAAuB,EAA/B1E,MACAA,EAAQ2E,eAAR3E,EAAAA,K,oCCDA,IAAIqD,EAAc/K,EAAAA,KAAAA,YAGlByH,EAAOC,QAAU,SAA8B3H,EAAKc,EAAKyL,GACvD,IAAI3B,EAAM4B,EACNC,EAAQ,EACRtH,EAAQrE,EACRiG,EAAS,CACP2F,IAAI,EACJ5L,IAAK,EACL2L,MAAO,EACPzM,IAAK,IAGX,GAA4B,KAAxBA,EAAI6K,WAAW/J,GAAuB,CACxCA,IACA,MAAOA,EAAMyL,EAAK,CAEhB,GADA3B,EAAO5K,EAAI6K,WAAW/J,GACT,KAAT8J,EAA0B,OAAO7D,EACrC,GAAa,KAAT6D,EAAyB,OAAO7D,EACpC,GAAa,KAAT6D,EAIF,OAHA7D,EAAOjG,IAAMA,EAAM,EACnBiG,EAAO/G,IAAMgL,EAAYhL,EAAIf,MAAMkG,EAAQ,EAAGrE,IAC9CiG,EAAO2F,IAAK,EACL3F,EAEI,KAAT6D,GAAyB9J,EAAM,EAAIyL,EACrCzL,GAAO,EAITA,GACF,CAGA,OAAOiG,CACT,CAIAyF,EAAQ,EACR,MAAO1L,EAAMyL,EAAK,CAGhB,GAFA3B,EAAO5K,EAAI6K,WAAW/J,GAET,KAAT8J,EAAiB,MAGrB,GAAIA,EAAO,IAAiB,MAATA,EAAiB,MAEpC,GAAa,KAATA,GAAyB9J,EAAM,EAAIyL,EAAvC,CACE,GAAgC,KAA5BvM,EAAI6K,WAAW/J,EAAM,GAAe,MACxCA,GAAO,CAET,KAJA,CAMA,GAAa,KAAT8J,IACF4B,IACIA,EAAQ,IAAM,OAAOzF,EAG3B,GAAa,KAAT6D,EAAuB,CACzB,GAAc,IAAV4B,EAAe,MACnBA,GACF,CAEA1L,GAZA,CAaF,CAEA,OAAIqE,IAAUrE,GACA,IAAV0L,IAEJzF,EAAO/G,IAAMgL,EAAYhL,EAAIf,MAAMkG,EAAOrE,IAC1CiG,EAAO0F,MAAQA,EACf1F,EAAOjG,IAAMA,EACbiG,EAAO2F,IAAK,GANgB3F,CAQ9B,C,gCC1EAW,EAAOC,QAAU,SAAwBgF,EAAOxH,EAAOyH,GACrD,IAAIJ,EAAOK,EAAOC,EAAQC,EACtBC,GAAY,EACZT,EAAMI,EAAMM,OACZC,EAASP,EAAM7L,IAEnB6L,EAAM7L,IAAMqE,EAAQ,EACpBqH,EAAQ,EAER,MAAOG,EAAM7L,IAAMyL,EAAK,CAEtB,GADAO,EAASH,EAAMxQ,IAAI0O,WAAW8B,EAAM7L,KACrB,KAAXgM,IACFN,IACc,IAAVA,GAAa,CACfK,GAAQ,EACR,KACF,CAKF,GAFAE,EAAUJ,EAAM7L,IAChB6L,EAAMpP,GAAG4P,OAAOC,UAAUT,GACX,KAAXG,EACF,GAAIC,IAAYJ,EAAM7L,IAAM,EAE1B0L,SACK,GAAII,EAET,OADAD,EAAM7L,IAAMoM,GACJ,CAGd,CASA,OAPIL,IACFG,EAAWL,EAAM7L,KAInB6L,EAAM7L,IAAMoM,EAELF,CACT,C,oCC1CA,IAAIhC,EAAc/K,EAAAA,KAAAA,YAGlByH,EAAOC,QAAU,SAAwB3H,EAAKc,EAAKyL,GACjD,IAAI3B,EACAkC,EACAL,EAAQ,EACRtH,EAAQrE,EACRiG,EAAS,CACP2F,IAAI,EACJ5L,IAAK,EACL2L,MAAO,EACPzM,IAAK,IAGX,GAAIc,GAAOyL,EAAO,OAAOxF,EAIzB,GAFA+F,EAAS9M,EAAI6K,WAAW/J,GAET,KAAXgM,GAAsC,KAAXA,GAAsC,KAAXA,EAA2B,OAAO/F,EAE5FjG,IAGe,KAAXgM,IAAmBA,EAAS,IAEhC,MAAOhM,EAAMyL,EAAK,CAEhB,GADA3B,EAAO5K,EAAI6K,WAAW/J,GAClB8J,IAASkC,EAKX,OAJA/F,EAAOjG,IAAMA,EAAM,EACnBiG,EAAO0F,MAAQA,EACf1F,EAAO/G,IAAMgL,EAAYhL,EAAIf,MAAMkG,EAAQ,EAAGrE,IAC9CiG,EAAO2F,IAAK,EACL3F,EACF,GAAa,KAAT6D,GAAoC,KAAXkC,EAClC,OAAO/F,EACW,KAAT6D,EACT6B,IACkB,KAAT7B,GAAyB9J,EAAM,EAAIyL,IAC5CzL,IAC4B,KAAxBd,EAAI6K,WAAW/J,IACjB2L,KAIJ3L,GACF,CAEA,OAAOiG,CACT,C,oCCjDA,IAAIsG,EAAepN,EAAQ,KACvBqN,EAAerN,EAAQ,MACvBsN,EAAetN,EAAQ,KACvBuN,EAAevN,EAAQ,MACvBwN,EAAexN,EAAQ,KACvByN,EAAezN,EAAQ,MACvB6F,EAAe7F,EAAQ,MACvBiM,EAAejM,EAAQ,MACvB0N,EAAe1N,EAAQ,MAGvB2N,EAAS,CACXjP,QAASsB,EAAQ,MACjB4N,KAAM5N,EAAQ,MACd6N,WAAY7N,EAAQ,OAYlB8N,EAAe,oCACfC,EAAe,oCAEnB,SAASC,EAAarI,GAEpB,IAAI5F,EAAM4F,EAAIvI,OAAOmI,cAErB,OAAOuI,EAAaxM,KAAKvB,MAAQgO,EAAazM,KAAKvB,EACrD,CAKA,IAAIkO,EAAsB,CAAE,QAAS,SAAU,WAE/C,SAASC,EAAcvI,GACrB,IAAIwI,EAASlC,EAAMmC,MAAMzI,GAAK,GAE9B,GAAIwI,EAAOE,YAOJF,EAAOG,UAAYL,EAAoBpH,QAAQsH,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWX,EAASa,QAAQJ,EAAOE,SAC5C,CAAE,MAAOG,GAAU,CAIvB,OAAOvC,EAAMwC,OAAOxC,EAAMyC,OAAOP,GACnC,CAEA,SAASQ,EAAkBhJ,GACzB,IAAIwI,EAASlC,EAAMmC,MAAMzI,GAAK,GAE9B,GAAIwI,EAAOE,YAOJF,EAAOG,UAAYL,EAAoBpH,QAAQsH,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWX,EAASkB,UAAUT,EAAOE,SAC9C,CAAE,MAAOG,GAAU,CAKvB,OAAOvC,EAAM4C,OAAO5C,EAAMyC,OAAOP,GAASlC,EAAM4C,OAAOC,aAAe,IACxE,CAwIA,SAASvR,EAAWwR,EAAYhJ,GAC9B,KAAMtK,gBAAgB8B,GACpB,OAAO,IAAIA,EAAWwR,EAAYhJ,GAG/BA,GACEqH,EAAM1N,SAASqP,KAClBhJ,EAAUgJ,GAAc,CAAC,EACzBA,EAAa,WAWjBtT,KAAKyR,OAAS,IAAIO,EASlBhS,KAAKuT,MAAQ,IAAIxB,EASjB/R,KAAKwT,KAAO,IAAI1B,EAuBhB9R,KAAKyT,SAAW,IAAI5B,EASpB7R,KAAK0T,QAAU,IAAItJ,EAiBnBpK,KAAKuS,aAAeA,EAQpBvS,KAAKyS,cAAgBA,EAOrBzS,KAAKkT,kBAAoBA,EAWzBlT,KAAK2R,MAAQA,EAQb3R,KAAK4R,QAAUD,EAAMzO,OAAO,CAAC,EAAG0O,GAGhC5R,KAAKsK,QAAU,CAAC,EAChBtK,KAAK2T,UAAUL,GAEXhJ,GAAWtK,KAAKyK,IAAIH,EAC1B,CAsBAxI,EAAWwB,UAAUmH,IAAM,SAAUH,GAEnC,OADAqH,EAAMzO,OAAOlD,KAAKsK,QAASA,GACpBtK,IACT,EAaA8B,EAAWwB,UAAUqQ,UAAY,SAAUC,GACzC,IAAiBN,EAAbjO,EAAOrF,KAEX,GAAI2R,EAAM1N,SAAS2P,KACjBN,EAAaM,EACbA,EAAU1B,EAAOoB,IACZM,GAAW,MAAM,IAAInL,MAAM,+BAAiC6K,EAAa,iBAGhF,IAAKM,EAAW,MAAM,IAAInL,MAAM,8CAchC,OAZImL,EAAQtJ,SAAWjF,EAAKoF,IAAImJ,EAAQtJ,SAEpCsJ,EAAQpR,YACVoB,OAAOC,KAAK+P,EAAQpR,YAAYkB,SAAQ,SAAU6E,GAC5CqL,EAAQpR,WAAW+F,GAAMsL,OAC3BxO,EAAKkD,GAAMuL,MAAMC,WAAWH,EAAQpR,WAAW+F,GAAMsL,OAEnDD,EAAQpR,WAAW+F,GAAMyL,QAC3B3O,EAAKkD,GAAM0L,OAAOF,WAAWH,EAAQpR,WAAW+F,GAAMyL,OAE1D,IAEKhU,IACT,EAoBA8B,EAAWwB,UAAU4Q,OAAS,SAAU3I,EAAM4I,GAC5C,IAAI9I,EAAS,GAERhI,MAAMoI,QAAQF,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAW7H,SAAQ,SAAU0Q,GAC9C/I,EAASA,EAAOK,OAAO1L,KAAKoU,GAAON,MAAMI,OAAO3I,GAAM,GACxD,GAAGvL,MAEHqL,EAASA,EAAOK,OAAO1L,KAAKyR,OAAOwC,OAAOC,OAAO3I,GAAM,IAEvD,IAAI8I,EAAS9I,EAAKvC,QAAO,SAAUT,GAAQ,OAAO8C,EAAOD,QAAQ7C,GAAQ,CAAG,IAE5E,GAAI8L,EAAOtO,SAAWoO,EACpB,MAAM,IAAI1L,MAAM,iDAAmD4L,GAGrE,OAAOrU,IACT,EAUA8B,EAAWwB,UAAUgR,QAAU,SAAU/I,EAAM4I,GAC7C,IAAI9I,EAAS,GAERhI,MAAMoI,QAAQF,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAW7H,SAAQ,SAAU0Q,GAC9C/I,EAASA,EAAOK,OAAO1L,KAAKoU,GAAON,MAAMQ,QAAQ/I,GAAM,GACzD,GAAGvL,MAEHqL,EAASA,EAAOK,OAAO1L,KAAKyR,OAAOwC,OAAOK,QAAQ/I,GAAM,IAExD,IAAI8I,EAAS9I,EAAKvC,QAAO,SAAUT,GAAQ,OAAO8C,EAAOD,QAAQ7C,GAAQ,CAAG,IAE5E,GAAI8L,EAAOtO,SAAWoO,EACpB,MAAM,IAAI1L,MAAM,kDAAoD4L,GAEtE,OAAOrU,IACT,EAmBA8B,EAAWwB,UAAUiR,IAAM,SAAUC,GACnC,IAAI1R,EAAO,CAAE9C,MAAO0L,OAAOrI,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAEjE,OADA+Q,EAAOC,MAAMD,EAAQ1R,GACd9C,IACT,EAkBA8B,EAAWwB,UAAUqP,MAAQ,SAAUlS,EAAKiU,GAC1C,GAAmB,kBAARjU,EACT,MAAM,IAAIgI,MAAM,iCAGlB,IAAIwI,EAAQ,IAAIjR,KAAKwT,KAAKmB,MAAMlU,EAAKT,KAAM0U,GAI3C,OAFA1U,KAAKwT,KAAKoB,QAAQ3D,GAEXA,EAAM4D,MACf,EAcA/S,EAAWwB,UAAUxD,OAAS,SAAUW,EAAKiU,GAG3C,OAFAA,EAAMA,GAAO,CAAC,EAEP1U,KAAKyT,SAAS3T,OAAOE,KAAK2S,MAAMlS,EAAKiU,GAAM1U,KAAKsK,QAASoK,EAClE,EAYA5S,EAAWwB,UAAUwR,YAAc,SAAUrU,EAAKiU,GAChD,IAAIzD,EAAQ,IAAIjR,KAAKwT,KAAKmB,MAAMlU,EAAKT,KAAM0U,GAK3C,OAHAzD,EAAM8D,YAAa,EACnB/U,KAAKwT,KAAKoB,QAAQ3D,GAEXA,EAAM4D,MACf,EAWA/S,EAAWwB,UAAU0R,aAAe,SAAUvU,EAAKiU,GAGjD,OAFAA,EAAMA,GAAO,CAAC,EAEP1U,KAAKyT,SAAS3T,OAAOE,KAAK8U,YAAYrU,EAAKiU,GAAM1U,KAAKsK,QAASoK,EACxE,EAGA1I,EAAOC,QAAUnK,C,mCChkBJyC,EAAA,MAGb,IAAI0Q,EAAkB1Q,EAAQ,MAG1B2Q,EAAS,CAGX,CAAE,QAAc3Q,EAAQ,MAA6B,CAAE,YAAa,cACpE,CAAE,OAAcA,EAAQ,OACxB,CAAE,QAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,aAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,KAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,OAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,YAAcA,EAAQ,OACxB,CAAE,aAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,UAAcA,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,WAAcA,EAAQ,MACxB,CAAE,YAAcA,EAAQ,QAO1B,SAASwN,IAMP/R,KAAK8T,MAAQ,IAAImB,EAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAOnP,OAAQoP,IACjCnV,KAAK8T,MAAMpM,KAAKwN,EAAOC,GAAG,GAAID,EAAOC,GAAG,GAAI,CAAEzU,KAAMwU,EAAOC,GAAG,IAAM,IAAI5R,SAE5E,CAKAwO,EAAYzO,UAAU8R,SAAW,SAAUnE,EAAOoE,EAAWC,GAC3D,IAAItE,EAAImE,EACJtB,EAAQ7T,KAAK8T,MAAMyB,SAAS,IAC5B1K,EAAMgJ,EAAM9N,OACZyP,EAAOH,EACPI,GAAgB,EAChBC,EAAazE,EAAMpP,GAAGyI,QAAQoL,WAElC,MAAOF,EAAOF,EAAS,CAErB,GADArE,EAAMuE,KAAOA,EAAOvE,EAAM0E,eAAeH,GACrCA,GAAQF,EAAW,MAIvB,GAAIrE,EAAM2E,OAAOJ,GAAQvE,EAAM4E,UAAa,MAI5C,GAAI5E,EAAMH,OAAS4E,EAAY,CAC7BzE,EAAMuE,KAAOF,EACb,KACF,CASA,IAAKH,EAAI,EAAGA,EAAItK,EAAKsK,IAEnB,GADAnE,EAAK6C,EAAMsB,GAAGlE,EAAOuE,EAAMF,GAAS,GAChCtE,EAAM,MAKZC,EAAM6E,OAASL,EAGXxE,EAAM8E,QAAQ9E,EAAMuE,KAAO,KAC7BC,GAAgB,GAGlBD,EAAOvE,EAAMuE,KAETA,EAAOF,GAAWrE,EAAM8E,QAAQP,KAClCC,GAAgB,EAChBD,IACAvE,EAAMuE,KAAOA,EAEjB,CACF,EAQAzD,EAAYzO,UAAUqP,MAAQ,SAAUlS,EAAKoB,EAAI6S,EAAKsB,GACpD,IAAI/E,EAECxQ,IAELwQ,EAAQ,IAAIjR,KAAK2U,MAAMlU,EAAKoB,EAAI6S,EAAKsB,GAErChW,KAAKoV,SAASnE,EAAOA,EAAMuE,KAAMvE,EAAMgF,SACzC,EAGAlE,EAAYzO,UAAUqR,MAAQpQ,EAAQ,MAGtCyH,EAAOC,QAAU8F,C,oCCnHJxN,EAAA,MAGb,IAAI0Q,EAAS1Q,EAAQ,MAGjB2Q,EAAS,CACX,CAAE,YAAkB3Q,EAAQ,OAC5B,CAAE,QAAkBA,EAAQ,OAC5B,CAAE,SAAkBA,EAAQ,OAC5B,CAAE,UAAkBA,EAAQ,MAC5B,CAAE,eAAkBA,EAAQ,OAC5B,CAAE,cAAkBA,EAAQ,MAG5B,CAAE,YAAkBA,EAAQ,OAO9B,SAAS2R,IAMPlW,KAAK8T,MAAQ,IAAImB,EAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAOnP,OAAQoP,IACjCnV,KAAK8T,MAAMpM,KAAKwN,EAAOC,GAAG,GAAID,EAAOC,GAAG,GAE5C,CAQAe,EAAK5S,UAAUsR,QAAU,SAAU3D,GACjC,IAAIkE,EAAGgB,EAAGtC,EAIV,IAFAA,EAAQ7T,KAAK8T,MAAMyB,SAAS,IAEvBJ,EAAI,EAAGgB,EAAItC,EAAM9N,OAAQoP,EAAIgB,EAAGhB,IACnCtB,EAAMsB,GAAGlE,EAEb,EAEAiF,EAAK5S,UAAUqR,MAAQpQ,EAAQ,MAG/ByH,EAAOC,QAAUiK,C,oCCvDJ3R,EAAA,MAGb,IAAI0Q,EAAkB1Q,EAAQ,MAM1B2Q,EAAS,CACX,CAAE,OAAmB3Q,EAAQ,OAC7B,CAAE,UAAmBA,EAAQ,OAC7B,CAAE,UAAmBA,EAAQ,MAC7B,CAAE,SAAmBA,EAAQ,OAC7B,CAAE,YAAmBA,EAAQ,OAC7B,CAAE,gBAAmBA,EAAAA,MAAAA,GACrB,CAAE,WAAmBA,EAAAA,MAAAA,GACrB,CAAE,OAAmBA,EAAQ,OAC7B,CAAE,QAAmBA,EAAQ,OAC7B,CAAE,WAAmBA,EAAQ,KAC7B,CAAE,cAAmBA,EAAQ,OAC7B,CAAE,SAAmBA,EAAQ,QAQ3B6R,EAAU,CACZ,CAAE,gBAAmB7R,EAAQ,OAC7B,CAAE,gBAAmBA,EAAAA,MAAAA,GACrB,CAAE,WAAmBA,EAAAA,MAAAA,GAGrB,CAAE,iBAAmBA,EAAQ,QAO/B,SAASyN,IACP,IAAImD,EASJ,IAFAnV,KAAK8T,MAAQ,IAAImB,EAEZE,EAAI,EAAGA,EAAID,EAAOnP,OAAQoP,IAC7BnV,KAAK8T,MAAMpM,KAAKwN,EAAOC,GAAG,GAAID,EAAOC,GAAG,IAW1C,IAFAnV,KAAKiU,OAAS,IAAIgB,EAEbE,EAAI,EAAGA,EAAIiB,EAAQrQ,OAAQoP,IAC9BnV,KAAKiU,OAAOvM,KAAK0O,EAAQjB,GAAG,GAAIiB,EAAQjB,GAAG,GAE/C,CAMAnD,EAAa1O,UAAUoO,UAAY,SAAUT,GAC3C,IAAID,EAAImE,EAAG/P,EAAM6L,EAAM7L,IACnByO,EAAQ7T,KAAK8T,MAAMyB,SAAS,IAC5B1K,EAAMgJ,EAAM9N,OACZ2P,EAAazE,EAAMpP,GAAGyI,QAAQoL,WAC9BW,EAAQpF,EAAMoF,MAGlB,GAA0B,qBAAfA,EAAMjR,GAAjB,CAKA,GAAI6L,EAAMH,MAAQ4E,GAChB,IAAKP,EAAI,EAAGA,EAAItK,EAAKsK,IASnB,GAJAlE,EAAMH,QACNE,EAAK6C,EAAMsB,GAAGlE,GAAO,GACrBA,EAAMH,QAEFE,EAAM,WAcZC,EAAM7L,IAAM6L,EAAMM,OAGfP,GAAMC,EAAM7L,MACjBiR,EAAMjR,GAAO6L,EAAM7L,GA9BnB,MAFE6L,EAAM7L,IAAMiR,EAAMjR,EAiCtB,EAKA4M,EAAa1O,UAAU8R,SAAW,SAAUnE,GAC1C,IAAID,EAAImE,EACJtB,EAAQ7T,KAAK8T,MAAMyB,SAAS,IAC5B1K,EAAMgJ,EAAM9N,OACZ2D,EAAMuH,EAAMM,OACZmE,EAAazE,EAAMpP,GAAGyI,QAAQoL,WAElC,MAAOzE,EAAM7L,IAAMsE,EAAK,CAQtB,GAAIuH,EAAMH,MAAQ4E,EAChB,IAAKP,EAAI,EAAGA,EAAItK,EAAKsK,IAEnB,GADAnE,EAAK6C,EAAMsB,GAAGlE,GAAO,GACjBD,EAAM,MAId,GAAIA,GACF,GAAIC,EAAM7L,KAAOsE,EAAO,WAI1BuH,EAAMqF,SAAWrF,EAAMxQ,IAAIwQ,EAAM7L,MACnC,CAEI6L,EAAMqF,SACRrF,EAAMsF,aAEV,EAQAvE,EAAa1O,UAAUqP,MAAQ,SAAUrO,EAAKzC,EAAI6S,EAAKsB,GACrD,IAAIb,EAAGtB,EAAOhJ,EACVoG,EAAQ,IAAIjR,KAAK2U,MAAMrQ,EAAKzC,EAAI6S,EAAKsB,GAOzC,IALAhW,KAAKoV,SAASnE,GAEd4C,EAAQ7T,KAAKiU,OAAOsB,SAAS,IAC7B1K,EAAMgJ,EAAM9N,OAEPoP,EAAI,EAAGA,EAAItK,EAAKsK,IACnBtB,EAAMsB,GAAGlE,EAEb,EAGAe,EAAa1O,UAAUqR,MAAQpQ,EAAQ,MAGvCyH,EAAOC,QAAU+F,C,gCCnLjBhG,EAAOC,QAAU,CACf3B,QAAS,CACPkM,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdjD,SAAc,EAGdkD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhBlT,WAAY,CAEVgR,KAAM,CACJK,MAAO,CACL,YACA,QACA,SACA,cAIJN,MAAO,CACLM,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,cAIJpC,OAAQ,CACNoC,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,QAEFG,OAAQ,CACN,gBACA,WACA,oB,gCCvERhI,EAAOC,QAAU,CACf3B,QAAS,CACPkM,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdjD,SAAc,EAGdkD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,KAGhBlT,WAAY,CAEVgR,KAAM,CAAC,EACPD,MAAO,CAAC,EACR9B,OAAQ,CAAC,G,gCChCbzF,EAAOC,QAAU,CACf3B,QAAS,CACPkM,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdjD,SAAc,EAGdkD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhBlT,WAAY,CAEVgR,KAAM,CACJK,MAAO,CACL,YACA,QACA,SACA,cAIJN,MAAO,CACLM,MAAO,CACL,cAIJpC,OAAQ,CACNoC,MAAO,CACL,QAEFG,OAAQ,CACN,gBACA,oB,mCCnDKzP,EAAA,MAGb,IAAIrB,EAAkBqB,EAAAA,KAAAA,OAClB+K,EAAkB/K,EAAAA,KAAAA,YAClBuL,EAAkBvL,EAAAA,KAAAA,WAKlBwS,EAAgB,CAAC,EAoHrB,SAASlF,IA8BP7R,KAAK6T,MAAQ3Q,EAAO,CAAC,EAAG6T,EAC1B,CAhJAA,EAAcC,YAAc,SAAUnC,EAAQhJ,EAAKvB,EAASoK,EAAKuC,GAC/D,IAAIC,EAAQrC,EAAOhJ,GAEnB,MAAQ,QAAUoL,EAAIE,YAAYD,GAAS,IACnCpH,EAAW+E,EAAOhJ,GAAK7K,SACvB,SACV,EAGA+V,EAAcK,WAAa,SAAUvC,EAAQhJ,EAAKvB,EAASoK,EAAKuC,GAC9D,IAAIC,EAAQrC,EAAOhJ,GAEnB,MAAQ,OAASoL,EAAIE,YAAYD,GAAS,UAClCpH,EAAW+E,EAAOhJ,GAAK7K,SACvB,iBACV,EAGA+V,EAAcM,MAAQ,SAAUxC,EAAQhJ,EAAKvB,EAASoK,EAAKuC,GACzD,IAIIK,EAAanC,EAAGrJ,EAAKyL,EAAUC,EAJ/BN,EAAQrC,EAAOhJ,GACf4L,EAAOP,EAAMO,KAAOnI,EAAY4H,EAAMO,MAAM9V,OAAS,GACrD+V,EAAW,GACXC,EAAY,GAehB,OAZIF,IACF3L,EAAM2L,EAAK/Q,MAAM,UACjBgR,EAAW5L,EAAI,GACf6L,EAAY7L,EAAIvI,MAAM,GAAGqE,KAAK,KAI9B0P,EADEhN,EAAQwM,WACIxM,EAAQwM,UAAUI,EAAMlW,QAAS0W,EAAUC,IAE3C7H,EAAWoH,EAAMlW,SAGG,IAAhCsW,EAAYlM,QAAQ,QACfkM,EAAc,KAMnBG,GACFtC,EAAW+B,EAAMU,UAAU,SAC3BL,EAAWL,EAAM5W,MAAQ4W,EAAM5W,MAAMiD,QAAU,GAE3C4R,EAAI,EACNoC,EAAS7P,KAAK,CAAE,QAAS4C,EAAQqM,WAAae,KAE9CH,EAASpC,GAAKoC,EAASpC,GAAG5R,QAC1BgU,EAASpC,GAAG,IAAM,IAAM7K,EAAQqM,WAAae,GAI/CF,EAAW,CACTlX,MAAOiX,GAGD,aAAeN,EAAIE,YAAYK,GAAY,IAC3CF,EACA,mBAIF,aAAeL,EAAIE,YAAYD,GAAS,IACxCI,EACA,iBACV,EAGAP,EAAcvW,MAAQ,SAAUqU,EAAQhJ,EAAKvB,EAASoK,EAAKuC,GACzD,IAAIC,EAAQrC,EAAOhJ,GAUnB,OAHAqL,EAAM5W,MAAM4W,EAAMU,UAAU,QAAQ,GAClCX,EAAIY,mBAAmBX,EAAMY,SAAUxN,EAASoK,GAE3CuC,EAAIc,YAAYlD,EAAQhJ,EAAKvB,EACtC,EAGAyM,EAAciB,UAAY,SAAUnD,EAAQhJ,EAAKvB,GAC/C,OAAOA,EAAQmM,SAAW,WAAa,QACzC,EACAM,EAAckB,UAAY,SAAUpD,EAAQhJ,EAAKvB,GAC/C,OAAOA,EAAQoM,OAAUpM,EAAQmM,SAAW,WAAa,SAAY,IACvE,EAGAM,EAAc5R,KAAO,SAAU0P,EAAQhJ,GACrC,OAAOiE,EAAW+E,EAAOhJ,GAAK7K,QAChC,EAGA+V,EAAcmB,WAAa,SAAUrD,EAAQhJ,GAC3C,OAAOgJ,EAAOhJ,GAAK7K,OACrB,EACA+V,EAAcoB,YAAc,SAAUtD,EAAQhJ,GAC5C,OAAOgJ,EAAOhJ,GAAK7K,OACrB,EA+CA6Q,EAASvO,UAAU6T,YAAc,SAAqBD,GACpD,IAAI/B,EAAGgB,EAAG9K,EAEV,IAAK6L,EAAM5W,MAAS,MAAO,GAI3B,IAFA+K,EAAS,GAEJ8J,EAAI,EAAGgB,EAAIe,EAAM5W,MAAMyF,OAAQoP,EAAIgB,EAAGhB,IACzC9J,GAAU,IAAMyE,EAAWoH,EAAM5W,MAAM6U,GAAG,IAAM,KAAOrF,EAAWoH,EAAM5W,MAAM6U,GAAG,IAAM,IAGzF,OAAO9J,CACT,EAYAwG,EAASvO,UAAUyU,YAAc,SAAqBlD,EAAQhJ,EAAKvB,GACjE,IAAI8N,EACA/M,EAAS,GACTgN,GAAS,EACTnB,EAAQrC,EAAOhJ,GAGnB,OAAIqL,EAAMoB,OACD,IAULpB,EAAM3D,QAA4B,IAAnB2D,EAAMqB,SAAkB1M,GAAOgJ,EAAOhJ,EAAM,GAAGyM,SAChEjN,GAAU,MAIZA,KAA8B,IAAnB6L,EAAMqB,QAAiB,KAAO,KAAOrB,EAAMsB,IAGtDnN,GAAUrL,KAAKmX,YAAYD,GAGL,IAAlBA,EAAMqB,SAAiBjO,EAAQmM,WACjCpL,GAAU,MAIR6L,EAAM3D,QACR8E,GAAS,EAEa,IAAlBnB,EAAMqB,SACJ1M,EAAM,EAAIgJ,EAAO9O,SACnBqS,EAAYvD,EAAOhJ,EAAM,IAEF,WAAnBuM,EAAUK,MAAqBL,EAAUE,SAKX,IAAvBF,EAAUG,SAAkBH,EAAUI,MAAQtB,EAAMsB,OAF7DH,GAAS,KAWjBhN,GAAUgN,EAAS,MAAQ,IAEpBhN,EACT,EAWAwG,EAASvO,UAAU0R,aAAe,SAAUH,EAAQvK,EAASoK,GAK3D,IAJA,IAAI+D,EACApN,EAAS,GACTwI,EAAQ7T,KAAK6T,MAERsB,EAAI,EAAGtK,EAAMgK,EAAO9O,OAAQoP,EAAItK,EAAKsK,IAC5CsD,EAAO5D,EAAOM,GAAGsD,KAEU,qBAAhB5E,EAAM4E,GACfpN,GAAUwI,EAAM4E,GAAM5D,EAAQM,EAAG7K,EAASoK,EAAK1U,MAE/CqL,GAAUrL,KAAK+X,YAAYlD,EAAQM,EAAG7K,GAI1C,OAAOe,CACT,EAaAwG,EAASvO,UAAUuU,mBAAqB,SAAUhD,EAAQvK,EAASoK,GAGjE,IAFA,IAAIrJ,EAAS,GAEJ8J,EAAI,EAAGtK,EAAMgK,EAAO9O,OAAQoP,EAAItK,EAAKsK,IACrB,SAAnBN,EAAOM,GAAGsD,KACZpN,GAAUwJ,EAAOM,GAAGnU,QACQ,UAAnB6T,EAAOM,GAAGsD,KACnBpN,GAAUrL,KAAK6X,mBAAmBhD,EAAOM,GAAG2C,SAAUxN,EAASoK,GACnC,cAAnBG,EAAOM,GAAGsD,OACnBpN,GAAU,MAId,OAAOA,CACT,EAYAwG,EAASvO,UAAUxD,OAAS,SAAU+U,EAAQvK,EAASoK,GACrD,IAAIS,EAAGtK,EAAK4N,EACRpN,EAAS,GACTwI,EAAQ7T,KAAK6T,MAEjB,IAAKsB,EAAI,EAAGtK,EAAMgK,EAAO9O,OAAQoP,EAAItK,EAAKsK,IACxCsD,EAAO5D,EAAOM,GAAGsD,KAEJ,WAATA,EACFpN,GAAUrL,KAAKgV,aAAaH,EAAOM,GAAG2C,SAAUxN,EAASoK,GACzB,qBAAhBb,EAAM4E,GACtBpN,GAAUwI,EAAMgB,EAAOM,GAAGsD,MAAM5D,EAAQM,EAAG7K,EAASoK,EAAK1U,MAEzDqL,GAAUrL,KAAK+X,YAAYlD,EAAQM,EAAG7K,EAASoK,GAInD,OAAOrJ,CACT,EAEAW,EAAOC,QAAU4F,C,oCC7TjB,SAASoD,IAUPjV,KAAK0Y,UAAY,GAOjB1Y,KAAK2Y,UAAY,IACnB,CArBApU,EAAA,MA6BA0Q,EAAM3R,UAAUsV,SAAW,SAAUrQ,GACnC,IAAK,IAAI4M,EAAI,EAAGA,EAAInV,KAAK0Y,UAAU3S,OAAQoP,IACzC,GAAInV,KAAK0Y,UAAUvD,GAAG5M,OAASA,EAC7B,OAAO4M,EAGX,OAAQ,CACV,EAKAF,EAAM3R,UAAUuV,YAAc,WAC5B,IAAIxT,EAAOrF,KACP8Y,EAAS,CAAE,IAGfzT,EAAKqT,UAAUhV,SAAQ,SAAUqV,GAC1BA,EAAKC,SAEVD,EAAKrY,IAAIgD,SAAQ,SAAUuV,GACrBH,EAAO1N,QAAQ6N,GAAW,GAC5BH,EAAOpR,KAAKuR,EAEhB,GACF,IAEA5T,EAAKsT,UAAY,CAAC,EAElBG,EAAOpV,SAAQ,SAAU0Q,GACvB/O,EAAKsT,UAAUvE,GAAS,GACxB/O,EAAKqT,UAAUhV,SAAQ,SAAUqV,GAC1BA,EAAKC,UAEN5E,GAAS2E,EAAKrY,IAAI0K,QAAQgJ,GAAS,GAEvC/O,EAAKsT,UAAUvE,GAAO1M,KAAKqR,EAAKG,IAClC,GACF,GACF,EA4BAjE,EAAM3R,UAAU6V,GAAK,SAAU5Q,EAAM2Q,EAAI5O,GACvC,IAAIP,EAAQ/J,KAAK4Y,SAASrQ,GACtB6Q,EAAM9O,GAAW,CAAC,EAEtB,IAAe,IAAXP,EAAgB,MAAM,IAAItB,MAAM,0BAA4BF,GAEhEvI,KAAK0Y,UAAU3O,GAAOmP,GAAKA,EAC3BlZ,KAAK0Y,UAAU3O,GAAOrJ,IAAM0Y,EAAI1Y,KAAO,GACvCV,KAAK2Y,UAAY,IACnB,EA2BA1D,EAAM3R,UAAU+V,OAAS,SAAUC,EAAYC,EAAUL,EAAI5O,GAC3D,IAAIP,EAAQ/J,KAAK4Y,SAASU,GACtBF,EAAM9O,GAAW,CAAC,EAEtB,IAAe,IAAXP,EAAgB,MAAM,IAAItB,MAAM,0BAA4B6Q,GAEhEtZ,KAAK0Y,UAAUc,OAAOzP,EAAO,EAAG,CAC9BxB,KAAMgR,EACNP,SAAS,EACTE,GAAIA,EACJxY,IAAK0Y,EAAI1Y,KAAO,KAGlBV,KAAK2Y,UAAY,IACnB,EA2BA1D,EAAM3R,UAAUmW,MAAQ,SAAUC,EAAWH,EAAUL,EAAI5O,GACzD,IAAIP,EAAQ/J,KAAK4Y,SAASc,GACtBN,EAAM9O,GAAW,CAAC,EAEtB,IAAe,IAAXP,EAAgB,MAAM,IAAItB,MAAM,0BAA4BiR,GAEhE1Z,KAAK0Y,UAAUc,OAAOzP,EAAQ,EAAG,EAAG,CAClCxB,KAAMgR,EACNP,SAAS,EACTE,GAAIA,EACJxY,IAAK0Y,EAAI1Y,KAAO,KAGlBV,KAAK2Y,UAAY,IACnB,EAyBA1D,EAAM3R,UAAUoE,KAAO,SAAU6R,EAAUL,EAAI5O,GAC7C,IAAI8O,EAAM9O,GAAW,CAAC,EAEtBtK,KAAK0Y,UAAUhR,KAAK,CAClBa,KAAMgR,EACNP,SAAS,EACTE,GAAIA,EACJxY,IAAK0Y,EAAI1Y,KAAO,KAGlBV,KAAK2Y,UAAY,IACnB,EAeA1D,EAAM3R,UAAU4Q,OAAS,SAAU3I,EAAM4I,GAClC9Q,MAAMoI,QAAQF,KAASA,EAAO,CAAEA,IAErC,IAAIF,EAAS,GAeb,OAZAE,EAAK7H,SAAQ,SAAU6E,GACrB,IAAIsD,EAAM7L,KAAK4Y,SAASrQ,GAExB,GAAIsD,EAAM,EAAG,CACX,GAAIsI,EAAiB,OACrB,MAAM,IAAI1L,MAAM,oCAAsCF,EACxD,CACAvI,KAAK0Y,UAAU7M,GAAKmN,SAAU,EAC9B3N,EAAO3D,KAAKa,EACd,GAAGvI,MAEHA,KAAK2Y,UAAY,KACVtN,CACT,EAaA4J,EAAM3R,UAAUyQ,WAAa,SAAUxI,EAAM4I,GACtC9Q,MAAMoI,QAAQF,KAASA,EAAO,CAAEA,IAErCvL,KAAK0Y,UAAUhV,SAAQ,SAAUqV,GAAQA,EAAKC,SAAU,CAAO,IAE/DhZ,KAAKkU,OAAO3I,EAAM4I,EACpB,EAeAc,EAAM3R,UAAUgR,QAAU,SAAU/I,EAAM4I,GACnC9Q,MAAMoI,QAAQF,KAASA,EAAO,CAAEA,IAErC,IAAIF,EAAS,GAeb,OAZAE,EAAK7H,SAAQ,SAAU6E,GACrB,IAAIsD,EAAM7L,KAAK4Y,SAASrQ,GAExB,GAAIsD,EAAM,EAAG,CACX,GAAIsI,EAAiB,OACrB,MAAM,IAAI1L,MAAM,oCAAsCF,EACxD,CACAvI,KAAK0Y,UAAU7M,GAAKmN,SAAU,EAC9B3N,EAAO3D,KAAKa,EACd,GAAGvI,MAEHA,KAAK2Y,UAAY,KACVtN,CACT,EAYA4J,EAAM3R,UAAUiS,SAAW,SAAUoE,GAMnC,OALuB,OAAnB3Z,KAAK2Y,WACP3Y,KAAK6Y,cAIA7Y,KAAK2Y,UAAUgB,IAAc,EACtC,EAEA3N,EAAOC,QAAUgJ,C,oCC7VJ1Q,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAGdyH,EAAOC,QAAU,SAAoBgF,EAAOoE,EAAWC,EAASsE,GAC9D,IAAIC,EACAhK,EACAsF,EACA2E,EACA3D,EACA4D,EACAhJ,EACAiJ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAxD,EACAyD,EACAC,EAAa3J,EAAMgF,QACnB7Q,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAG7D,GAAoC,KAAhC5E,EAAMxQ,IAAI0O,WAAW/J,KAA0B,OAAO,EAI1D,GAAIwU,EAAU,OAAO,EAGrBE,EAAUG,EAAShJ,EAAM2E,OAAOP,GAAa,EAGX,KAA9BpE,EAAMxQ,IAAI0O,WAAW/J,IAGvBA,IACA0U,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9BvJ,EAAMxQ,IAAI0O,WAAW/J,IAC9BoV,GAAmB,GAEdvJ,EAAM+J,QAAQ3F,GAAa4E,GAAU,IAAM,GAG9C7U,IACA0U,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAY,CAAEjJ,EAAM4J,OAAOxF,IAC3BpE,EAAM4J,OAAOxF,GAAajQ,EAE1B,MAAOA,EAAMyL,EAAK,CAGhB,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,IAEtB4K,EAAQH,GAOV,MANW,IAAPA,EACFoK,GAAU,GAAKA,EAAShJ,EAAM+J,QAAQ3F,IAAcwE,EAAY,EAAI,IAAM,EAE1EI,IAMJ7U,GACF,CAoCA,IAlCA+U,EAAa,CAAElJ,EAAM+J,QAAQ3F,IAC7BpE,EAAM+J,QAAQ3F,GAAapE,EAAM2E,OAAOP,GAAa,GAAKmF,EAAmB,EAAI,GAEjFT,EAAgB3U,GAAOyL,EAEvByJ,EAAY,CAAErJ,EAAM2E,OAAOP,IAC3BpE,EAAM2E,OAAOP,GAAa4E,EAASH,EAEnCS,EAAY,CAAEtJ,EAAM6J,OAAOzF,IAC3BpE,EAAM6J,OAAOzF,GAAajQ,EAAM6L,EAAM4J,OAAOxF,GAE7CqF,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,cAEhD8E,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,aAoBdjB,EAAW3E,EAAY,EAAG2E,EAAW1E,EAAS0E,IAAY,CAc7D,GALAW,EAAc1J,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAE7CzQ,EAAM6L,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,GAC5CnJ,EAAMI,EAAM8J,OAAOf,GAEf5U,GAAOyL,EAET,MAGF,GAAoC,KAAhCI,EAAMxQ,IAAI0O,WAAW/J,MAA2BuV,EAApD,CAoEA,GAAIZ,EAAiB,MAIrB,IADAU,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAGF,GAAIA,EAAW,CAKbxJ,EAAMgF,QAAU+D,EAEQ,IAApB/I,EAAM4E,YAIRqE,EAAUxS,KAAKuJ,EAAM4J,OAAOb,IAC5BG,EAAWzS,KAAKuJ,EAAM+J,QAAQhB,IAC9BO,EAAU7S,KAAKuJ,EAAM6J,OAAOd,IAC5BM,EAAU5S,KAAKuJ,EAAM2E,OAAOoE,IAC5B/I,EAAM2E,OAAOoE,IAAa/I,EAAM4E,WAGlC,KACF,CAEAqE,EAAUxS,KAAKuJ,EAAM4J,OAAOb,IAC5BG,EAAWzS,KAAKuJ,EAAM+J,QAAQhB,IAC9BO,EAAU7S,KAAKuJ,EAAM6J,OAAOd,IAC5BM,EAAU5S,KAAKuJ,EAAM2E,OAAOoE,IAI5B/I,EAAM2E,OAAOoE,IAAa,CA1C1B,KAjEA,CAIEF,EAAUG,EAAShJ,EAAM2E,OAAOoE,GAAY,EAGV,KAA9B/I,EAAMxQ,IAAI0O,WAAW/J,IAGvBA,IACA0U,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9BvJ,EAAMxQ,IAAI0O,WAAW/J,IAC9BoV,GAAmB,GAEdvJ,EAAM+J,QAAQhB,GAAYC,GAAU,IAAM,GAG7C7U,IACA0U,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAUxS,KAAKuJ,EAAM4J,OAAOb,IAC5B/I,EAAM4J,OAAOb,GAAY5U,EAEzB,MAAOA,EAAMyL,EAAK,CAGhB,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,IAEtB4K,EAAQH,GAOV,MANW,IAAPA,EACFoK,GAAU,GAAKA,EAAShJ,EAAM+J,QAAQhB,IAAaH,EAAY,EAAI,IAAM,EAEzEI,IAMJ7U,GACF,CAEA2U,EAAgB3U,GAAOyL,EAEvBsJ,EAAWzS,KAAKuJ,EAAM+J,QAAQhB,IAC9B/I,EAAM+J,QAAQhB,GAAY/I,EAAM2E,OAAOoE,GAAY,GAAKQ,EAAmB,EAAI,GAE/EF,EAAU5S,KAAKuJ,EAAM2E,OAAOoE,IAC5B/I,EAAM2E,OAAOoE,GAAYC,EAASH,EAElCS,EAAU7S,KAAKuJ,EAAM6J,OAAOd,IAC5B/I,EAAM6J,OAAOd,GAAY5U,EAAM6L,EAAM4J,OAAOb,EAE9C,CA2CF,CAoBA,IAlBAI,EAAYnJ,EAAM4E,UAClB5E,EAAM4E,UAAY,EAElBqB,EAAejG,EAAMvJ,KAAK,kBAAmB,aAAc,GAC3DwP,EAAMgE,OAAS,IACfhE,EAAMjO,IAAS8H,EAAQ,CAAEsE,EAAW,GAEpCpE,EAAMpP,GAAG0R,MAAM6B,SAASnE,EAAOoE,EAAW2E,GAE1C9C,EAAejG,EAAMvJ,KAAK,mBAAoB,cAAe,GAC7DwP,EAAMgE,OAAS,IAEfjK,EAAMgF,QAAU2E,EAChB3J,EAAMgK,WAAaZ,EACnBtJ,EAAM,GAAKE,EAAMuE,KAIZL,EAAI,EAAGA,EAAIoF,EAAUxU,OAAQoP,IAChClE,EAAM4J,OAAO1F,EAAIE,GAAa6E,EAAU/E,GACxClE,EAAM6J,OAAO3F,EAAIE,GAAakF,EAAUpF,GACxClE,EAAM2E,OAAOT,EAAIE,GAAaiF,EAAUnF,GACxClE,EAAM+J,QAAQ7F,EAAIE,GAAa8E,EAAWhF,GAI5C,OAFAlE,EAAM4E,UAAYuE,GAEX,CACT,C,oCCzRa7V,EAAA,MAGbyH,EAAOC,QAAU,SAAcgF,EAAOoE,EAAWC,GAC/C,IAAI0E,EAAUmB,EAAMjE,EAEpB,GAAIjG,EAAM2E,OAAOP,GAAapE,EAAM4E,UAAY,EAAK,OAAO,EAE5DsF,EAAOnB,EAAW3E,EAAY,EAE9B,MAAO2E,EAAW1E,EAChB,GAAIrE,EAAM8E,QAAQiE,GAChBA,QADF,CAKA,KAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,WAAa,GAKhD,MAJEmE,IACAmB,EAAOnB,CAJT,CAgBF,OANA/I,EAAMuE,KAAO2F,EAEbjE,EAAgBjG,EAAMvJ,KAAK,aAAc,OAAQ,GACjDwP,EAAMlW,QAAUiQ,EAAMmK,SAAS/F,EAAW8F,EAAM,EAAIlK,EAAM4E,WAAW,GAAS,KAC9EqB,EAAMjO,IAAU,CAAEoM,EAAWpE,EAAMuE,OAE5B,CACT,C,oCC/BajR,EAAA,MAGbyH,EAAOC,QAAU,SAAegF,EAAOoE,EAAWC,EAASsE,GACzD,IAAIxI,EAAQvG,EAAKzI,EAAQ4X,EAAUqB,EAAKnE,EAAOgE,EAC3CI,GAAgB,EAChBlW,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAE7D,GAAIzQ,EAAM,EAAIyL,EAAO,OAAO,EAI5B,GAFAO,EAASH,EAAMxQ,IAAI0O,WAAW/J,GAEf,MAAXgM,GAAqC,KAAXA,EAC5B,OAAO,EAST,GALAiK,EAAMjW,EACNA,EAAM6L,EAAMsK,UAAUnW,EAAKgM,GAE3BvG,EAAMzF,EAAMiW,EAERxQ,EAAM,EAAK,OAAO,EAKtB,GAHAqQ,EAASjK,EAAMxQ,IAAI8C,MAAM8X,EAAKjW,GAC9BhD,EAAS6O,EAAMxQ,IAAI8C,MAAM6B,EAAKyL,GAEf,KAAXO,GACEhP,EAAOgJ,QAAQsD,OAAOC,aAAayC,KAAY,EACjD,OAAO,EAKX,GAAIwI,EAAU,OAAO,EAKrB,IAFAI,EAAW3E,IAEF,CAEP,GADA2E,IACIA,GAAY1E,EAGd,MAMF,GAHAlQ,EAAMiW,EAAMpK,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,GAClDnJ,EAAMI,EAAM8J,OAAOf,GAEf5U,EAAMyL,GAAOI,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAI9C,MAGF,GAAI5E,EAAMxQ,IAAI0O,WAAW/J,KAASgM,MAE9BH,EAAM2E,OAAOoE,GAAY/I,EAAM4E,WAAa,KAKhDzQ,EAAM6L,EAAMsK,UAAUnW,EAAKgM,KAGvBhM,EAAMiW,EAAMxQ,KAGhBzF,EAAM6L,EAAMuK,WAAWpW,KAEnBA,EAAMyL,MAAV,CAEAyK,GAAgB,EAEhB,KAJ2B,CAK7B,CAaA,OAVAzQ,EAAMoG,EAAM2E,OAAOP,GAEnBpE,EAAMuE,KAAOwE,GAAYsB,EAAgB,EAAI,GAE7CpE,EAAgBjG,EAAMvJ,KAAK,QAAS,OAAQ,GAC5CwP,EAAMO,KAAUrV,EAChB8U,EAAMlW,QAAUiQ,EAAMmK,SAAS/F,EAAY,EAAG2E,EAAUnP,GAAK,GAC7DqM,EAAMgE,OAAUA,EAChBhE,EAAMjO,IAAU,CAAEoM,EAAWpE,EAAMuE,OAE5B,CACT,C,oCC/FajR,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAGdyH,EAAOC,QAAU,SAAiBgF,EAAOoE,EAAWC,EAASsE,GAC3D,IAAI/J,EAAIiB,EAAO2K,EAAKvE,EAChB9R,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAI7D,GAFAhG,EAAMoB,EAAMxQ,IAAI0O,WAAW/J,GAEhB,KAAPyK,GAAsBzK,GAAOyL,EAAO,OAAO,EAG/CC,EAAQ,EACRjB,EAAKoB,EAAMxQ,IAAI0O,aAAa/J,GAC5B,MAAc,KAAPyK,GAAsBzK,EAAMyL,GAAOC,GAAS,EACjDA,IACAjB,EAAKoB,EAAMxQ,IAAI0O,aAAa/J,GAG9B,QAAI0L,EAAQ,GAAM1L,EAAMyL,IAAQb,EAAQH,MAEpC+J,IAIJ/I,EAAMI,EAAMyK,eAAe7K,EAAKzL,GAChCqW,EAAMxK,EAAM0K,cAAc9K,EAAK,GAAMzL,GACjCqW,EAAMrW,GAAO4K,EAAQiB,EAAMxQ,IAAI0O,WAAWsM,EAAM,MAClD5K,EAAM4K,GAGRxK,EAAMuE,KAAOH,EAAY,EAEzB6B,EAAejG,EAAMvJ,KAAK,eAAgB,IAAMgH,OAAOoC,GAAQ,GAC/DoG,EAAMgE,OAAS,WAAW3X,MAAM,EAAGuN,GACnCoG,EAAMjO,IAAS,CAAEoM,EAAWpE,EAAMuE,MAElC0B,EAAiBjG,EAAMvJ,KAAK,SAAU,GAAI,GAC1CwP,EAAMlW,QAAWiQ,EAAMxQ,IAAI8C,MAAM6B,EAAKyL,GAAKlP,OAC3CuV,EAAMjO,IAAW,CAAEoM,EAAWpE,EAAMuE,MACpC0B,EAAMY,SAAW,GAEjBZ,EAAejG,EAAMvJ,KAAK,gBAAiB,IAAMgH,OAAOoC,IAAS,GACjEoG,EAAMgE,OAAS,WAAW3X,MAAM,EAAGuN,KAtBd,EAyBvB,C,oCCpDavM,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAGdyH,EAAOC,QAAU,SAAYgF,EAAOoE,EAAWC,EAASsE,GACtD,IAAIxI,EAAQwK,EAAK/L,EAAIqH,EACjB9R,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAK7D,GAHAzE,EAASH,EAAMxQ,IAAI0O,WAAW/J,KAGf,KAAXgM,GACW,KAAXA,GACW,KAAXA,EACF,OAAO,EAKTwK,EAAM,EACN,MAAOxW,EAAMyL,EAAK,CAEhB,GADAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,KACtByK,IAAOuB,IAAWpB,EAAQH,GAAO,OAAO,EACxCA,IAAOuB,GAAUwK,GACvB,CAEA,QAAIA,EAAM,KAENhC,IAEJ3I,EAAMuE,KAAOH,EAAY,EAEzB6B,EAAejG,EAAMvJ,KAAK,KAAM,KAAM,GACtCwP,EAAMjO,IAAS,CAAEoM,EAAWpE,EAAMuE,MAClC0B,EAAMgE,OAAS7X,MAAMuY,EAAM,GAAGhU,KAAK8G,OAAOC,aAAayC,MANlC,EASvB,C,oCC1Ca7M,EAAA,MAGb,IAAIsX,EAActX,EAAQ,MACtBuJ,EAAyBvJ,EAAAA,MAAAA,EAKzBuX,EAAiB,CACnB,CAAE,6CAA8C,oCAAoC,GACpF,CAAE,QAAgB,OAAS,GAC3B,CAAE,OAAgB,OAAS,GAC3B,CAAE,WAAgB,KAAS,GAC3B,CAAE,eAAgB,SAAS,GAC3B,CAAE,IAAIrW,OAAO,QAAUoW,EAAYjU,KAAK,KAAO,mBAAoB,KAAM,MAAM,GAC/E,CAAE,IAAInC,OAAOqI,EAAuBnK,OAAS,SAAW,MAAM,IAIhEqI,EAAOC,QAAU,SAAoBgF,EAAOoE,EAAWC,EAASsE,GAC9D,IAAIzE,EAAG6E,EAAU9C,EAAO6E,EACpB3W,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAE7D,IAAK5E,EAAMpP,GAAGyI,QAAQkM,KAAQ,OAAO,EAErC,GAAkC,KAA9BvF,EAAMxQ,IAAI0O,WAAW/J,GAAwB,OAAO,EAIxD,IAFA2W,EAAW9K,EAAMxQ,IAAI8C,MAAM6B,EAAKyL,GAE3BsE,EAAI,EAAGA,EAAI2G,EAAe/V,OAAQoP,IACrC,GAAI2G,EAAe3G,GAAG,GAAGtP,KAAKkW,GAAa,MAG7C,GAAI5G,IAAM2G,EAAe/V,OAAU,OAAO,EAE1C,GAAI6T,EAEF,OAAOkC,EAAe3G,GAAG,GAO3B,GAJA6E,EAAW3E,EAAY,GAIlByG,EAAe3G,GAAG,GAAGtP,KAAKkW,GAC7B,KAAO/B,EAAW1E,EAAS0E,IAAY,CACrC,GAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAa,MAMhD,GAJAzQ,EAAM6L,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,GAC5CnJ,EAAMI,EAAM8J,OAAOf,GACnB+B,EAAW9K,EAAMxQ,IAAI8C,MAAM6B,EAAKyL,GAE5BiL,EAAe3G,GAAG,GAAGtP,KAAKkW,GAAW,CACf,IAApBA,EAAShW,QAAgBiU,IAC7B,KACF,CACF,CASF,OANA/I,EAAMuE,KAAOwE,EAEb9C,EAAgBjG,EAAMvJ,KAAK,aAAc,GAAI,GAC7CwP,EAAMjO,IAAU,CAAEoM,EAAW2E,GAC7B9C,EAAMlW,QAAUiQ,EAAMmK,SAAS/F,EAAW2E,EAAU/I,EAAM4E,WAAW,IAE9D,CACT,C,mCCvEatR,EAAA,MAGbyH,EAAOC,QAAU,SAAkBgF,EAAOoE,EAAWC,GACnD,IAAItU,EAASyZ,EAAWtF,EAAGgB,EAAGe,EAAO9R,EAAKyL,EAAKC,EAAOM,EACxBiJ,EAA1BL,EAAW3E,EAAY,EACvBqF,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,aAGpD,GAAItE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAM7D,IAJAwE,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,YAGZjB,EAAW1E,IAAYrE,EAAM8E,QAAQiE,GAAWA,IAGrD,KAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAY,GAA/C,CAKA,GAAI5E,EAAM2E,OAAOoE,IAAa/I,EAAM4E,YAClCzQ,EAAM6L,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,GAC5CnJ,EAAMI,EAAM8J,OAAOf,GAEf5U,EAAMyL,IACRO,EAASH,EAAMxQ,IAAI0O,WAAW/J,IAEf,KAAXgM,GAAqC,KAAXA,KAC5BhM,EAAM6L,EAAMsK,UAAUnW,EAAKgM,GAC3BhM,EAAM6L,EAAMuK,WAAWpW,GAEnBA,GAAOyL,KAAK,CACdC,EAAoB,KAAXM,EAAyB,EAAI,EACtC,KACF,CAMN,KAAIH,EAAM2E,OAAOoE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CAzBkB,CAsChE,QAAK3J,IAKL9P,EAAUiQ,EAAMmK,SAAS/F,EAAW2E,EAAU/I,EAAM4E,WAAW,GAAOlU,OAEtEsP,EAAMuE,KAAOwE,EAAW,EAExB9C,EAAiBjG,EAAMvJ,KAAK,eAAgB,IAAMgH,OAAOoC,GAAQ,GACjEoG,EAAMgE,OAAWxM,OAAOC,aAAayC,GACrC8F,EAAMjO,IAAW,CAAEoM,EAAWpE,EAAMuE,MAEpC0B,EAAiBjG,EAAMvJ,KAAK,SAAU,GAAI,GAC1CwP,EAAMlW,QAAWA,EACjBkW,EAAMjO,IAAW,CAAEoM,EAAWpE,EAAMuE,KAAO,GAC3C0B,EAAMY,SAAW,GAEjBZ,EAAiBjG,EAAMvJ,KAAK,gBAAiB,IAAMgH,OAAOoC,IAAS,GACnEoG,EAAMgE,OAAWxM,OAAOC,aAAayC,GAErCH,EAAMgK,WAAaZ,GAEZ,EACT,C,oCChFa9V,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAKd,SAASyX,EAAqB/K,EAAOoE,GACnC,IAAIjE,EAAQhM,EAAKyL,EAAKhB,EAOtB,OALAzK,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GAEnBjE,EAASH,EAAMxQ,IAAI0O,WAAW/J,KAEf,KAAXgM,GACW,KAAXA,GACW,KAAXA,GAIAhM,EAAMyL,IACRhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,IAErB4K,EAAQH,KANL,EAYHzK,CACT,CAIA,SAAS6W,EAAsBhL,EAAOoE,GACpC,IAAIxF,EACApG,EAAQwH,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC/CjQ,EAAMqE,EACNoH,EAAMI,EAAM8J,OAAO1F,GAGvB,GAAIjQ,EAAM,GAAKyL,EAAO,OAAQ,EAI9B,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,KAEtByK,EAAK,IAAeA,EAAK,GAAe,OAAQ,EAEpD,OAAS,CAEP,GAAIzK,GAAOyL,EAAO,OAAQ,EAI1B,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,OAEtByK,GAAM,IAAeA,GAAM,IAA/B,CAUA,GAAW,KAAPA,GAA6B,KAAPA,EACxB,MAGF,OAAQ,CAPR,CAHE,GAAIzK,EAAMqE,GAAS,GAAM,OAAQ,CAWrC,CAGA,OAAIrE,EAAMyL,IACRhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,IAErB4K,EAAQH,KAEH,EAGLzK,CACT,CAEA,SAAS8W,EAAoBjL,EAAOpF,GAClC,IAAIsJ,EAAGgB,EACHrF,EAAQG,EAAMH,MAAQ,EAE1B,IAAKqE,EAAItJ,EAAM,EAAGsK,EAAIlF,EAAM4D,OAAO9O,OAAS,EAAGoP,EAAIgB,EAAGhB,IAChDlE,EAAM4D,OAAOM,GAAGrE,QAAUA,GAAkC,mBAAzBG,EAAM4D,OAAOM,GAAGsD,OACrDxH,EAAM4D,OAAOM,EAAI,GAAGmD,QAAS,EAC7BrH,EAAM4D,OAAOM,GAAGmD,QAAS,EACzBnD,GAAK,EAGX,CAGAnJ,EAAOC,QAAU,SAAcgF,EAAOoE,EAAWC,EAASsE,GACxD,IAAI/J,EACAsM,EACAhH,EACAiH,EACAC,EACAvC,EACAwC,EACAC,EACApG,EACAqG,EACAC,EACAC,EACAC,EACA9L,EACAmJ,EACAC,EACA2C,EACAvC,EACAC,EACAC,EACAsC,EACAzX,EACA0X,EACAC,EACAtT,EACAgR,EACAC,EACAxD,EACA8F,GAAyB,EACzBlH,GAAQ,EAGZ,GAAI7E,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAQ7D,GAAI5E,EAAMgM,YAAc,GACpBhM,EAAM2E,OAAOP,GAAapE,EAAMgM,YAAc,GAC9ChM,EAAM2E,OAAOP,GAAapE,EAAM4E,UAClC,OAAO,EAiBT,GAZI+D,GAA+B,cAArB3I,EAAMgK,YAMdhK,EAAM2E,OAAOP,IAAcpE,EAAM4E,YACnCmH,GAAyB,IAKxBF,EAAiBb,EAAsBhL,EAAOoE,KAAe,GAOhE,GANAiH,GAAY,EACZ7S,EAAQwH,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC/CsH,EAAcO,OAAOjM,EAAMxQ,IAAI8C,MAAMkG,EAAOqT,EAAiB,IAIzDE,GAA0C,IAAhBL,EAAmB,OAAO,MAEnD,OAAKG,EAAiBd,EAAqB/K,EAAOoE,KAAe,GAItE,OAAO,EAHPiH,GAAY,CAId,CAIA,GAAIU,GACE/L,EAAMuK,WAAWsB,IAAmB7L,EAAM8J,OAAO1F,GAAY,OAAO,EAO1E,GAHAqH,EAAiBzL,EAAMxQ,IAAI0O,WAAW2N,EAAiB,GAGnDlD,EAAU,OAAO,EAGrB6C,EAAaxL,EAAM4D,OAAO9O,OAEtBuW,GACFpF,EAAcjG,EAAMvJ,KAAK,oBAAqB,KAAM,GAChC,IAAhBiV,IACFzF,EAAM5W,MAAQ,CAAE,CAAE,QAASqc,MAI7BzF,EAAcjG,EAAMvJ,KAAK,mBAAoB,KAAM,GAGrDwP,EAAMjO,IAASuT,EAAY,CAAEnH,EAAW,GACxC6B,EAAMgE,OAASxM,OAAOC,aAAa+N,GAMnC1C,EAAW3E,EACX0H,GAAe,EACfrC,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,QAEhD8E,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,OAEnB,MAAOjB,EAAW1E,EAAS,CACzBlQ,EAAM0X,EACNjM,EAAMI,EAAM8J,OAAOf,GAEnBF,EAAUG,EAAShJ,EAAM2E,OAAOoE,GAAY8C,GAAkB7L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,IAErG,MAAOjQ,EAAMyL,EAAK,CAGhB,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,GAEf,IAAPyK,EACFoK,GAAU,GAAKA,EAAShJ,EAAM+J,QAAQhB,IAAa,MAC9C,IAAW,KAAPnK,EAGT,MAFAoK,GAGF,CAEA7U,GACF,CA8EA,GA5EA+W,EAAe/W,EAIbiX,EAFEF,GAAgBtL,EAEE,EAEAoJ,EAASH,EAK3BuC,EAAoB,IAAKA,EAAoB,GAIjDD,EAAStC,EAAUuC,EAGnBnF,EAAejG,EAAMvJ,KAAK,iBAAkB,KAAM,GAClDwP,EAAMgE,OAASxM,OAAOC,aAAa+N,GACnCxF,EAAMjO,IAASsT,EAAY,CAAElH,EAAW,GACpCiH,IACFpF,EAAMO,KAAOxG,EAAMxQ,IAAI8C,MAAMkG,EAAOqT,EAAiB,IAIvDD,EAAW5L,EAAM6E,MACjByE,EAAYtJ,EAAM6J,OAAOzF,GACzBiF,EAAYrJ,EAAM2E,OAAOP,GAMzBuH,EAAgB3L,EAAMgM,WACtBhM,EAAMgM,WAAahM,EAAM4E,UACzB5E,EAAM4E,UAAYuG,EAElBnL,EAAM6E,OAAQ,EACd7E,EAAM6J,OAAOzF,GAAa8G,EAAelL,EAAM4J,OAAOxF,GACtDpE,EAAM2E,OAAOP,GAAa4E,EAEtBkC,GAAgBtL,GAAOI,EAAM8E,QAAQV,EAAY,GAQnDpE,EAAMuE,KAAO2H,KAAKC,IAAInM,EAAMuE,KAAO,EAAGF,GAEtCrE,EAAMpP,GAAG0R,MAAM6B,SAASnE,EAAOoE,EAAWC,GAAS,GAIhDrE,EAAM6E,QAASiH,IAClBjH,GAAQ,GAIViH,EAAgB9L,EAAMuE,KAAOH,EAAa,GAAKpE,EAAM8E,QAAQ9E,EAAMuE,KAAO,GAE1EvE,EAAM4E,UAAY5E,EAAMgM,WACxBhM,EAAMgM,WAAaL,EACnB3L,EAAM6J,OAAOzF,GAAakF,EAC1BtJ,EAAM2E,OAAOP,GAAaiF,EAC1BrJ,EAAM6E,MAAQ+G,EAEd3F,EAAejG,EAAMvJ,KAAK,kBAAmB,MAAO,GACpDwP,EAAMgE,OAASxM,OAAOC,aAAa+N,GAEnC1C,EAAW3E,EAAYpE,EAAMuE,KAC7B+G,EAAU,GAAKvC,EACfmC,EAAelL,EAAM4J,OAAOxF,GAExB2E,GAAY1E,EAAW,MAK3B,GAAIrE,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAa,MAGhD,GAAI5E,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,MAItD,IADA4E,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,MAGjB,GAAI6B,EAAW,CAEb,GADAQ,EAAiBb,EAAsBhL,EAAO+I,GAC1C8C,EAAiB,EAAK,MAC1BrT,EAAQwH,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,EAChD,MAEE,GADA8C,EAAiBd,EAAqB/K,EAAO+I,GACzC8C,EAAiB,EAAK,MAG5B,GAAIJ,IAAmBzL,EAAMxQ,IAAI0O,WAAW2N,EAAiB,GAAM,KACrE,CAoBA,OAhBE5F,EADEoF,EACMrL,EAAMvJ,KAAK,qBAAsB,MAAO,GAExCuJ,EAAMvJ,KAAK,oBAAqB,MAAO,GAEjDwP,EAAMgE,OAASxM,OAAOC,aAAa+N,GAEnCF,EAAU,GAAKxC,EACf/I,EAAMuE,KAAOwE,EAEb/I,EAAMgK,WAAaZ,EAGfvE,GACFoG,EAAoBjL,EAAOwL,IAGtB,CACT,C,oCCzWalY,EAAA,MAGbyH,EAAOC,QAAU,SAAmBgF,EAAOoE,GACzC,IAAIrU,EAASyZ,EAAWtF,EAAGgB,EAAGe,EAAOmD,EACjCL,EAAW3E,EAAY,EACvBqF,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,aAChDD,EAAUrE,EAAMgF,QAMpB,IAJAoE,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,YAGZjB,EAAW1E,IAAYrE,EAAM8E,QAAQiE,GAAWA,IAGrD,KAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAY,MAG3C5E,EAAM2E,OAAOoE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CA6B9C,OAhBAzZ,EAAUiQ,EAAMmK,SAAS/F,EAAW2E,EAAU/I,EAAM4E,WAAW,GAAOlU,OAEtEsP,EAAMuE,KAAOwE,EAEb9C,EAAiBjG,EAAMvJ,KAAK,iBAAkB,IAAK,GACnDwP,EAAMjO,IAAW,CAAEoM,EAAWpE,EAAMuE,MAEpC0B,EAAiBjG,EAAMvJ,KAAK,SAAU,GAAI,GAC1CwP,EAAMlW,QAAWA,EACjBkW,EAAMjO,IAAW,CAAEoM,EAAWpE,EAAMuE,MACpC0B,EAAMY,SAAW,GAEjBZ,EAAiBjG,EAAMvJ,KAAK,kBAAmB,KAAM,GAErDuJ,EAAMgK,WAAaZ,GAEZ,CACT,C,oCChDA,IAAIhK,EAAuB9L,EAAAA,KAAAA,mBACvByL,EAAuBzL,EAAAA,KAAAA,QAG3ByH,EAAOC,QAAU,SAAmBgF,EAAOoE,EAAWgI,EAAUzD,GAC9D,IAAI/J,EACAyN,EACAC,EACAjI,EACAkI,EACArI,EACAgB,EACAsH,EACAnM,EACA+I,EACAqD,EACAjU,EACAnF,EACAmW,EACAC,EACAna,EACAwQ,EAAQ,EACR3L,EAAM6L,EAAM4J,OAAOxF,GAAapE,EAAM6J,OAAOzF,GAC7CxE,EAAMI,EAAM8J,OAAO1F,GACnB2E,EAAW3E,EAAY,EAG3B,GAAIpE,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAE7D,GAAkC,KAA9B5E,EAAMxQ,IAAI0O,WAAW/J,GAAwB,OAAO,EAIxD,QAASA,EAAMyL,EACb,GAAkC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,IACa,KAAlC6L,EAAMxQ,IAAI0O,WAAW/J,EAAM,GAAoB,CACjD,GAAIA,EAAM,IAAMyL,EAAO,OAAO,EAC9B,GAAsC,KAAlCI,EAAMxQ,IAAI0O,WAAW/J,EAAM,GAAsB,OAAO,EAC5D,KACF,CAWF,IARAkQ,EAAUrE,EAAMgF,QAGhByE,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,aAEhD8E,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,YAEZjB,EAAW1E,IAAYrE,EAAM8E,QAAQiE,GAAWA,IAGrD,KAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAY,MAG3C5E,EAAM2E,OAAOoE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KAV2B,CAgB9C,IAHAnW,EAAM2M,EAAMmK,SAAS/F,EAAW2E,EAAU/I,EAAM4E,WAAW,GAAOlU,OAClEkP,EAAMvM,EAAIyB,OAELX,EAAM,EAAGA,EAAMyL,EAAKzL,IAAO,CAE9B,GADAyK,EAAKvL,EAAI6K,WAAW/J,GACT,KAAPyK,EACF,OAAO,EACF,GAAW,KAAPA,EAAqB,CAC9ByB,EAAWlM,EACX,KACF,CAAkB,KAAPyK,EACTkB,IACgB,KAAPlB,IACTzK,IACIA,EAAMyL,GAA+B,KAAxBvM,EAAI6K,WAAW/J,IAC9B2L,IAGN,CAEA,GAAIO,EAAW,GAAsC,KAAjChN,EAAI6K,WAAWmC,EAAW,GAAsB,OAAO,EAI3E,IAAKlM,EAAMkM,EAAW,EAAGlM,EAAMyL,EAAKzL,IAElC,GADAyK,EAAKvL,EAAI6K,WAAW/J,GACT,KAAPyK,EACFkB,SACK,IAAIf,EAAQH,GAGjB,MAOJ,GADA6N,EAAMzM,EAAMpP,GAAG+P,QAAQjB,qBAAqBrM,EAAKc,EAAKyL,IACjD6M,EAAI1M,GAAM,OAAO,EAGtB,GADAwM,EAAOvM,EAAMpP,GAAG4Q,cAAciL,EAAIpZ,MAC7B2M,EAAMpP,GAAG0Q,aAAaiL,GAAS,OAAO,EAY3C,IAVApY,EAAMsY,EAAItY,IACV2L,GAAS2M,EAAI3M,MAGbuM,EAAalY,EACbmY,EAAgBxM,EAIhBtH,EAAQrE,EACDA,EAAMyL,EAAKzL,IAEhB,GADAyK,EAAKvL,EAAI6K,WAAW/J,GACT,KAAPyK,EACFkB,SACK,IAAIf,EAAQH,GAGjB,MAMJ6N,EAAMzM,EAAMpP,GAAG+P,QAAQhB,eAAetM,EAAKc,EAAKyL,GAC5CzL,EAAMyL,GAAOpH,IAAUrE,GAAOsY,EAAI1M,IACpCzQ,EAAQmd,EAAIpZ,IACZc,EAAMsY,EAAItY,IACV2L,GAAS2M,EAAI3M,QAEbxQ,EAAQ,GACR6E,EAAMkY,EACNvM,EAAQwM,GAIV,MAAOnY,EAAMyL,EAAK,CAEhB,GADAhB,EAAKvL,EAAI6K,WAAW/J,IACf4K,EAAQH,GAAO,MACpBzK,GACF,CAEA,GAAIA,EAAMyL,GAA+B,KAAxBvM,EAAI6K,WAAW/J,IAC1B7E,EAAO,CAGTA,EAAQ,GACR6E,EAAMkY,EACNvM,EAAQwM,EACR,MAAOnY,EAAMyL,EAAK,CAEhB,GADAhB,EAAKvL,EAAI6K,WAAW/J,IACf4K,EAAQH,GAAO,MACpBzK,GACF,CACF,CAGF,QAAIA,EAAMyL,GAA+B,KAAxBvM,EAAI6K,WAAW/J,MAKhCqY,EAAQpN,EAAmB/L,EAAIf,MAAM,EAAG+N,MACnCmM,IAOD7D,IAEgC,qBAAzB3I,EAAMyD,IAAIiJ,aACnB1M,EAAMyD,IAAIiJ,WAAa,CAAC,GAEiB,qBAAhC1M,EAAMyD,IAAIiJ,WAAWF,KAC9BxM,EAAMyD,IAAIiJ,WAAWF,GAAS,CAAEld,MAAOA,EAAOid,KAAMA,IAGtDvM,EAAMgK,WAAaZ,EAEnBpJ,EAAMuE,KAAOH,EAAYtE,EAAQ,IAXZ,GAavB,C,oCCnMaxM,EAAA,MAEb,IAAIqZ,EAAQrZ,EAAQ,MAChByL,EAAUzL,EAAAA,KAAAA,QAGd,SAASsZ,EAAWpd,EAAKoB,EAAI6S,EAAKG,GAChC,IAAIhF,EAAIiO,EAAGrU,EAAOrE,EAAKyF,EAAKuR,EAAQnC,EAAQ8D,EAuD5C,IArDA/d,KAAKS,IAAMA,EAGXT,KAAK6B,GAASA,EAEd7B,KAAK0U,IAAMA,EAMX1U,KAAK6U,OAASA,EAEd7U,KAAK6a,OAAS,GACd7a,KAAK+a,OAAS,GACd/a,KAAK8a,OAAS,GACd9a,KAAK4V,OAAS,GAYd5V,KAAKgb,QAAU,GAGfhb,KAAK6V,UAAa,EAElB7V,KAAKwV,KAAa,EAClBxV,KAAKiW,QAAa,EAClBjW,KAAK8V,OAAa,EAClB9V,KAAKge,UAAc,EACnBhe,KAAKid,YAAc,EAInBjd,KAAKib,WAAa,OAElBjb,KAAK8Q,MAAQ,EAGb9Q,KAAKqL,OAAS,GAIdyS,EAAI9d,KAAKS,IACTsd,GAAe,EAEVtU,EAAQrE,EAAMgX,EAASnC,EAAS,EAAGpP,EAAMiT,EAAE/X,OAAQX,EAAMyF,EAAKzF,IAAO,CAGxE,GAFAyK,EAAKiO,EAAE3O,WAAW/J,IAEb2Y,EAAc,CACjB,GAAI/N,EAAQH,GAAK,CACfuM,IAEW,IAAPvM,EACFoK,GAAU,EAAIA,EAAS,EAEvBA,IAEF,QACF,CACE8D,GAAe,CAEnB,CAEW,KAAPlO,GAAezK,IAAQyF,EAAM,IACpB,KAAPgF,GAAezK,IACnBpF,KAAK6a,OAAOnT,KAAK+B,GACjBzJ,KAAK+a,OAAOrT,KAAKtC,GACjBpF,KAAK8a,OAAOpT,KAAK0U,GACjBpc,KAAK4V,OAAOlO,KAAKuS,GACjBja,KAAKgb,QAAQtT,KAAK,GAElBqW,GAAe,EACf3B,EAAS,EACTnC,EAAS,EACTxQ,EAAQrE,EAAM,EAElB,CAGApF,KAAK6a,OAAOnT,KAAKoW,EAAE/X,QACnB/F,KAAK+a,OAAOrT,KAAKoW,EAAE/X,QACnB/F,KAAK8a,OAAOpT,KAAK,GACjB1H,KAAK4V,OAAOlO,KAAK,GACjB1H,KAAKgb,QAAQtT,KAAK,GAElB1H,KAAKiW,QAAUjW,KAAK6a,OAAO9U,OAAS,CACtC,CAIA8X,EAAWva,UAAUoE,KAAO,SAAU+Q,EAAMD,EAAKD,GAC/C,IAAIrB,EAAQ,IAAI0G,EAAMnF,EAAMD,EAAKD,GAQjC,OAPArB,EAAM3D,OAAQ,EAEVgF,EAAU,GAAGvY,KAAK8Q,QACtBoG,EAAMpG,MAAQ9Q,KAAK8Q,MACfyH,EAAU,GAAGvY,KAAK8Q,QAEtB9Q,KAAK6U,OAAOnN,KAAKwP,GACVA,CACT,EAEA2G,EAAWva,UAAUyS,QAAU,SAAiBP,GAC9C,OAAOxV,KAAK6a,OAAOrF,GAAQxV,KAAK8a,OAAOtF,IAASxV,KAAK+a,OAAOvF,EAC9D,EAEAqI,EAAWva,UAAUqS,eAAiB,SAAwBsI,GAC5D,IAAK,IAAIpN,EAAM7Q,KAAKiW,QAASgI,EAAOpN,EAAKoN,IACvC,GAAIje,KAAK6a,OAAOoD,GAAQje,KAAK8a,OAAOmD,GAAQje,KAAK+a,OAAOkD,GACtD,MAGJ,OAAOA,CACT,EAGAJ,EAAWva,UAAUkY,WAAa,SAAoBpW,GAGpD,IAFA,IAAIyK,EAEKgB,EAAM7Q,KAAKS,IAAIsF,OAAQX,EAAMyL,EAAKzL,IAEzC,GADAyK,EAAK7P,KAAKS,IAAI0O,WAAW/J,IACpB4K,EAAQH,GAAO,MAEtB,OAAOzK,CACT,EAGAyY,EAAWva,UAAUoY,eAAiB,SAAwBtW,EAAKgY,GACjE,GAAIhY,GAAOgY,EAAO,OAAOhY,EAEzB,MAAOA,EAAMgY,EACX,IAAKpN,EAAQhQ,KAAKS,IAAI0O,aAAa/J,IAAS,OAAOA,EAAM,EAE3D,OAAOA,CACT,EAGAyY,EAAWva,UAAUiY,UAAY,SAAmBnW,EAAK8J,GACvD,IAAK,IAAI2B,EAAM7Q,KAAKS,IAAIsF,OAAQX,EAAMyL,EAAKzL,IACzC,GAAIpF,KAAKS,IAAI0O,WAAW/J,KAAS8J,EAAQ,MAE3C,OAAO9J,CACT,EAGAyY,EAAWva,UAAUqY,cAAgB,SAAuBvW,EAAK8J,EAAMkO,GACrE,GAAIhY,GAAOgY,EAAO,OAAOhY,EAEzB,MAAOA,EAAMgY,EACX,GAAIlO,IAASlP,KAAKS,IAAI0O,aAAa/J,GAAQ,OAAOA,EAAM,EAE1D,OAAOA,CACT,EAGAyY,EAAWva,UAAU8X,SAAW,SAAkB8C,EAAOxU,EAAK0S,EAAQ+B,GACpE,IAAIhJ,EAAGiJ,EAAYvO,EAAIwO,EAAOlD,EAAMmD,EAAOC,EACvC/I,EAAO0I,EAEX,GAAIA,GAASxU,EACX,MAAO,GAKT,IAFA4U,EAAQ,IAAIjb,MAAMqG,EAAMwU,GAEnB/I,EAAI,EAAGK,EAAO9L,EAAK8L,IAAQL,IAAK,CACnCiJ,EAAa,EACbG,EAAYF,EAAQre,KAAK6a,OAAOrF,GAI9B2F,EAFE3F,EAAO,EAAI9L,GAAOyU,EAEbne,KAAK+a,OAAOvF,GAAQ,EAEpBxV,KAAK+a,OAAOvF,GAGrB,MAAO6I,EAAQlD,GAAQiD,EAAahC,EAAQ,CAG1C,GAFAvM,EAAK7P,KAAKS,IAAI0O,WAAWkP,GAErBrO,EAAQH,GACC,IAAPA,EACFuO,GAAc,GAAKA,EAAape,KAAKgb,QAAQxF,IAAS,EAEtD4I,QAEG,MAAIC,EAAQE,EAAYve,KAAK8a,OAAOtF,IAIzC,MAFA4I,GAGF,CAEAC,GACF,CAKEC,EAAMnJ,GAHJiJ,EAAahC,EAGJ,IAAI/Y,MAAM+a,EAAahC,EAAS,GAAGxU,KAAK,KAAO5H,KAAKS,IAAI8C,MAAM8a,EAAOlD,GAErEnb,KAAKS,IAAI8C,MAAM8a,EAAOlD,EAErC,CAEA,OAAOmD,EAAM1W,KAAK,GACpB,EAGAiW,EAAWva,UAAUsa,MAAQA,EAG7B5R,EAAOC,QAAU4R,C,oCCpOJtZ,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAGd,SAASia,EAAQvN,EAAOuE,GACtB,IAAIpQ,EAAM6L,EAAM4J,OAAOrF,GAAQvE,EAAM6J,OAAOtF,GACxC3E,EAAMI,EAAM8J,OAAOvF,GAEvB,OAAOvE,EAAMxQ,IAAI8C,MAAM6B,EAAKyL,EAC9B,CAEA,SAAS4N,EAAana,GACpB,IAGIuL,EAHAxE,EAAS,GACTjG,EAAM,EACNyL,EAAMvM,EAAIyB,OAEV2Y,GAAY,EACZC,EAAU,EACVC,EAAU,GAEd/O,EAAMvL,EAAI6K,WAAW/J,GAErB,MAAOA,EAAMyL,EACA,MAAPhB,IACG6O,GAOHE,GAAWta,EAAIua,UAAUF,EAASvZ,EAAM,GACxCuZ,EAAUvZ,IANViG,EAAO3D,KAAKkX,EAAUta,EAAIua,UAAUF,EAASvZ,IAC7CwZ,EAAU,GACVD,EAAUvZ,EAAM,IAQpBsZ,EAAoB,KAAP7O,EACbzK,IAEAyK,EAAKvL,EAAI6K,WAAW/J,GAKtB,OAFAiG,EAAO3D,KAAKkX,EAAUta,EAAIua,UAAUF,IAE7BtT,CACT,CAGAW,EAAOC,QAAU,SAAegF,EAAOoE,EAAWC,EAASsE,GACzD,IAAI/J,EAAIkM,EAAU3W,EAAK+P,EAAGgB,EAAG6D,EAAU8E,EAASC,EAAa7H,EACzD8H,EAAQC,EAAGC,EAAYC,EAAY9E,EAAeI,EAClDC,EAAiB0E,EAASC,EAG9B,GAAIhK,EAAY,EAAIC,EAAW,OAAO,EAItC,GAFA0E,EAAW3E,EAAY,EAEnBpE,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAa,OAAO,EAGvD,GAAI5E,EAAM2E,OAAOoE,GAAY/I,EAAM4E,WAAa,EAAK,OAAO,EAO5D,GADAzQ,EAAM6L,EAAM4J,OAAOb,GAAY/I,EAAM6J,OAAOd,GACxC5U,GAAO6L,EAAM8J,OAAOf,GAAa,OAAO,EAG5C,GADAoF,EAAUnO,EAAMxQ,IAAI0O,WAAW/J,KACf,MAAZga,GAAuC,KAAZA,GAAuC,KAAZA,EAA2B,OAAO,EAE5F,GAAIha,GAAO6L,EAAM8J,OAAOf,GAAa,OAAO,EAG5C,GADAqF,EAAWpO,EAAMxQ,IAAI0O,WAAW/J,KACf,MAAbia,GAAyC,KAAbA,GAAyC,KAAbA,IAA6BrP,EAAQqP,GAC/F,OAAO,EAKT,GAAgB,KAAZD,GAA2BpP,EAAQqP,GAAa,OAAO,EAE3D,MAAOja,EAAM6L,EAAM8J,OAAOf,GAAW,CAGnC,GAFAnK,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,GAEf,MAAPyK,GAA6B,KAAPA,GAA6B,KAAPA,IAAuBG,EAAQH,GAAO,OAAO,EAE7FzK,GACF,CAMA,IAJA2W,EAAWyC,EAAQvN,EAAOoE,EAAY,GAEtCyJ,EAAU/C,EAASrV,MAAM,KACzBsY,EAAS,GACJ7J,EAAI,EAAGA,EAAI2J,EAAQ/Y,OAAQoP,IAAK,CAEnC,GADA8J,EAAIH,EAAQ3J,GAAGxT,QACVsd,EAAG,CAGN,GAAU,IAAN9J,GAAWA,IAAM2J,EAAQ/Y,OAAS,EACpC,SAEA,OAAO,CAEX,CAEA,IAAK,WAAWF,KAAKoZ,GAAM,OAAO,EACC,KAA/BA,EAAE9P,WAAW8P,EAAElZ,OAAS,GAC1BiZ,EAAOtX,KAAyB,KAApBuX,EAAE9P,WAAW,GAAqB,SAAW,SAC5B,KAApB8P,EAAE9P,WAAW,GACtB6P,EAAOtX,KAAK,QAEZsX,EAAOtX,KAAK,GAEhB,CAGA,GADAqU,EAAWyC,EAAQvN,EAAOoE,GAAW1T,QACN,IAA3Boa,EAAS3Q,QAAQ,KAAe,OAAO,EAC3C,GAAI6F,EAAM2E,OAAOP,GAAapE,EAAM4E,WAAa,EAAK,OAAO,EAQ7D,GAPAiJ,EAAUL,EAAa1C,GACnB+C,EAAQ/Y,QAAyB,KAAf+Y,EAAQ,IAAWA,EAAQtV,QAC7CsV,EAAQ/Y,QAA0C,KAAhC+Y,EAAQA,EAAQ/Y,OAAS,IAAW+Y,EAAQQ,MAIlEP,EAAcD,EAAQ/Y,OACF,IAAhBgZ,GAAqBA,IAAgBC,EAAOjZ,OAAU,OAAO,EAEjE,GAAI6T,EAAU,OAAO,EAkBrB,IAhBAS,EAAgBpJ,EAAMgK,WACtBhK,EAAMgK,WAAa,QAInBP,EAAkBzJ,EAAMpP,GAAG0R,MAAMO,MAAMyB,SAAS,cAEhD2B,EAAYjG,EAAMvJ,KAAK,aAAc,QAAS,GAC9CwP,EAAMjO,IAAMiW,EAAa,CAAE7J,EAAW,GAEtC6B,EAAYjG,EAAMvJ,KAAK,aAAc,QAAS,GAC9CwP,EAAMjO,IAAM,CAAEoM,EAAWA,EAAY,GAErC6B,EAAYjG,EAAMvJ,KAAK,UAAW,KAAM,GACxCwP,EAAMjO,IAAM,CAAEoM,EAAWA,EAAY,GAEhCF,EAAI,EAAGA,EAAI2J,EAAQ/Y,OAAQoP,IAC9B+B,EAAiBjG,EAAMvJ,KAAK,UAAW,KAAM,GACzCsX,EAAO7J,KACT+B,EAAM5W,MAAS,CAAE,CAAE,QAAS,cAAgB0e,EAAO7J,MAGrD+B,EAAiBjG,EAAMvJ,KAAK,SAAU,GAAI,GAC1CwP,EAAMlW,QAAW8d,EAAQ3J,GAAGxT,OAC5BuV,EAAMY,SAAW,GAEjBZ,EAAiBjG,EAAMvJ,KAAK,WAAY,MAAO,GAMjD,IAHAwP,EAAYjG,EAAMvJ,KAAK,WAAY,MAAO,GAC1CwP,EAAYjG,EAAMvJ,KAAK,cAAe,SAAU,GAE3CsS,EAAW3E,EAAY,EAAG2E,EAAW1E,EAAS0E,IAAY,CAC7D,GAAI/I,EAAM2E,OAAOoE,GAAY/I,EAAM4E,UAAa,MAGhD,IADA4E,GAAY,EACPtF,EAAI,EAAGgB,EAAIuE,EAAgB3U,OAAQoP,EAAIgB,EAAGhB,IAC7C,GAAIuF,EAAgBvF,GAAGlE,EAAO+I,EAAU1E,GAAS,GAAO,CACtDmF,GAAY,EACZ,KACF,CAGF,GAAIA,EAAa,MAEjB,GADAsB,EAAWyC,EAAQvN,EAAO+I,GAAUrY,QAC/Boa,EAAY,MACjB,GAAI9K,EAAM2E,OAAOoE,GAAY/I,EAAM4E,WAAa,EAAK,MAarD,IAZAiJ,EAAUL,EAAa1C,GACnB+C,EAAQ/Y,QAAyB,KAAf+Y,EAAQ,IAAWA,EAAQtV,QAC7CsV,EAAQ/Y,QAA0C,KAAhC+Y,EAAQA,EAAQ/Y,OAAS,IAAW+Y,EAAQQ,MAE9DtF,IAAa3E,EAAY,IAC3B6B,EAAYjG,EAAMvJ,KAAK,aAAc,QAAS,GAC9CwP,EAAMjO,IAAMkW,EAAa,CAAE9J,EAAY,EAAG,IAG5C6B,EAAYjG,EAAMvJ,KAAK,UAAW,KAAM,GACxCwP,EAAMjO,IAAM,CAAE+Q,EAAUA,EAAW,GAE9B7E,EAAI,EAAGA,EAAI4J,EAAa5J,IAC3B+B,EAAiBjG,EAAMvJ,KAAK,UAAW,KAAM,GACzCsX,EAAO7J,KACT+B,EAAM5W,MAAS,CAAE,CAAE,QAAS,cAAgB0e,EAAO7J,MAGrD+B,EAAiBjG,EAAMvJ,KAAK,SAAU,GAAI,GAC1CwP,EAAMlW,QAAW8d,EAAQ3J,GAAK2J,EAAQ3J,GAAGxT,OAAS,GAClDuV,EAAMY,SAAW,GAEjBZ,EAAiBjG,EAAMvJ,KAAK,WAAY,MAAO,GAEjDwP,EAAQjG,EAAMvJ,KAAK,WAAY,MAAO,EACxC,CAYA,OAVIyX,IACFjI,EAAQjG,EAAMvJ,KAAK,cAAe,SAAU,GAC5CyX,EAAW,GAAKnF,GAGlB9C,EAAQjG,EAAMvJ,KAAK,cAAe,SAAU,GAC5CwX,EAAW,GAAKlF,EAEhB/I,EAAMgK,WAAaZ,EACnBpJ,EAAMuE,KAAOwE,GACN,CACT,C,oCC5NazV,EAAA,MAGbyH,EAAOC,QAAU,SAAegF,GAC9B,IAAIiG,EAEAjG,EAAM8D,YACRmC,EAAiB,IAAIjG,EAAM2M,MAAM,SAAU,GAAI,GAC/C1G,EAAMlW,QAAWiQ,EAAMxQ,IACvByW,EAAMjO,IAAW,CAAE,EAAG,GACtBiO,EAAMY,SAAW,GACjB7G,EAAM4D,OAAOnN,KAAKwP,IAElBjG,EAAMpP,GAAG0R,MAAMZ,MAAM1B,EAAMxQ,IAAKwQ,EAAMpP,GAAIoP,EAAMyD,IAAKzD,EAAM4D,OAE/D,C,gCCbA7I,EAAOC,QAAU,SAAgBgF,GAC/B,IAA2BsO,EAAKpK,EAAGgB,EAA/BtB,EAAS5D,EAAM4D,OAGnB,IAAKM,EAAI,EAAGgB,EAAItB,EAAO9O,OAAQoP,EAAIgB,EAAGhB,IACpCoK,EAAM1K,EAAOM,GACI,WAAboK,EAAI9G,MACNxH,EAAMpP,GAAG4P,OAAOkB,MAAM4M,EAAIve,QAASiQ,EAAMpP,GAAIoP,EAAMyD,IAAK6K,EAAIzH,SAGlE,C,mCCRavT,EAAA,MAGb,IAAI4J,EAAiB5J,EAAAA,KAAAA,eAGrB,SAASib,EAAWlb,GAClB,MAAO,YAAYuB,KAAKvB,EAC1B,CACA,SAASmb,EAAYnb,GACnB,MAAO,aAAauB,KAAKvB,EAC3B,CAGA0H,EAAOC,QAAU,SAAiBgF,GAChC,IAAIkE,EAAGuK,EAAGvJ,EAAGtB,EAAQqC,EAAOyI,EAAcC,EAAOC,EAAI1a,EAAMC,EAAKuZ,EAC5D7N,EAAOgP,EAAe5V,EAAK6V,EAASC,EAEpCC,EADAC,EAAcjP,EAAM4D,OAGxB,GAAK5D,EAAMpP,GAAGyI,QAAQoJ,QAEtB,IAAKgM,EAAI,EAAGvJ,EAAI+J,EAAYna,OAAQ2Z,EAAIvJ,EAAGuJ,IACzC,GAA4B,WAAxBQ,EAAYR,GAAGjH,MACdxH,EAAMpP,GAAG6R,QAAQpK,QAAQ4W,EAAYR,GAAG1e,SAU7C,IANA6T,EAASqL,EAAYR,GAAG5H,SAExBgI,EAAgB,EAIX3K,EAAIN,EAAO9O,OAAS,EAAGoP,GAAK,EAAGA,IAIlC,GAHAwK,EAAe9K,EAAOM,GAGI,eAAtBwK,EAAalH,MAiBjB,GAR0B,gBAAtBkH,EAAalH,OACX+G,EAAWG,EAAa3e,UAAY8e,EAAgB,GACtDA,IAEEL,EAAYE,EAAa3e,UAC3B8e,OAGAA,EAAgB,IAEM,SAAtBH,EAAalH,MAAmBxH,EAAMpP,GAAG6R,QAAQ7N,KAAK8Z,EAAa3e,SAAU,CAoB/E,IAlBAmE,EAAOwa,EAAa3e,QACpBif,EAAQhP,EAAMpP,GAAG6R,QAAQ5N,MAAMX,GAG/Bya,EAAQ,GACR9O,EAAQ6O,EAAa7O,MACrB6N,EAAU,EAKNsB,EAAMla,OAAS,GACI,IAAnBka,EAAM,GAAGlW,OACToL,EAAI,GACmB,iBAAvBN,EAAOM,EAAI,GAAGsD,OAChBwH,EAAQA,EAAM1c,MAAM,IAGjBsc,EAAK,EAAGA,EAAKI,EAAMla,OAAQ8Z,IAC9B3V,EAAM+V,EAAMJ,GAAI3V,IAChB6V,EAAU9O,EAAMpP,GAAG4Q,cAAcvI,GAC5B+G,EAAMpP,GAAG0Q,aAAawN,KAE3BC,EAAUC,EAAMJ,GAAI1a,KAWlB6a,EALGC,EAAMJ,GAAIjW,OAEiB,YAArBqW,EAAMJ,GAAIjW,QAAyB,YAAY/D,KAAKma,GAGnD/O,EAAMpP,GAAGqR,kBAAkB8M,GAF3B/O,EAAMpP,GAAGqR,kBAAkB,UAAY8M,GAASpe,QAAQ,WAAY,IAFpEqP,EAAMpP,GAAGqR,kBAAkB,UAAY8M,GAASpe,QAAQ,aAAc,IAOlFwD,EAAM6a,EAAMJ,GAAI9V,MAEZ3E,EAAMuZ,IACRzH,EAAgB,IAAIjG,EAAM2M,MAAM,OAAQ,GAAI,GAC5C1G,EAAMlW,QAAUmE,EAAK5B,MAAMob,EAASvZ,GACpC8R,EAAMpG,MAAUA,EAChB8O,EAAMlY,KAAKwP,IAGbA,EAAgB,IAAIjG,EAAM2M,MAAM,YAAa,IAAK,GAClD1G,EAAM5W,MAAU,CAAE,CAAE,OAAQyf,IAC5B7I,EAAMpG,MAAUA,IAChBoG,EAAMgE,OAAU,UAChBhE,EAAMO,KAAU,OAChBmI,EAAMlY,KAAKwP,GAEXA,EAAgB,IAAIjG,EAAM2M,MAAM,OAAQ,GAAI,GAC5C1G,EAAMlW,QAAUgf,EAChB9I,EAAMpG,MAAUA,EAChB8O,EAAMlY,KAAKwP,GAEXA,EAAgB,IAAIjG,EAAM2M,MAAM,aAAc,KAAM,GACpD1G,EAAMpG,QAAYA,EAClBoG,EAAMgE,OAAU,UAChBhE,EAAMO,KAAU,OAChBmI,EAAMlY,KAAKwP,GAEXyH,EAAUsB,EAAMJ,GAAI7V,WAElB2U,EAAUxZ,EAAKY,SACjBmR,EAAgB,IAAIjG,EAAM2M,MAAM,OAAQ,GAAI,GAC5C1G,EAAMlW,QAAUmE,EAAK5B,MAAMob,GAC3BzH,EAAMpG,MAAUA,EAChB8O,EAAMlY,KAAKwP,IAIbgJ,EAAYR,GAAG5H,SAAWjD,EAAS1G,EAAe0G,EAAQM,EAAGyK,EAC/D,MAhGA,CACEzK,IACA,MAAON,EAAOM,GAAGrE,QAAU6O,EAAa7O,OAA4B,cAAnB+D,EAAOM,GAAGsD,KACzDtD,GAGJ,CA6FN,C,gCCvIA,IAAIgL,EAAe,YACfC,EAAe,MAGnBpU,EAAOC,QAAU,SAAmBgF,GAClC,IAAI3M,EAGJA,EAAM2M,EAAMxQ,IAAImB,QAAQue,EAAa,MAGrC7b,EAAMA,EAAI1C,QAAQwe,EAAS,KAE3BnP,EAAMxQ,IAAM6D,CACd,C,gCCHA,IAAI+b,EAAU,+BAIVC,EAAsB,gBAEtBC,EAAiB,iBACjBC,EAAc,CAChBlS,EAAG,IACHmS,EAAG,IACHC,GAAI,KAGN,SAASC,EAAU7a,EAAOyC,GACxB,OAAOiY,EAAYjY,EAAKuB,cAC1B,CAEA,SAAS8W,EAAeC,GACtB,IAAI1L,EAAG+B,EAAO4J,EAAkB,EAEhC,IAAK3L,EAAI0L,EAAa9a,OAAS,EAAGoP,GAAK,EAAGA,IACxC+B,EAAQ2J,EAAa1L,GAEF,SAAf+B,EAAMuB,MAAoBqI,IAC5B5J,EAAMlW,QAAUkW,EAAMlW,QAAQY,QAAQ2e,EAAgBI,IAGrC,cAAfzJ,EAAMuB,MAAuC,SAAfvB,EAAMO,MACtCqJ,IAGiB,eAAf5J,EAAMuB,MAAwC,SAAfvB,EAAMO,MACvCqJ,GAGN,CAEA,SAASC,EAAaF,GACpB,IAAI1L,EAAG+B,EAAO4J,EAAkB,EAEhC,IAAK3L,EAAI0L,EAAa9a,OAAS,EAAGoP,GAAK,EAAGA,IACxC+B,EAAQ2J,EAAa1L,GAEF,SAAf+B,EAAMuB,MAAoBqI,GACxBT,EAAQxa,KAAKqR,EAAMlW,WACrBkW,EAAMlW,QAAUkW,EAAMlW,QACnBY,QAAQ,OAAQ,KAGhBA,QAAQ,UAAW,KAAKA,QAAQ,WAAY,QAC5CA,QAAQ,cAAe,UAAUA,QAAQ,SAAU,KAEnDA,QAAQ,0BAA2B,OAEnCA,QAAQ,qBAAsB,OAC9BA,QAAQ,6BAA8B,QAI1B,cAAfsV,EAAMuB,MAAuC,SAAfvB,EAAMO,MACtCqJ,IAGiB,eAAf5J,EAAMuB,MAAwC,SAAfvB,EAAMO,MACvCqJ,GAGN,CAGA9U,EAAOC,QAAU,SAAiBgF,GAChC,IAAI+P,EAEJ,GAAK/P,EAAMpP,GAAGyI,QAAQsM,YAEtB,IAAKoK,EAAS/P,EAAM4D,OAAO9O,OAAS,EAAGib,GAAU,EAAGA,IAEhB,WAA9B/P,EAAM4D,OAAOmM,GAAQvI,OAErB6H,EAAoBza,KAAKoL,EAAM4D,OAAOmM,GAAQhgB,UAChD4f,EAAe3P,EAAM4D,OAAOmM,GAAQlJ,UAGlCuI,EAAQxa,KAAKoL,EAAM4D,OAAOmM,GAAQhgB,UACpC+f,EAAa9P,EAAM4D,OAAOmM,GAAQlJ,UAIxC,C,mCCvGavT,EAAA,MAGb,IAAI0L,EAAiB1L,EAAAA,KAAAA,aACjB4L,EAAiB5L,EAAAA,KAAAA,YACjB6L,EAAiB7L,EAAAA,KAAAA,eAEjB0c,EAAgB,OAChBC,EAAW,QACXC,EAAa,IAGjB,SAASC,EAAU9c,EAAKyF,EAAO8F,GAC7B,OAAOvL,EAAIf,MAAM,EAAGwG,GAAS8F,EAAKvL,EAAIf,MAAMwG,EAAQ,EACtD,CAEA,SAASsX,EAAgBxM,EAAQ5D,GAC/B,IAAIkE,EAAG+B,EAAO/R,EAAM8Z,EAAG7Z,EAAKyL,EAAKyQ,EAAWC,EAAMC,EAAUC,EACxDC,EAAiBC,EAAiBC,EAAkBC,EACpDC,EAASC,EAAUrC,EAAGsC,EAAUC,EAAOC,EAAWC,EAItD,IAFAF,EAAQ,GAEH9M,EAAI,EAAGA,EAAIN,EAAO9O,OAAQoP,IAAK,CAKlC,IAJA+B,EAAQrC,EAAOM,GAEfmM,EAAYzM,EAAOM,GAAGrE,MAEjB4O,EAAIuC,EAAMlc,OAAS,EAAG2Z,GAAK,EAAGA,IACjC,GAAIuC,EAAMvC,GAAG5O,OAASwQ,EAAa,MAIrC,GAFAW,EAAMlc,OAAS2Z,EAAI,EAEA,SAAfxI,EAAMuB,KAAV,CAEAtT,EAAO+R,EAAMlW,QACboE,EAAM,EACNyL,EAAM1L,EAAKY,OAGXqc,EACA,MAAOhd,EAAMyL,EAAK,CAGhB,GAFAqQ,EAASlX,UAAY5E,EACrB6Z,EAAIiC,EAASjW,KAAK9F,IACb8Z,EAAK,MAWV,GATA6C,EAAUC,GAAW,EACrB3c,EAAM6Z,EAAElV,MAAQ,EAChBiY,EAAqB,MAAT/C,EAAE,GAKduC,EAAW,GAEPvC,EAAElV,MAAQ,GAAK,EACjByX,EAAWrc,EAAKgK,WAAW8P,EAAElV,MAAQ,QAErC,IAAK2V,EAAIvK,EAAI,EAAGuK,GAAK,EAAGA,IAAK,CAC3B,GAAuB,cAAnB7K,EAAO6K,GAAGjH,MAA2C,cAAnB5D,EAAO6K,GAAGjH,KAAsB,MACtE,GAAK5D,EAAO6K,GAAG1e,QAAf,CAEAwgB,EAAW3M,EAAO6K,GAAG1e,QAAQmO,WAAW0F,EAAO6K,GAAG1e,QAAQ+E,OAAS,GACnE,KAHgC,CAIlC,CAQF,GAFA0b,EAAW,GAEPrc,EAAMyL,EACR4Q,EAAWtc,EAAKgK,WAAW/J,QAE3B,IAAKsa,EAAIvK,EAAI,EAAGuK,EAAI7K,EAAO9O,OAAQ2Z,IAAK,CACtC,GAAuB,cAAnB7K,EAAO6K,GAAGjH,MAA2C,cAAnB5D,EAAO6K,GAAGjH,KAAsB,MACtE,GAAK5D,EAAO6K,GAAG1e,QAAf,CAEAygB,EAAW5M,EAAO6K,GAAG1e,QAAQmO,WAAW,GACxC,KAHgC,CAIlC,CA4CF,GAzCAuS,EAAkBtR,EAAeoR,IAAarR,EAAYzB,OAAOC,aAAa6S,IAC9EG,EAAkBvR,EAAeqR,IAAatR,EAAYzB,OAAOC,aAAa8S,IAE9EG,EAAmB3R,EAAauR,GAChCK,EAAmB5R,EAAawR,GAE5BI,EACFC,GAAU,EACDH,IACHC,GAAoBF,IACxBI,GAAU,IAIVF,EACFG,GAAW,EACFL,IACHG,GAAoBF,IACxBI,GAAW,IAIE,KAAbN,GAAsC,MAATxC,EAAE,IAC7BuC,GAAY,IAAgBA,GAAY,KAE1CO,EAAWD,GAAU,GAIrBA,GAAWC,IAQbD,EAAUJ,EACVK,EAAWJ,GAGRG,GAAYC,EAAjB,CAQA,GAAIA,EAEF,IAAKrC,EAAIuC,EAAMlc,OAAS,EAAG2Z,GAAK,EAAGA,IAAK,CAEtC,GADA6B,EAAOU,EAAMvC,GACTuC,EAAMvC,GAAG5O,MAAQwQ,EAAa,MAClC,GAAIC,EAAKc,SAAWL,GAAYC,EAAMvC,GAAG5O,QAAUwQ,EAAW,CAC5DC,EAAOU,EAAMvC,GAETsC,GACFE,EAAYjR,EAAMpP,GAAGyI,QAAQuM,OAAO,GACpCsL,EAAalR,EAAMpP,GAAGyI,QAAQuM,OAAO,KAErCqL,EAAYjR,EAAMpP,GAAGyI,QAAQuM,OAAO,GACpCsL,EAAalR,EAAMpP,GAAGyI,QAAQuM,OAAO,IAMvCK,EAAMlW,QAAUogB,EAAUlK,EAAMlW,QAASie,EAAElV,MAAOoY,GAClDtN,EAAO0M,EAAKrK,OAAOlW,QAAUogB,EAC3BvM,EAAO0M,EAAKrK,OAAOlW,QAASugB,EAAKnc,IAAK8c,GAExC9c,GAAO+c,EAAWpc,OAAS,EACvBwb,EAAKrK,QAAU/B,IAAK/P,GAAO8c,EAAUnc,OAAS,GAElDZ,EAAO+R,EAAMlW,QACb6P,EAAM1L,EAAKY,OAEXkc,EAAMlc,OAAS2Z,EACf,SAAS0C,CACX,CACF,CAGEN,EACFG,EAAMva,KAAK,CACTwP,MAAO/B,EACP/P,IAAK6Z,EAAElV,MACPsY,OAAQL,EACRlR,MAAOwQ,IAEAS,GAAYC,IACrB9K,EAAMlW,QAAUogB,EAAUlK,EAAMlW,QAASie,EAAElV,MAAOoX,GA7CpD,MAJMa,IACF9K,EAAMlW,QAAUogB,EAAUlK,EAAMlW,QAASie,EAAElV,MAAOoX,GAkDxD,CAjJuC,CAkJzC,CACF,CAGAnV,EAAOC,QAAU,SAAqBgF,GAEpC,IAAI+P,EAEJ,GAAK/P,EAAMpP,GAAGyI,QAAQsM,YAEtB,IAAKoK,EAAS/P,EAAM4D,OAAO9O,OAAS,EAAGib,GAAU,EAAGA,IAEhB,WAA9B/P,EAAM4D,OAAOmM,GAAQvI,MACpBwI,EAAcpb,KAAKoL,EAAM4D,OAAOmM,GAAQhgB,UAI7CqgB,EAAgBpQ,EAAM4D,OAAOmM,GAAQlJ,SAAU7G,EAEnD,C,oCCpMA,IAAI2M,EAAQrZ,EAAQ,MAGpB,SAAS+d,EAAU7hB,EAAKoB,EAAI6S,GAC1B1U,KAAKS,IAAMA,EACXT,KAAK0U,IAAMA,EACX1U,KAAK6U,OAAS,GACd7U,KAAK+U,YAAa,EAClB/U,KAAK6B,GAAKA,CACZ,CAGAygB,EAAUhf,UAAUsa,MAAQA,EAG5B5R,EAAOC,QAAUqW,C,+BCTjBtW,EAAOC,QAAU,SAAmBgF,GAClC,IAAIyO,EAAGvJ,EAAGtB,EAAQ0N,EAAM1R,EAAKsK,EACzB+E,EAAcjP,EAAM4D,OAExB,IAAK6K,EAAI,EAAGvJ,EAAI+J,EAAYna,OAAQ2Z,EAAIvJ,EAAGuJ,IACzC,GAA4B,WAAxBQ,EAAYR,GAAGjH,KAAnB,CAKA,IAHA5D,EAASqL,EAAYR,GAAG5H,SACxBjH,EAAMgE,EAAO9O,OAERwc,EAAO,EAAGA,EAAO1R,EAAK0R,IACC,iBAAtB1N,EAAO0N,GAAM9J,OACf5D,EAAO0N,GAAM9J,KAAO,QAIxB,IAAK8J,EAAOpH,EAAO,EAAGoH,EAAO1R,EAAK0R,IACN,SAAtB1N,EAAO0N,GAAM9J,MACb8J,EAAO,EAAI1R,GACe,SAA1BgE,EAAO0N,EAAO,GAAG9J,KAGnB5D,EAAO0N,EAAO,GAAGvhB,QAAU6T,EAAO0N,GAAMvhB,QAAU6T,EAAO0N,EAAO,GAAGvhB,SAE/DuhB,IAASpH,IAAQtG,EAAOsG,GAAQtG,EAAO0N,IAE3CpH,KAIAoH,IAASpH,IACXtG,EAAO9O,OAASoV,EA1B4B,CA6BlD,C,kCCvCA5W,EAAA,MACA,IAAIie,EAAc,0IACdC,EAAc,sDAGlBzW,EAAOC,QAAU,SAAkBgF,EAAO2I,GACxC,IAAI1P,EAAK6V,EAAS7I,EAAOrH,EAAIpG,EAAOoH,EAChCzL,EAAM6L,EAAM7L,IAEhB,GAAkC,KAA9B6L,EAAMxQ,IAAI0O,WAAW/J,GAAwB,OAAO,EAKxD,IAHAqE,EAAQwH,EAAM7L,IACdyL,EAAMI,EAAMM,SAEH,CACP,KAAMnM,GAAOyL,EAAK,OAAO,EAIzB,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,GAEf,KAAPyK,EAAqB,OAAO,EAChC,GAAW,KAAPA,EAAqB,KAC3B,CAIA,OAFA3F,EAAM+G,EAAMxQ,IAAI8C,MAAMkG,EAAQ,EAAGrE,GAE7Bqd,EAAY5c,KAAKqE,IACnB6V,EAAU9O,EAAMpP,GAAG4Q,cAAcvI,KAC5B+G,EAAMpP,GAAG0Q,aAAawN,KAEtBnG,IACH1C,EAAgBjG,EAAMvJ,KAAK,YAAa,IAAK,GAC7CwP,EAAM5W,MAAU,CAAE,CAAE,OAAQyf,IAC5B7I,EAAMgE,OAAU,WAChBhE,EAAMO,KAAU,OAEhBP,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAUiQ,EAAMpP,GAAGqR,kBAAkBhJ,GAE3CgN,EAAgBjG,EAAMvJ,KAAK,aAAc,KAAM,GAC/CwP,EAAMgE,OAAU,WAChBhE,EAAMO,KAAU,QAGlBxG,EAAM7L,KAAO8E,EAAInE,OAAS,GACnB,MAGLyc,EAAS3c,KAAKqE,KAChB6V,EAAU9O,EAAMpP,GAAG4Q,cAAc,UAAYvI,KACxC+G,EAAMpP,GAAG0Q,aAAawN,KAEtBnG,IACH1C,EAAgBjG,EAAMvJ,KAAK,YAAa,IAAK,GAC7CwP,EAAM5W,MAAU,CAAE,CAAE,OAAQyf,IAC5B7I,EAAMgE,OAAU,WAChBhE,EAAMO,KAAU,OAEhBP,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAUiQ,EAAMpP,GAAGqR,kBAAkBhJ,GAE3CgN,EAAgBjG,EAAMvJ,KAAK,aAAc,KAAM,GAC/CwP,EAAMgE,OAAU,WAChBhE,EAAMO,KAAU,QAGlBxG,EAAM7L,KAAO8E,EAAInE,OAAS,GACnB,GAIX,C,oCCzEaxB,EAAA,MAGbyH,EAAOC,QAAU,SAAkBgF,EAAO2I,GACxC,IAAInQ,EAAOoH,EAAKO,EAAQ8F,EAAOwL,EAAYC,EAAUC,EAAcC,EAC/Dzd,EAAM6L,EAAM7L,IACZyK,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,GAE9B,GAAW,KAAPyK,EAAsB,OAAO,EAEjCpG,EAAQrE,EACRA,IACAyL,EAAMI,EAAMM,OAGZ,MAAOnM,EAAMyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,GAAwBA,IAKjE,GAHAgM,EAASH,EAAMxQ,IAAI8C,MAAMkG,EAAOrE,GAChCwd,EAAexR,EAAOrL,OAElBkL,EAAM6R,mBAAqB7R,EAAM8R,UAAUH,IAAiB,IAAMnZ,EAGpE,OAFKmQ,IAAQ3I,EAAMqF,SAAWlF,GAC9BH,EAAM7L,KAAOwd,GACN,EAGTF,EAAaC,EAAWvd,EAGxB,OAA4D,KAApDsd,EAAazR,EAAMxQ,IAAI2K,QAAQ,IAAKuX,IAAmB,CAC7DA,EAAWD,EAAa,EAGxB,MAAOC,EAAW9R,GAA0C,KAAnCI,EAAMxQ,IAAI0O,WAAWwT,GAA6BA,IAI3E,GAFAE,EAAeF,EAAWD,EAEtBG,IAAiBD,EAUnB,OARKhJ,IACH1C,EAAYjG,EAAMvJ,KAAK,cAAe,OAAQ,GAC9CwP,EAAMgE,OAAU9J,EAChB8F,EAAMlW,QAAUiQ,EAAMxQ,IAAI8C,MAAM6B,EAAKsd,GAClC9gB,QAAQ,MAAO,KACfA,QAAQ,WAAY,OAEzBqP,EAAM7L,IAAMud,GACL,EAIT1R,EAAM8R,UAAUF,GAAgBH,CAClC,CAOA,OAJAzR,EAAM6R,kBAAmB,EAEpBlJ,IAAQ3I,EAAMqF,SAAWlF,GAC9BH,EAAM7L,KAAOwd,GACN,CACT,C,oCCzDA,SAASI,EAAkB/R,EAAOgS,GAChC,IAAIC,EAAWC,EAAWC,EAAQC,EAAQC,EAAcC,EACpDC,EAAYC,EACZC,EAAgB,CAAC,EACjB7S,EAAMoS,EAAWld,OAErB,GAAK8K,EAAL,CAGA,IAAI8S,EAAY,EACZC,GAAgB,EAChBC,EAAQ,GAEZ,IAAKX,EAAY,EAAGA,EAAYrS,EAAKqS,IAqBnC,GApBAE,EAASH,EAAWC,GAEpBW,EAAMnc,KAAK,GAMPub,EAAWU,GAAWvS,SAAWgS,EAAOhS,QAAUwS,IAAiBR,EAAOlM,MAAQ,IACpFyM,EAAYT,GAGdU,EAAeR,EAAOlM,MAMtBkM,EAAOrd,OAASqd,EAAOrd,QAAU,EAE5Bqd,EAAOU,MAAZ,CAgBA,IAVKJ,EAAc1e,eAAeoe,EAAOhS,UACvCsS,EAAcN,EAAOhS,QAAU,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxDkS,EAAeI,EAAcN,EAAOhS,SAASgS,EAAOW,KAAO,EAAI,GAAMX,EAAOrd,OAAS,GAErFod,EAAYQ,EAAYE,EAAMF,GAAa,EAE3CJ,EAAkBJ,EAEXA,EAAYG,EAAcH,GAAaU,EAAMV,GAAa,EAG/D,GAFAE,EAASJ,EAAWE,GAEhBE,EAAOjS,SAAWgS,EAAOhS,QAEzBiS,EAAOU,MAAQV,EAAO3Z,IAAM,IAE9B8Z,GAAa,GASTH,EAAOS,OAASV,EAAOW,QACpBV,EAAOtd,OAASqd,EAAOrd,QAAU,IAAM,IACtCsd,EAAOtd,OAAS,IAAM,GAAKqd,EAAOrd,OAAS,IAAM,IACnDyd,GAAa,KAKdA,GAAY,CAKfC,EAAWN,EAAY,IAAMF,EAAWE,EAAY,GAAGY,KACrDF,EAAMV,EAAY,GAAK,EACvB,EAEFU,EAAMX,GAAaA,EAAYC,EAAYM,EAC3CI,EAAMV,GAAaM,EAEnBL,EAAOW,MAAQ,EACfV,EAAO3Z,IAAQwZ,EACfG,EAAOS,OAAQ,EACfP,GAAmB,EAGnBK,GAAgB,EAChB,KACF,EAIqB,IAArBL,IAQFG,EAAcN,EAAOhS,SAASgS,EAAOW,KAAO,EAAI,IAAOX,EAAOrd,QAAU,GAAK,GAAMwd,EAxE1D,CA5Bb,CAuGlB,CAhHahf,EAAA,MAmHbyH,EAAOC,QAAU,SAAoBgF,GACnC,IAAIsR,EACAyB,EAAc/S,EAAM+S,YACpBnT,EAAMI,EAAM+S,YAAYje,OAI5B,IAFAid,EAAkB/R,EAAOA,EAAMgS,YAE1BV,EAAO,EAAGA,EAAO1R,EAAK0R,IACrByB,EAAYzB,IAASyB,EAAYzB,GAAMU,YACzCD,EAAkB/R,EAAO+S,EAAYzB,GAAMU,WAGjD,C,oCC3EA,SAASgB,EAAYhT,EAAOgS,GAC1B,IAAI9N,EACA+O,EACAC,EACAjN,EACArH,EACAuU,EACAvT,EAAMoS,EAAWld,OAErB,IAAKoP,EAAItE,EAAM,EAAGsE,GAAK,EAAGA,IACxB+O,EAAajB,EAAW9N,GAEE,KAAtB+O,EAAW9S,QAAgD,KAAtB8S,EAAW9S,SAK5B,IAApB8S,EAAWxa,MAIfya,EAAWlB,EAAWiB,EAAWxa,KAOjC0a,EAAWjP,EAAI,GACJ8N,EAAW9N,EAAI,GAAGzL,MAAQwa,EAAWxa,IAAM,GAE3CuZ,EAAW9N,EAAI,GAAG/D,SAAW8S,EAAW9S,QACxC6R,EAAW9N,EAAI,GAAG+B,QAAUgN,EAAWhN,MAAQ,GAE/C+L,EAAWiB,EAAWxa,IAAM,GAAGwN,QAAUiN,EAASjN,MAAQ,EAErErH,EAAKnB,OAAOC,aAAauV,EAAW9S,QAEpC8F,EAAgBjG,EAAM4D,OAAOqP,EAAWhN,OACxCA,EAAMuB,KAAU2L,EAAW,cAAgB,UAC3ClN,EAAMsB,IAAU4L,EAAW,SAAW,KACtClN,EAAMqB,QAAU,EAChBrB,EAAMgE,OAAUkJ,EAAWvU,EAAKA,EAAKA,EACrCqH,EAAMlW,QAAU,GAEhBkW,EAAgBjG,EAAM4D,OAAOsP,EAASjN,OACtCA,EAAMuB,KAAU2L,EAAW,eAAiB,WAC5ClN,EAAMsB,IAAU4L,EAAW,SAAW,KACtClN,EAAMqB,SAAW,EACjBrB,EAAMgE,OAAUkJ,EAAWvU,EAAKA,EAAKA,EACrCqH,EAAMlW,QAAU,GAEZojB,IACFnT,EAAM4D,OAAOoO,EAAW9N,EAAI,GAAG+B,OAAOlW,QAAU,GAChDiQ,EAAM4D,OAAOoO,EAAWiB,EAAWxa,IAAM,GAAGwN,OAAOlW,QAAU,GAC7DmU,KAGN,CA1GA5Q,EAAA,MACAyH,EAAOC,QAAQ,EAAW,SAAkBgF,EAAO2I,GACjD,IAAIzE,EAAGkP,EAASnN,EACZzN,EAAQwH,EAAM7L,IACdgM,EAASH,EAAMxQ,IAAI0O,WAAW1F,GAElC,GAAImQ,EAAU,OAAO,EAErB,GAAe,KAAXxI,GAAsC,KAAXA,EAA2B,OAAO,EAIjE,IAFAiT,EAAUpT,EAAMqT,WAAWrT,EAAM7L,IAAgB,KAAXgM,GAEjC+D,EAAI,EAAGA,EAAIkP,EAAQte,OAAQoP,IAC9B+B,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAU0N,OAAOC,aAAayC,GAEpCH,EAAMgS,WAAWvb,KAAK,CAGpB0J,OAAQA,EAIRrL,OAAQse,EAAQte,OAIhBmR,MAAQjG,EAAM4D,OAAO9O,OAAS,EAK9B2D,KAAS,EAKTqa,KAAQM,EAAQE,SAChBT,MAAQO,EAAQG,YAMpB,OAFAvT,EAAM7L,KAAOif,EAAQte,QAEd,CACT,EAkEAiG,EAAOC,QAAQ,EAAc,SAAkBgF,GAC7C,IAAIsR,EACAyB,EAAc/S,EAAM+S,YACpBnT,EAAMI,EAAM+S,YAAYje,OAI5B,IAFAke,EAAYhT,EAAOA,EAAMgS,YAEpBV,EAAO,EAAGA,EAAO1R,EAAK0R,IACrByB,EAAYzB,IAASyB,EAAYzB,GAAMU,YACzCgB,EAAYhT,EAAO+S,EAAYzB,GAAMU,WAG3C,C,oCC/Ha1e,EAAA,MAEb,IAAIyK,EAAoBzK,EAAQ,MAC5ByJ,EAAoBzJ,EAAAA,KAAAA,IACpB8J,EAAoB9J,EAAAA,KAAAA,kBACpBgK,EAAoBhK,EAAAA,KAAAA,cAGpBkgB,EAAa,uCACbC,EAAa,4BAGjB1Y,EAAOC,QAAU,SAAgBgF,EAAO2I,GACtC,IAAI/J,EAAIX,EAAMpJ,EAAOoR,EAAO9R,EAAM6L,EAAM7L,IAAKyL,EAAMI,EAAMM,OAEzD,GAAkC,KAA9BN,EAAMxQ,IAAI0O,WAAW/J,GAAsB,OAAO,EAEtD,GAAIA,EAAM,GAAKyL,EAAK,OAAO,EAI3B,GAFAhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,EAAM,GAErB,KAAPyK,GAEF,GADA/J,EAAQmL,EAAMxQ,IAAI8C,MAAM6B,GAAKU,MAAM2e,GAC/B3e,EAUF,OATK8T,IACH1K,EAAqC,MAA9BpJ,EAAM,GAAG,GAAGgE,cAAwBsF,SAAStJ,EAAM,GAAGvC,MAAM,GAAI,IAAM6L,SAAStJ,EAAM,GAAI,IAEhGoR,EAAgBjG,EAAMvJ,KAAK,eAAgB,GAAI,GAC/CwP,EAAMlW,QAAUqN,EAAkBa,GAAQX,EAAcW,GAAQX,EAAc,OAC9E2I,EAAMgE,OAAUpV,EAAM,GACtBoR,EAAMO,KAAU,UAElBxG,EAAM7L,KAAOU,EAAM,GAAGC,QACf,OAIT,GADAD,EAAQmL,EAAMxQ,IAAI8C,MAAM6B,GAAKU,MAAM4e,GAC/B5e,GACEkI,EAAIgB,EAAUlJ,EAAM,IAQtB,OAPK8T,IACH1C,EAAgBjG,EAAMvJ,KAAK,eAAgB,GAAI,GAC/CwP,EAAMlW,QAAUgO,EAASlJ,EAAM,IAC/BoR,EAAMgE,OAAUpV,EAAM,GACtBoR,EAAMO,KAAU,UAElBxG,EAAM7L,KAAOU,EAAM,GAAGC,QACf,EAKb,OAAO,CACT,C,oCCpDaxB,EAAA,MAMb,IAJA,IAAIyL,EAAUzL,EAAAA,KAAAA,QAEVogB,EAAU,GAELxP,EAAI,EAAGA,EAAI,IAAKA,IAAOwP,EAAQjd,KAAK,GAE7C,qCACGhB,MAAM,IAAIhD,SAAQ,SAAUmM,GAAM8U,EAAQ9U,EAAGV,WAAW,IAAM,CAAG,IAGpEnD,EAAOC,QAAU,SAAgBgF,EAAO2I,GACtC,IAAIgL,EAAKC,EAAKC,EAASC,EAAY7N,EAAO9R,EAAM6L,EAAM7L,IAAKyL,EAAMI,EAAMM,OAEvE,GAAkC,KAA9BN,EAAMxQ,IAAI0O,WAAW/J,GAAsB,OAAO,EAItD,GAHAA,IAGIA,GAAOyL,EAAK,OAAO,EAIvB,GAFA+T,EAAM3T,EAAMxQ,IAAI0O,WAAW/J,GAEf,KAARwf,EAAc,CACXhL,GACH3I,EAAMvJ,KAAK,YAAa,KAAM,GAGhCtC,IAEA,MAAOA,EAAMyL,EAAK,CAEhB,GADA+T,EAAM3T,EAAMxQ,IAAI0O,WAAW/J,IACtB4K,EAAQ4U,GAAM,MACnBxf,GACF,CAGA,OADA6L,EAAM7L,IAAMA,GACL,CACT,CA6BA,OA3BA2f,EAAa9T,EAAMxQ,IAAI2E,GAEnBwf,GAAO,OAAUA,GAAO,OAAUxf,EAAM,EAAIyL,IAC9CgU,EAAM5T,EAAMxQ,IAAI0O,WAAW/J,EAAM,GAE7Byf,GAAO,OAAUA,GAAO,QAC1BE,GAAc9T,EAAMxQ,IAAI2E,EAAM,GAC9BA,MAIJ0f,EAAU,KAAOC,EAEZnL,IACH1C,EAAQjG,EAAMvJ,KAAK,eAAgB,GAAI,GAEnCkd,EAAM,KAAwB,IAAjBD,EAAQC,GACvB1N,EAAMlW,QAAU+jB,EAEhB7N,EAAMlW,QAAU8jB,EAGlB5N,EAAMgE,OAAS4J,EACf5N,EAAMO,KAAS,UAGjBxG,EAAM7L,IAAMA,EAAM,GACX,CACT,C,gCC3DA4G,EAAOC,QAAU,SAAwBgF,GACvC,IAAIsR,EAAMpH,EACNrK,EAAQ,EACR+D,EAAS5D,EAAM4D,OACfhE,EAAMI,EAAM4D,OAAO9O,OAEvB,IAAKwc,EAAOpH,EAAO,EAAGoH,EAAO1R,EAAK0R,IAG5B1N,EAAO0N,GAAMhK,QAAU,GAAGzH,IAC9B+D,EAAO0N,GAAMzR,MAAQA,EACjB+D,EAAO0N,GAAMhK,QAAU,GAAGzH,IAEJ,SAAtB+D,EAAO0N,GAAM9J,MACb8J,EAAO,EAAI1R,GACe,SAA1BgE,EAAO0N,EAAO,GAAG9J,KAGnB5D,EAAO0N,EAAO,GAAGvhB,QAAU6T,EAAO0N,GAAMvhB,QAAU6T,EAAO0N,EAAO,GAAGvhB,SAE/DuhB,IAASpH,IAAQtG,EAAOsG,GAAQtG,EAAO0N,IAE3CpH,KAIAoH,IAASpH,IACXtG,EAAO9O,OAASoV,EAEpB,C,oCCtCa5W,EAAA,MAGb,IAAIsJ,EAActJ,EAAAA,MAAAA,EAGlB,SAASib,EAAWlb,GAClB,MAAO,YAAYuB,KAAKvB,EAC1B,CACA,SAASmb,EAAYnb,GACnB,MAAO,aAAauB,KAAKvB,EAC3B,CAGA,SAAS0gB,EAASnV,GAEhB,IAAIoV,EAAU,GAALpV,EACT,OAAQoV,GAAM,IAAiBA,GAAM,GACvC,CAGAjZ,EAAOC,QAAU,SAAqBgF,EAAO2I,GAC3C,IAAI/J,EAAI/J,EAAO+K,EAAKqG,EAChB9R,EAAM6L,EAAM7L,IAEhB,QAAK6L,EAAMpP,GAAGyI,QAAQkM,OAGtB3F,EAAMI,EAAMM,SACsB,KAA9BN,EAAMxQ,IAAI0O,WAAW/J,IACrBA,EAAM,GAAKyL,KAKfhB,EAAKoB,EAAMxQ,IAAI0O,WAAW/J,EAAM,KACrB,KAAPyK,GACO,KAAPA,GACO,KAAPA,IACCmV,EAASnV,MAId/J,EAAQmL,EAAMxQ,IAAI8C,MAAM6B,GAAKU,MAAM+H,KAC9B/H,IAEA8T,IACH1C,EAAgBjG,EAAMvJ,KAAK,cAAe,GAAI,GAC9CwP,EAAMlW,QAAUiQ,EAAMxQ,IAAI8C,MAAM6B,EAAKA,EAAMU,EAAM,GAAGC,QAEhDyZ,EAAWtI,EAAMlW,UAAWiQ,EAAMiU,YAClCzF,EAAYvI,EAAMlW,UAAUiQ,EAAMiU,aAExCjU,EAAM7L,KAAOU,EAAM,GAAGC,QACf,KACT,C,oCCvDaxB,EAAA,MAEb,IAAI8L,EAAuB9L,EAAAA,KAAAA,mBACvByL,EAAuBzL,EAAAA,KAAAA,QAG3ByH,EAAOC,QAAU,SAAegF,EAAO2I,GACrC,IAAItZ,EACA4O,EACAlO,EACAyc,EACAnM,EACA6T,EACA/f,EACAggB,EACA1H,EACAnd,EACA2W,EACArC,EACApL,EACA+T,EAAO,GACPhM,EAASP,EAAM7L,IACfyL,EAAMI,EAAMM,OAEhB,GAAwC,KAApCN,EAAMxQ,IAAI0O,WAAW8B,EAAM7L,KAAwB,OAAO,EAC9D,GAA4C,KAAxC6L,EAAMxQ,IAAI0O,WAAW8B,EAAM7L,IAAM,GAAsB,OAAO,EAMlE,GAJA+f,EAAalU,EAAM7L,IAAM,EACzBkM,EAAWL,EAAMpP,GAAG+P,QAAQlB,eAAeO,EAAOA,EAAM7L,IAAM,GAAG,GAG7DkM,EAAW,EAAK,OAAO,EAG3B,GADAlM,EAAMkM,EAAW,EACblM,EAAMyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,GAAsB,CAQ1D,IADAA,IACOA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,MAEzC,GAAI9J,GAAOyL,EAAO,OAAO,EAkBzB,IAdApH,EAAQrE,EACRsY,EAAMzM,EAAMpP,GAAG+P,QAAQjB,qBAAqBM,EAAMxQ,IAAK2E,EAAK6L,EAAMM,QAC9DmM,EAAI1M,KACNwM,EAAOvM,EAAMpP,GAAG4Q,cAAciL,EAAIpZ,KAC9B2M,EAAMpP,GAAG0Q,aAAaiL,GACxBpY,EAAMsY,EAAItY,IAEVoY,EAAO,IAMX/T,EAAQrE,EACDA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,MAMzC,GADAwO,EAAMzM,EAAMpP,GAAG+P,QAAQhB,eAAeK,EAAMxQ,IAAK2E,EAAK6L,EAAMM,QACxDnM,EAAMyL,GAAOpH,IAAUrE,GAAOsY,EAAI1M,IAMpC,IALAzQ,EAAQmd,EAAIpZ,IACZc,EAAMsY,EAAItY,IAIHA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,WAGzC3O,EAAQ,GAGV,GAAI6E,GAAOyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,GAErC,OADA6L,EAAM7L,IAAMoM,GACL,EAETpM,GACF,KAAO,CAIL,GAAoC,qBAAzB6L,EAAMyD,IAAIiJ,WAA8B,OAAO,EAmB1D,GAjBIvY,EAAMyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,IACpCqE,EAAQrE,EAAM,EACdA,EAAM6L,EAAMpP,GAAG+P,QAAQlB,eAAeO,EAAO7L,GACzCA,GAAO,EACTqY,EAAQxM,EAAMxQ,IAAI8C,MAAMkG,EAAOrE,KAE/BA,EAAMkM,EAAW,GAGnBlM,EAAMkM,EAAW,EAKdmM,IAASA,EAAQxM,EAAMxQ,IAAI8C,MAAM4hB,EAAY7T,IAElD8T,EAAMnU,EAAMyD,IAAIiJ,WAAWtN,EAAmBoN,KACzC2H,EAEH,OADAnU,EAAM7L,IAAMoM,GACL,EAETgM,EAAO4H,EAAI5H,KACXjd,EAAQ6kB,EAAI7kB,KACd,CA4BA,OAtBKqZ,IACH5Y,EAAUiQ,EAAMxQ,IAAI8C,MAAM4hB,EAAY7T,GAEtCL,EAAMpP,GAAG4P,OAAOkB,MACd3R,EACAiQ,EAAMpP,GACNoP,EAAMyD,IACNG,EAAS,IAGXqC,EAAiBjG,EAAMvJ,KAAK,QAAS,MAAO,GAC5CwP,EAAM5W,MAAWA,EAAQ,CAAE,CAAE,MAAOkd,GAAQ,CAAE,MAAO,KACrDtG,EAAMY,SAAWjD,EACjBqC,EAAMlW,QAAWA,EAEbT,GACFD,EAAMoH,KAAK,CAAE,QAASnH,KAI1B0Q,EAAM7L,IAAMA,EACZ6L,EAAMM,OAASV,GACR,CACT,C,oCCrJatM,EAAA,MAEb,IAAI8L,EAAuB9L,EAAAA,KAAAA,mBACvByL,EAAuBzL,EAAAA,KAAAA,QAG3ByH,EAAOC,QAAU,SAAcgF,EAAO2I,GACpC,IAAItZ,EACA4O,EACAuO,EACAnM,EACA6T,EACA/f,EACAsY,EACA0H,EACAlO,EACAsG,EAAO,GACPjd,EAAQ,GACRiR,EAASP,EAAM7L,IACfyL,EAAMI,EAAMM,OACZ9H,EAAQwH,EAAM7L,IACdigB,GAAiB,EAErB,GAAwC,KAApCpU,EAAMxQ,IAAI0O,WAAW8B,EAAM7L,KAAwB,OAAO,EAM9D,GAJA+f,EAAalU,EAAM7L,IAAM,EACzBkM,EAAWL,EAAMpP,GAAG+P,QAAQlB,eAAeO,EAAOA,EAAM7L,KAAK,GAGzDkM,EAAW,EAAK,OAAO,EAG3B,GADAlM,EAAMkM,EAAW,EACblM,EAAMyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,GAAsB,CAW1D,IALAigB,GAAiB,EAIjBjgB,IACOA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,MAEzC,GAAI9J,GAAOyL,EAAO,OAAO,EAMzB,GAFApH,EAAQrE,EACRsY,EAAMzM,EAAMpP,GAAG+P,QAAQjB,qBAAqBM,EAAMxQ,IAAK2E,EAAK6L,EAAMM,QAC9DmM,EAAI1M,GAAI,CAWV,IAVAwM,EAAOvM,EAAMpP,GAAG4Q,cAAciL,EAAIpZ,KAC9B2M,EAAMpP,GAAG0Q,aAAaiL,GACxBpY,EAAMsY,EAAItY,IAEVoY,EAAO,GAKT/T,EAAQrE,EACDA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,MAMzC,GADAwO,EAAMzM,EAAMpP,GAAG+P,QAAQhB,eAAeK,EAAMxQ,IAAK2E,EAAK6L,EAAMM,QACxDnM,EAAMyL,GAAOpH,IAAUrE,GAAOsY,EAAI1M,GAMpC,IALAzQ,EAAQmd,EAAIpZ,IACZc,EAAMsY,EAAItY,IAIHA,EAAMyL,EAAKzL,IAEhB,GADA8J,EAAO+B,EAAMxQ,IAAI0O,WAAW/J,IACvB4K,EAAQd,IAAkB,KAATA,EAAiB,KAG7C,EAEI9J,GAAOyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,MAErCigB,GAAiB,GAEnBjgB,GACF,CAEA,GAAIigB,EAAgB,CAIlB,GAAoC,qBAAzBpU,EAAMyD,IAAIiJ,WAA8B,OAAO,EAmB1D,GAjBIvY,EAAMyL,GAAqC,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,IACpCqE,EAAQrE,EAAM,EACdA,EAAM6L,EAAMpP,GAAG+P,QAAQlB,eAAeO,EAAO7L,GACzCA,GAAO,EACTqY,EAAQxM,EAAMxQ,IAAI8C,MAAMkG,EAAOrE,KAE/BA,EAAMkM,EAAW,GAGnBlM,EAAMkM,EAAW,EAKdmM,IAASA,EAAQxM,EAAMxQ,IAAI8C,MAAM4hB,EAAY7T,IAElD8T,EAAMnU,EAAMyD,IAAIiJ,WAAWtN,EAAmBoN,KACzC2H,EAEH,OADAnU,EAAM7L,IAAMoM,GACL,EAETgM,EAAO4H,EAAI5H,KACXjd,EAAQ6kB,EAAI7kB,KACd,CAyBA,OAnBKqZ,IACH3I,EAAM7L,IAAM+f,EACZlU,EAAMM,OAASD,EAEf4F,EAAejG,EAAMvJ,KAAK,YAAa,IAAK,GAC5CwP,EAAM5W,MAASA,EAAQ,CAAE,CAAE,OAAQkd,IAC/Bjd,GACFD,EAAMoH,KAAK,CAAE,QAASnH,IAGxB0Q,EAAMiU,YACNjU,EAAMpP,GAAG4P,OAAO2D,SAASnE,GACzBA,EAAMiU,YAENhO,EAAejG,EAAMvJ,KAAK,aAAc,KAAM,IAGhDuJ,EAAM7L,IAAMA,EACZ6L,EAAMM,OAASV,GACR,CACT,C,oCChJAtM,EAAA,MACA,IAAI+gB,EAAY,0CAGhBtZ,EAAOC,QAAU,SAAiBgF,EAAO2I,GACvC,IAAIxU,EAAKyL,EAAK/K,EAAOyf,EAAO1c,EAAMqB,EAAK6V,EAAS7I,EAEhD,QAAKjG,EAAMpP,GAAGyI,QAAQoJ,YAClBzC,EAAMiU,UAAY,KAEtB9f,EAAM6L,EAAM7L,IACZyL,EAAMI,EAAMM,SAERnM,EAAM,EAAIyL,KACoB,KAA9BI,EAAMxQ,IAAI0O,WAAW/J,KACa,KAAlC6L,EAAMxQ,IAAI0O,WAAW/J,EAAM,KACO,KAAlC6L,EAAMxQ,IAAI0O,WAAW/J,EAAM,KAE/BU,EAAQmL,EAAMqF,QAAQxQ,MAAMwf,KACvBxf,IAELyf,EAAQzf,EAAM,GAEd+C,EAAOoI,EAAMpP,GAAG6R,QAAQpI,aAAa2F,EAAMxQ,IAAI8C,MAAM6B,EAAMmgB,EAAMxf,WAC5D8C,IAELqB,EAAMrB,EAAKqB,IAGXA,EAAMA,EAAItI,QAAQ,OAAQ,IAE1Bme,EAAU9O,EAAMpP,GAAG4Q,cAAcvI,KAC5B+G,EAAMpP,GAAG0Q,aAAawN,KAEtBnG,IACH3I,EAAMqF,QAAUrF,EAAMqF,QAAQ/S,MAAM,GAAIgiB,EAAMxf,QAE9CmR,EAAgBjG,EAAMvJ,KAAK,YAAa,IAAK,GAC7CwP,EAAM5W,MAAU,CAAE,CAAE,OAAQyf,IAC5B7I,EAAMgE,OAAU,UAChBhE,EAAMO,KAAU,OAEhBP,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAUiQ,EAAMpP,GAAGqR,kBAAkBhJ,GAE3CgN,EAAgBjG,EAAMvJ,KAAK,aAAc,KAAM,GAC/CwP,EAAMgE,OAAU,UAChBhE,EAAMO,KAAU,QAGlBxG,EAAM7L,KAAO8E,EAAInE,OAASwf,EAAMxf,QACzB,UACT,C,mCCvDaxB,EAAA,MAEb,IAAIyL,EAAUzL,EAAAA,KAAAA,QAGdyH,EAAOC,QAAU,SAAiBgF,EAAO2I,GACvC,IAAI4L,EAAM3U,EAAK4U,EAAIrgB,EAAM6L,EAAM7L,IAE/B,GAAkC,KAA9B6L,EAAMxQ,IAAI0O,WAAW/J,GAAyB,OAAO,EASzD,GAPAogB,EAAOvU,EAAMqF,QAAQvQ,OAAS,EAC9B8K,EAAMI,EAAMM,QAMPqI,EACH,GAAI4L,GAAQ,GAAwC,KAAnCvU,EAAMqF,QAAQnH,WAAWqW,GACxC,GAAIA,GAAQ,GAA4C,KAAvCvU,EAAMqF,QAAQnH,WAAWqW,EAAO,GAAa,CAE5DC,EAAKD,EAAO,EACZ,MAAOC,GAAM,GAA0C,KAArCxU,EAAMqF,QAAQnH,WAAWsW,EAAK,GAAaA,IAE7DxU,EAAMqF,QAAUrF,EAAMqF,QAAQ/S,MAAM,EAAGkiB,GACvCxU,EAAMvJ,KAAK,YAAa,KAAM,EAChC,MACEuJ,EAAMqF,QAAUrF,EAAMqF,QAAQ/S,MAAM,GAAI,GACxC0N,EAAMvJ,KAAK,YAAa,KAAM,QAIhCuJ,EAAMvJ,KAAK,YAAa,KAAM,GAIlCtC,IAGA,MAAOA,EAAMyL,GAAOb,EAAQiB,EAAMxQ,IAAI0O,WAAW/J,IAASA,IAG1D,OADA6L,EAAM7L,IAAMA,GACL,CACT,C,oCC3Cab,EAAA,MAGb,IAAIqZ,EAAiBrZ,EAAQ,MACzB0L,EAAiB1L,EAAAA,KAAAA,aACjB4L,EAAiB5L,EAAAA,KAAAA,YACjB6L,EAAiB7L,EAAAA,KAAAA,eAGrB,SAASmhB,EAAYjlB,EAAKoB,EAAI6S,EAAKsB,GACjChW,KAAKS,IAAMA,EACXT,KAAK0U,IAAMA,EACX1U,KAAK6B,GAAKA,EACV7B,KAAK6U,OAASmB,EACdhW,KAAKgkB,YAAc3gB,MAAM2S,EAAUjQ,QAEnC/F,KAAKoF,IAAM,EACXpF,KAAKuR,OAASvR,KAAKS,IAAIsF,OACvB/F,KAAK8Q,MAAQ,EACb9Q,KAAKsW,QAAU,GACftW,KAAK2lB,aAAe,EAIpB3lB,KAAKqW,MAAQ,CAAC,EAGdrW,KAAKijB,WAAa,GAGlBjjB,KAAK4lB,iBAAmB,GAGxB5lB,KAAK+iB,UAAY,CAAC,EAClB/iB,KAAK8iB,kBAAmB,EAIxB9iB,KAAKklB,UAAY,CACnB,CAKAQ,EAAYpiB,UAAUiT,YAAc,WAClC,IAAIW,EAAQ,IAAI0G,EAAM,OAAQ,GAAI,GAKlC,OAJA1G,EAAMlW,QAAUhB,KAAKsW,QACrBY,EAAMpG,MAAQ9Q,KAAK2lB,aACnB3lB,KAAK6U,OAAOnN,KAAKwP,GACjBlX,KAAKsW,QAAU,GACRY,CACT,EAMAwO,EAAYpiB,UAAUoE,KAAO,SAAU+Q,EAAMD,EAAKD,GAC5CvY,KAAKsW,SACPtW,KAAKuW,cAGP,IAAIW,EAAQ,IAAI0G,EAAMnF,EAAMD,EAAKD,GAC7BsN,EAAa,KAqBjB,OAnBItN,EAAU,IAEZvY,KAAK8Q,QACL9Q,KAAKijB,WAAajjB,KAAK4lB,iBAAiBtG,OAG1CpI,EAAMpG,MAAQ9Q,KAAK8Q,MAEfyH,EAAU,IAEZvY,KAAK8Q,QACL9Q,KAAK4lB,iBAAiBle,KAAK1H,KAAKijB,YAChCjjB,KAAKijB,WAAa,GAClB4C,EAAa,CAAE5C,WAAYjjB,KAAKijB,aAGlCjjB,KAAK2lB,aAAe3lB,KAAK8Q,MACzB9Q,KAAK6U,OAAOnN,KAAKwP,GACjBlX,KAAKgkB,YAAYtc,KAAKme,GACf3O,CACT,EASAwO,EAAYpiB,UAAUghB,WAAa,SAAU7a,EAAOqc,GAClD,IAAiBtE,EAAUC,EAAUsE,EAAOxB,EAAUC,EAClD5C,EAAkBF,EAClBG,EAAkBF,EAFlBvc,EAAMqE,EAGNuc,GAAgB,EAChBC,GAAiB,EACjBpV,EAAM7Q,KAAKuR,OACXH,EAASpR,KAAKS,IAAI0O,WAAW1F,GAGjC+X,EAAW/X,EAAQ,EAAIzJ,KAAKS,IAAI0O,WAAW1F,EAAQ,GAAK,GAExD,MAAOrE,EAAMyL,GAAO7Q,KAAKS,IAAI0O,WAAW/J,KAASgM,EAAUhM,IAqC3D,OAnCA2gB,EAAQ3gB,EAAMqE,EAGdgY,EAAWrc,EAAMyL,EAAM7Q,KAAKS,IAAI0O,WAAW/J,GAAO,GAElDsc,EAAkBtR,EAAeoR,IAAarR,EAAYzB,OAAOC,aAAa6S,IAC9EG,EAAkBvR,EAAeqR,IAAatR,EAAYzB,OAAOC,aAAa8S,IAE9EG,EAAmB3R,EAAauR,GAChCK,EAAmB5R,EAAawR,GAE5BI,EACFmE,GAAgB,EACPrE,IACHC,GAAoBF,IACxBsE,GAAgB,IAIhBpE,EACFqE,GAAiB,EACRvE,IACHG,GAAoBF,IACxBsE,GAAiB,IAIhBH,GAIHvB,EAAYyB,EACZxB,EAAYyB,IAJZ1B,EAAYyB,KAAoBC,GAAkBvE,GAClD8C,EAAYyB,KAAoBD,GAAkBrE,IAM7C,CACL4C,SAAWA,EACXC,UAAWA,EACXze,OAAWggB,EAEf,EAIAL,EAAYpiB,UAAUsa,MAAQA,EAG9B5R,EAAOC,QAAUyZ,C,oCC7GjB,SAASzB,EAAYhT,EAAOgS,GAC1B,IAAI9N,EAAGuK,EACHwE,EACAC,EACAjN,EACAgP,EAAc,GACdrV,EAAMoS,EAAWld,OAErB,IAAKoP,EAAI,EAAGA,EAAItE,EAAKsE,IACnB+O,EAAajB,EAAW9N,GAEE,MAAtB+O,EAAW9S,SAIS,IAApB8S,EAAWxa,MAIfya,EAAWlB,EAAWiB,EAAWxa,KAEjCwN,EAAgBjG,EAAM4D,OAAOqP,EAAWhN,OACxCA,EAAMuB,KAAU,SAChBvB,EAAMsB,IAAU,IAChBtB,EAAMqB,QAAU,EAChBrB,EAAMgE,OAAU,KAChBhE,EAAMlW,QAAU,GAEhBkW,EAAgBjG,EAAM4D,OAAOsP,EAASjN,OACtCA,EAAMuB,KAAU,UAChBvB,EAAMsB,IAAU,IAChBtB,EAAMqB,SAAW,EACjBrB,EAAMgE,OAAU,KAChBhE,EAAMlW,QAAU,GAE8B,SAA1CiQ,EAAM4D,OAAOsP,EAASjN,MAAQ,GAAGuB,MACY,MAA7CxH,EAAM4D,OAAOsP,EAASjN,MAAQ,GAAGlW,SAEnCklB,EAAYxe,KAAKyc,EAASjN,MAAQ,IAUtC,MAAOgP,EAAYngB,OAAQ,CACzBoP,EAAI+Q,EAAY5G,MAChBI,EAAIvK,EAAI,EAER,MAAOuK,EAAIzO,EAAM4D,OAAO9O,QAAmC,YAAzBkL,EAAM4D,OAAO6K,GAAGjH,KAChDiH,IAGFA,IAEIvK,IAAMuK,IACRxI,EAAQjG,EAAM4D,OAAO6K,GACrBzO,EAAM4D,OAAO6K,GAAKzO,EAAM4D,OAAOM,GAC/BlE,EAAM4D,OAAOM,GAAK+B,EAEtB,CACF,CA1GA3S,EAAA,MACAyH,EAAOC,QAAQ,EAAW,SAAuBgF,EAAO2I,GACtD,IAAIzE,EAAGkP,EAASnN,EAAOrM,EAAKgF,EACxBpG,EAAQwH,EAAM7L,IACdgM,EAASH,EAAMxQ,IAAI0O,WAAW1F,GAElC,GAAImQ,EAAU,OAAO,EAErB,GAAe,MAAXxI,EAA0B,OAAO,EAMrC,GAJAiT,EAAUpT,EAAMqT,WAAWrT,EAAM7L,KAAK,GACtCyF,EAAMwZ,EAAQte,OACd8J,EAAKnB,OAAOC,aAAayC,GAErBvG,EAAM,EAAK,OAAO,EAQtB,IANIA,EAAM,IACRqM,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAU6O,EAChBhF,KAGGsK,EAAI,EAAGA,EAAItK,EAAKsK,GAAK,EACxB+B,EAAgBjG,EAAMvJ,KAAK,OAAQ,GAAI,GACvCwP,EAAMlW,QAAU6O,EAAKA,EAErBoB,EAAMgS,WAAWvb,KAAK,CACpB0J,OAAQA,EACRrL,OAAQ,EACRmR,MAAQjG,EAAM4D,OAAO9O,OAAS,EAC9B2D,KAAS,EACTqa,KAAQM,EAAQE,SAChBT,MAAQO,EAAQG,YAMpB,OAFAvT,EAAM7L,KAAOif,EAAQte,QAEd,CACT,EAwEAiG,EAAOC,QAAQ,EAAc,SAAuBgF,GAClD,IAAIsR,EACAyB,EAAc/S,EAAM+S,YACpBnT,EAAMI,EAAM+S,YAAYje,OAI5B,IAFAke,EAAYhT,EAAOA,EAAMgS,YAEpBV,EAAO,EAAGA,EAAO1R,EAAK0R,IACrByB,EAAYzB,IAASyB,EAAYzB,GAAMU,YACzCgB,EAAYhT,EAAO+S,EAAYzB,GAAMU,WAG3C,C,gCCpHA,SAASkD,EAAiBtW,GACxB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAEA7D,EAAOC,QAAU,SAAcgF,EAAO2I,GACpC,IAAIxU,EAAM6L,EAAM7L,IAEhB,MAAOA,EAAM6L,EAAMM,SAAW4U,EAAiBlV,EAAMxQ,IAAI0O,WAAW/J,IAClEA,IAGF,OAAIA,IAAQ6L,EAAM7L,MAEbwU,IAAU3I,EAAMqF,SAAWrF,EAAMxQ,IAAI8C,MAAM0N,EAAM7L,IAAKA,IAE3D6L,EAAM7L,IAAMA,GAEL,EACT,C,oCC5CA,SAASwY,EAAMnF,EAAMD,EAAKD,GAMxBvY,KAAKyY,KAAWA,EAOhBzY,KAAKwY,IAAWA,EAOhBxY,KAAKM,MAAW,KAOhBN,KAAKiJ,IAAW,KAWhBjJ,KAAKuY,QAAWA,EAOhBvY,KAAK8Q,MAAW,EAOhB9Q,KAAK8X,SAAW,KAQhB9X,KAAKgB,QAAW,GAOhBhB,KAAKkb,OAAW,GAWhBlb,KAAKyX,KAAW,GAOhBzX,KAAKomB,KAAW,KAQhBpmB,KAAKuT,OAAW,EAQhBvT,KAAKsY,QAAW,CAClB,CA3GA/T,EAAA,MAmHAqZ,EAAMta,UAAUsU,UAAY,SAAmBrP,GAC7C,IAAIjI,EAAO6U,EAAGtK,EAEd,IAAK7K,KAAKM,MAAS,OAAQ,EAI3B,IAFAA,EAAQN,KAAKM,MAER6U,EAAI,EAAGtK,EAAMvK,EAAMyF,OAAQoP,EAAItK,EAAKsK,IACvC,GAAI7U,EAAM6U,GAAG,KAAO5M,EAAQ,OAAO4M,EAErC,OAAQ,CACV,EAQAyI,EAAMta,UAAU+iB,SAAW,SAAkBC,GACvCtmB,KAAKM,MACPN,KAAKM,MAAMoH,KAAK4e,GAEhBtmB,KAAKM,MAAQ,CAAEgmB,EAEnB,EAQA1I,EAAMta,UAAUijB,QAAU,SAAiBhe,EAAMie,GAC/C,IAAI3a,EAAM7L,KAAK4X,UAAUrP,GACrB+d,EAAW,CAAE/d,EAAMie,GAEnB3a,EAAM,EACR7L,KAAKqmB,SAASC,GAEdtmB,KAAKM,MAAMuL,GAAOya,CAEtB,EAQA1I,EAAMta,UAAUmjB,QAAU,SAAiBle,GACzC,IAAIsD,EAAM7L,KAAK4X,UAAUrP,GAAOie,EAAQ,KAIxC,OAHI3a,GAAO,IACT2a,EAAQxmB,KAAKM,MAAMuL,GAAK,IAEnB2a,CACT,EASA5I,EAAMta,UAAUojB,SAAW,SAAkBne,EAAMie,GACjD,IAAI3a,EAAM7L,KAAK4X,UAAUrP,GAErBsD,EAAM,EACR7L,KAAKqmB,SAAS,CAAE9d,EAAMie,IAEtBxmB,KAAKM,MAAMuL,GAAK,GAAK7L,KAAKM,MAAMuL,GAAK,GAAK,IAAM2a,CAEpD,EAGAxa,EAAOC,QAAU2R,C,oCCpMjBrZ,EAAA,MAEA,IAAIoiB,EAAc,CAAC,EAEnB,SAASC,EAAeC,GACtB,IAAI1R,EAAGtF,EAAIwG,EAAQsQ,EAAYE,GAC/B,GAAIxQ,EAAS,OAAOA,EAIpB,IAFAA,EAAQsQ,EAAYE,GAAW,GAE1B1R,EAAI,EAAGA,EAAI,IAAKA,IACnBtF,EAAKnB,OAAOC,aAAawG,GACzBkB,EAAM3O,KAAKmI,GAGb,IAAKsF,EAAI,EAAGA,EAAI0R,EAAQ9gB,OAAQoP,IAC9BtF,EAAKgX,EAAQ1X,WAAWgG,GACxBkB,EAAMxG,GAAM,KAAO,IAAMA,EAAG7L,SAAS,IAAIsM,eAAe/M,OAAO,GAGjE,OAAO8S,CACT,CAKA,SAASjD,EAAO0T,EAAQD,GACtB,IAAIxQ,EAQJ,MANuB,kBAAZwQ,IACTA,EAAUzT,EAAOC,cAGnBgD,EAAQuQ,EAAeC,GAEhBC,EAAOllB,QAAQ,qBAAqB,SAASmlB,GAClD,IAAI5R,EAAGgB,EAAG6Q,EAAIC,EAAIC,EAAIC,EAAIC,EACtB/b,EAAS,GAEb,IAAK8J,EAAI,EAAGgB,EAAI4Q,EAAIhhB,OAAQoP,EAAIgB,EAAGhB,GAAK,EACtC6R,EAAK5X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IAEnC6R,EAAK,IACP3b,GAAUgL,EAAM2Q,GAIE,OAAV,IAALA,IAAwB7R,EAAI,EAAIgB,IAEnC8Q,EAAK7X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IAEnB,OAAV,IAAL8R,KACHG,EAAQJ,GAAM,EAAK,KAAe,GAALC,EAG3B5b,GADE+b,EAAM,IACE,KAEA1Y,OAAOC,aAAayY,GAGhCjS,GAAK,GAKW,OAAV,IAAL6R,IAAwB7R,EAAI,EAAIgB,IAEnC8Q,EAAK7X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IACvC+R,EAAK9X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IAEnB,OAAV,IAAL8R,IAAuC,OAAV,IAALC,KAC3BE,EAAQJ,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAe,GAALC,EAGnD7b,GADE+b,EAAM,MAAUA,GAAO,OAAUA,GAAO,MAChC,MAEA1Y,OAAOC,aAAayY,GAGhCjS,GAAK,GAKW,OAAV,IAAL6R,IAAwB7R,EAAI,EAAIgB,IAEnC8Q,EAAK7X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IACvC+R,EAAK9X,SAAS2X,EAAIxjB,MAAM4R,EAAI,EAAGA,EAAI,GAAI,IACvCgS,EAAK/X,SAAS2X,EAAIxjB,MAAM4R,EAAI,GAAIA,EAAI,IAAK,IAErB,OAAV,IAAL8R,IAAuC,OAAV,IAALC,IAAuC,OAAV,IAALC,KACnDC,EAAQJ,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaC,GAAM,EAAK,KAAe,GAALC,EAE5EC,EAAM,OAAWA,EAAM,QACzB/b,GAAU,QAEV+b,GAAO,MACP/b,GAAUqD,OAAOC,aAAa,OAAUyY,GAAO,IAAK,OAAgB,KAANA,KAGhEjS,GAAK,GAKT9J,GAAU,IAGZ,OAAOA,CACT,GACF,CAGA+H,EAAOC,aAAiB,cACxBD,EAAOiU,eAAiB,GAGxBrb,EAAOC,QAAUmH,C,oCCxHJ7O,EAAA,MAGb,IAAI+iB,EAAc,CAAC,EAMnB,SAASC,EAAeV,GACtB,IAAI1R,EAAGtF,EAAIwG,EAAQiR,EAAYT,GAC/B,GAAIxQ,EAAS,OAAOA,EAIpB,IAFAA,EAAQiR,EAAYT,GAAW,GAE1B1R,EAAI,EAAGA,EAAI,IAAKA,IACnBtF,EAAKnB,OAAOC,aAAawG,GAErB,cAActP,KAAKgK,GAErBwG,EAAM3O,KAAKmI,GAEXwG,EAAM3O,KAAK,KAAO,IAAMyN,EAAEnR,SAAS,IAAIsM,eAAe/M,OAAO,IAIjE,IAAK4R,EAAI,EAAGA,EAAI0R,EAAQ9gB,OAAQoP,IAC9BkB,EAAMwQ,EAAQ1X,WAAWgG,IAAM0R,EAAQ1R,GAGzC,OAAOkB,CACT,CAUA,SAASrD,EAAO8T,EAAQD,EAASW,GAC/B,IAAIrS,EAAGgB,EAAGjH,EAAMuY,EAAUpR,EACtBhL,EAAS,GAcb,IAZuB,kBAAZwb,IAETW,EAAeX,EACfA,EAAU7T,EAAOK,cAGQ,qBAAhBmU,IACTA,GAAc,GAGhBnR,EAAQkR,EAAeV,GAElB1R,EAAI,EAAGgB,EAAI2Q,EAAO/gB,OAAQoP,EAAIgB,EAAGhB,IAGpC,GAFAjG,EAAO4X,EAAO3X,WAAWgG,GAErBqS,GAAwB,KAATtY,GAAyBiG,EAAI,EAAIgB,GAC9C,iBAAiBtQ,KAAKihB,EAAOvjB,MAAM4R,EAAI,EAAGA,EAAI,IAChD9J,GAAUyb,EAAOvjB,MAAM4R,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAIjG,EAAO,IACT7D,GAAUgL,EAAMnH,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAUiG,EAAI,EAAIgB,IAC9CsR,EAAWX,EAAO3X,WAAWgG,EAAI,GAC7BsS,GAAY,OAAUA,GAAY,OAAQ,CAC5Cpc,GAAUqc,mBAAmBZ,EAAO3R,GAAK2R,EAAO3R,EAAI,IACpDA,IACA,QACF,CAEF9J,GAAU,WAEZ,MAEAA,GAAUqc,mBAAmBZ,EAAO3R,IAGtC,OAAO9J,CACT,CAEA2H,EAAOK,aAAiB,uBACxBL,EAAOqU,eAAiB,YAGxBrb,EAAOC,QAAU+G,C,gCC7FjBhH,EAAOC,QAAU,SAAgB/B,GAC/B,IAAImB,EAAS,GAkBb,OAhBAA,GAAUnB,EAAI2I,UAAY,GAC1BxH,GAAUnB,EAAIyd,QAAU,KAAO,GAC/Btc,GAAUnB,EAAI0d,KAAO1d,EAAI0d,KAAO,IAAM,GAElC1d,EAAI0I,WAA2C,IAA/B1I,EAAI0I,SAASxH,QAAQ,KAEvCC,GAAU,IAAMnB,EAAI0I,SAAW,IAE/BvH,GAAUnB,EAAI0I,UAAY,GAG5BvH,GAAUnB,EAAI2d,KAAO,IAAM3d,EAAI2d,KAAO,GACtCxc,GAAUnB,EAAI4d,UAAY,GAC1Bzc,GAAUnB,EAAIiB,QAAU,GACxBE,GAAUnB,EAAI6d,MAAQ,GAEf1c,CACT,C,oCCrBAW,EAAOC,QAAQ+G,OAAS,EAAxBhH,MACAA,EAAOC,QAAQmH,OAAS,EAAxBpH,MACAA,EAAOC,QAAQgH,OAAS,EAAxBjH,MACAA,EAAOC,QAAQ0G,MAAf3G,EAAAA,K,oCCuCA,SAASgc,IACPhoB,KAAK6S,SAAW,KAChB7S,KAAK2nB,QAAU,KACf3nB,KAAK4nB,KAAO,KACZ5nB,KAAK6nB,KAAO,KACZ7nB,KAAK4S,SAAW,KAChB5S,KAAK+nB,KAAO,KACZ/nB,KAAKmL,OAAS,KACdnL,KAAK8nB,SAAW,IAClB,CAZAvjB,EAAA,MAkBA,IAAI0jB,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAIpBC,EAAS,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAGhDC,EAAS,CAAE,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM3c,OAAO0c,GAGlDE,EAAa,CAAE,KAAO5c,OAAO2c,GAK7BE,EAAe,CAAE,IAAK,IAAK,IAAK,IAAK,KAAM7c,OAAO4c,GAClDE,EAAkB,CAAE,IAAK,IAAK,KAC9BC,EAAiB,IACjBC,EAAsB,yBACtBC,EAAoB,+BAIpBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAIf,SAASC,EAAS5e,EAAK6e,GACrB,GAAI7e,GAAOA,aAAe8d,EAAO,OAAO9d,EAExC,IAAI8e,EAAI,IAAIhB,EAEZ,OADAgB,EAAErW,MAAMzI,EAAK6e,GACNC,CACT,CAEAhB,EAAI1kB,UAAUqP,MAAQ,SAASzI,EAAK6e,GAClC,IAAI5T,EAAGgB,EAAG8S,EAAYC,EAAKvB,EACvBwB,EAAOjf,EAMX,GAFAif,EAAOA,EAAKxnB,QAEPonB,GAA+C,IAA1B7e,EAAIxD,MAAM,KAAKX,OAAc,CAErD,IAAIqjB,EAAajB,EAAkBld,KAAKke,GACxC,GAAIC,EAKF,OAJAppB,KAAK8nB,SAAWsB,EAAW,GACvBA,EAAW,KACbppB,KAAKmL,OAASie,EAAW,IAEpBppB,IAEX,CAEA,IAAIulB,EAAQ0C,EAAgBhd,KAAKke,GAoBjC,GAnBI5D,IACFA,EAAQA,EAAM,GACd0D,EAAa1D,EAAMzb,cACnB9J,KAAK6S,SAAW0S,EAChB4D,EAAOA,EAAKE,OAAO9D,EAAMxf,UAOvBgjB,GAAqBxD,GAAS4D,EAAKrjB,MAAM,2BAC3C6hB,EAAgC,OAAtBwB,EAAKE,OAAO,EAAG,IACrB1B,GAAapC,GAASqD,EAAiBrD,KACzC4D,EAAOA,EAAKE,OAAO,GACnBrpB,KAAK2nB,SAAU,KAIdiB,EAAiBrD,KACjBoC,GAAYpC,IAAUsD,EAAgBtD,IAAU,CAkBnD,IAUIqC,EAAM0B,EAVNC,GAAW,EACf,IAAKpU,EAAI,EAAGA,EAAIqT,EAAgBziB,OAAQoP,IACtC+T,EAAMC,EAAK/d,QAAQod,EAAgBrT,KACtB,IAAT+T,KAA4B,IAAbK,GAAkBL,EAAMK,KACzCA,EAAUL,GA0Bd,IAjBEI,GAFe,IAAbC,EAEOJ,EAAKK,YAAY,KAIjBL,EAAKK,YAAY,IAAKD,IAKjB,IAAZD,IACF1B,EAAOuB,EAAK5lB,MAAM,EAAG+lB,GACrBH,EAAOA,EAAK5lB,MAAM+lB,EAAS,GAC3BtpB,KAAK4nB,KAAOA,GAId2B,GAAW,EACNpU,EAAI,EAAGA,EAAIoT,EAAaxiB,OAAQoP,IACnC+T,EAAMC,EAAK/d,QAAQmd,EAAapT,KACnB,IAAT+T,KAA4B,IAAbK,GAAkBL,EAAMK,KACzCA,EAAUL,IAIG,IAAbK,IACFA,EAAUJ,EAAKpjB,QAGS,MAAtBojB,EAAKI,EAAU,IAAcA,IACjC,IAAIE,EAAON,EAAK5lB,MAAM,EAAGgmB,GACzBJ,EAAOA,EAAK5lB,MAAMgmB,GAGlBvpB,KAAK0pB,UAAUD,GAIfzpB,KAAK4S,SAAW5S,KAAK4S,UAAY,GAIjC,IAAI+W,EAAoC,MAArB3pB,KAAK4S,SAAS,IACe,MAA5C5S,KAAK4S,SAAS5S,KAAK4S,SAAS7M,OAAS,GAGzC,IAAK4jB,EAAc,CACjB,IAAIC,EAAY5pB,KAAK4S,SAASlM,MAAM,MACpC,IAAKyO,EAAI,EAAGgB,EAAIyT,EAAU7jB,OAAQoP,EAAIgB,EAAGhB,IAAK,CAC5C,IAAI0U,EAAOD,EAAUzU,GACrB,GAAK0U,IACAA,EAAK/jB,MAAM4iB,GAAsB,CAEpC,IADA,IAAIoB,EAAU,GACLpK,EAAI,EAAG3a,EAAI8kB,EAAK9jB,OAAQ2Z,EAAI3a,EAAG2a,IAClCmK,EAAK1a,WAAWuQ,GAAK,IAIvBoK,GAAW,IAEXA,GAAWD,EAAKnK,GAIpB,IAAKoK,EAAQhkB,MAAM4iB,GAAsB,CACvC,IAAIqB,EAAaH,EAAUrmB,MAAM,EAAG4R,GAChC6U,EAAUJ,EAAUrmB,MAAM4R,EAAI,GAC9B8U,EAAMJ,EAAK/jB,MAAM6iB,GACjBsB,IACFF,EAAWriB,KAAKuiB,EAAI,IACpBD,EAAQE,QAAQD,EAAI,KAElBD,EAAQjkB,SACVojB,EAAOa,EAAQpiB,KAAK,KAAOuhB,GAE7BnpB,KAAK4S,SAAWmX,EAAWniB,KAAK,KAChC,KACF,CACF,CACF,CACF,CAEI5H,KAAK4S,SAAS7M,OAAS0iB,IACzBzoB,KAAK4S,SAAW,IAKd+W,IACF3pB,KAAK4S,SAAW5S,KAAK4S,SAASyW,OAAO,EAAGrpB,KAAK4S,SAAS7M,OAAS,GAEnE,CAGA,IAAIgiB,EAAOoB,EAAK/d,QAAQ,MACV,IAAV2c,IAEF/nB,KAAK+nB,KAAOoB,EAAKE,OAAOtB,GACxBoB,EAAOA,EAAK5lB,MAAM,EAAGwkB,IAEvB,IAAIoC,EAAKhB,EAAK/d,QAAQ,KAWtB,OAVY,IAAR+e,IACFnqB,KAAKmL,OAASge,EAAKE,OAAOc,GAC1BhB,EAAOA,EAAK5lB,MAAM,EAAG4mB,IAEnBhB,IAAQnpB,KAAK8nB,SAAWqB,GACxBN,EAAgBI,IAChBjpB,KAAK4S,WAAa5S,KAAK8nB,WACzB9nB,KAAK8nB,SAAW,IAGX9nB,IACT,EAEAgoB,EAAI1kB,UAAUomB,UAAY,SAASD,GACjC,IAAI5B,EAAOK,EAAYjd,KAAKwe,GACxB5B,IACFA,EAAOA,EAAK,GACC,MAATA,IACF7nB,KAAK6nB,KAAOA,EAAKwB,OAAO,IAE1BI,EAAOA,EAAKJ,OAAO,EAAGI,EAAK1jB,OAAS8hB,EAAK9hB,SAEvC0jB,IAAQzpB,KAAK4S,SAAW6W,EAC9B,EAEAzd,EAAOC,QAAU6c,C,gPCpTjB,MAAMsB,EAAS,WAGTC,EAAO,GACPC,EAAO,EACPC,EAAO,GACPC,EAAO,GACPC,EAAO,IACPC,EAAc,GACdC,EAAW,IACXC,EAAY,IAGZC,EAAgB,QAChBC,EAAgB,aAChBC,EAAkB,4BAGlBC,EAAS,CACd,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAIZC,EAAgBZ,EAAOC,EACvBY,EAAQ/N,KAAK+N,MACbC,EAAqBzc,OAAOC,aAUlC,SAASyc,EAAM3S,GACd,MAAM,IAAI4S,WAAWL,EAAOvS,GAC7B,CAUA,SAASxP,EAAIqiB,EAAOC,GACnB,MAAMlgB,EAAS,GACf,IAAItF,EAASulB,EAAMvlB,OACnB,MAAOA,IACNsF,EAAOtF,GAAUwlB,EAASD,EAAMvlB,IAEjC,OAAOsF,CACR,CAYA,SAASmgB,EAAUC,EAAQF,GAC1B,MAAMG,EAAQD,EAAO/kB,MAAM,KAC3B,IAAI2E,EAAS,GACTqgB,EAAM3lB,OAAS,IAGlBsF,EAASqgB,EAAM,GAAK,IACpBD,EAASC,EAAM,IAGhBD,EAASA,EAAO7pB,QAAQmpB,EAAiB,KACzC,MAAMY,EAASF,EAAO/kB,MAAM,KACtBklB,EAAU3iB,EAAI0iB,EAAQJ,GAAU3jB,KAAK,KAC3C,OAAOyD,EAASugB,CACjB,CAeA,SAASC,EAAW/E,GACnB,MAAMgF,EAAS,GACf,IAAIC,EAAU,EACd,MAAMhmB,EAAS+gB,EAAO/gB,OACtB,MAAOgmB,EAAUhmB,EAAQ,CACxB,MAAMygB,EAAQM,EAAO3X,WAAW4c,KAChC,GAAIvF,GAAS,OAAUA,GAAS,OAAUuF,EAAUhmB,EAAQ,CAE3D,MAAMimB,EAAQlF,EAAO3X,WAAW4c,KACR,QAAX,MAARC,GACJF,EAAOpkB,OAAe,KAAR8e,IAAkB,KAAe,KAARwF,GAAiB,QAIxDF,EAAOpkB,KAAK8e,GACZuF,IAEF,MACCD,EAAOpkB,KAAK8e,EAEd,CACA,OAAOsF,CACR,CAUA,MAAMG,EAAaC,GAAcxd,OAAOH,iBAAiB2d,GAWnDC,EAAe,SAASC,GAC7B,OAAIA,GAAa,IAAQA,EAAY,GACvBA,EAAY,GAAlB,GAEJA,GAAa,IAAQA,EAAY,GAC7BA,EAAY,GAEhBA,GAAa,IAAQA,EAAY,IAC7BA,EAAY,GAEb/B,CACR,EAaMgC,EAAe,SAASC,EAAOC,GAGpC,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARC,IAAc,EACzD,EAOMC,EAAQ,SAASC,EAAOC,EAAWC,GACxC,IAAI5nB,EAAI,EAGR,IAFA0nB,EAAQE,EAAYzB,EAAMuB,EAAQhC,GAAQgC,GAAS,EACnDA,GAASvB,EAAMuB,EAAQC,GACOD,EAAQxB,EAAgBV,GAAQ,EAAGxlB,GAAKslB,EACrEoC,EAAQvB,EAAMuB,EAAQxB,GAEvB,OAAOC,EAAMnmB,GAAKkmB,EAAgB,GAAKwB,GAASA,EAAQjC,GACzD,EASMpX,EAAS,SAASwZ,GAEvB,MAAMd,EAAS,GACTe,EAAcD,EAAM7mB,OAC1B,IAAIoP,EAAI,EACJ2X,EAAInC,EACJoC,EAAOrC,EAMPsC,EAAQJ,EAAMpD,YAAYoB,GAC1BoC,EAAQ,IACXA,EAAQ,GAGT,IAAK,IAAItN,EAAI,EAAGA,EAAIsN,IAAStN,EAExBkN,EAAMzd,WAAWuQ,IAAM,KAC1B0L,EAAM,aAEPU,EAAOpkB,KAAKklB,EAAMzd,WAAWuQ,IAM9B,IAAK,IAAI3V,EAAQijB,EAAQ,EAAIA,EAAQ,EAAI,EAAGjjB,EAAQ8iB,GAAwC,CAO3F,MAAMI,EAAO9X,EACb,IAAK,IAAI+X,EAAI,EAAGnoB,EAAIslB,GAA0BtlB,GAAKslB,EAAM,CAEpDtgB,GAAS8iB,GACZzB,EAAM,iBAGP,MAAMkB,EAAQH,EAAaS,EAAMzd,WAAWpF,MAExCuiB,GAASjC,GACZe,EAAM,iBAEHkB,EAAQpB,GAAOd,EAASjV,GAAK+X,IAChC9B,EAAM,YAGPjW,GAAKmX,EAAQY,EACb,MAAMjO,EAAIla,GAAKgoB,EAAOzC,EAAQvlB,GAAKgoB,EAAOxC,EAAOA,EAAOxlB,EAAIgoB,EAE5D,GAAIT,EAAQrN,EACX,MAGD,MAAMkO,EAAa9C,EAAOpL,EACtBiO,EAAIhC,EAAMd,EAAS+C,IACtB/B,EAAM,YAGP8B,GAAKC,CAEN,CAEA,MAAMC,EAAMtB,EAAO/lB,OAAS,EAC5BgnB,EAAOP,EAAMrX,EAAI8X,EAAMG,EAAa,GAARH,GAIxB/B,EAAM/V,EAAIiY,GAAOhD,EAAS0C,GAC7B1B,EAAM,YAGP0B,GAAK5B,EAAM/V,EAAIiY,GACfjY,GAAKiY,EAGLtB,EAAOtS,OAAOrE,IAAK,EAAG2X,EAEvB,CAEA,OAAOpe,OAAOH,iBAAiBud,EAChC,EASM9Y,EAAS,SAAS4Z,GACvB,MAAMd,EAAS,GAGfc,EAAQf,EAAWe,GAGnB,MAAMC,EAAcD,EAAM7mB,OAG1B,IAAI+mB,EAAInC,EACJ8B,EAAQ,EACRM,EAAOrC,EAGX,IAAK,MAAM2C,KAAgBT,EACtBS,EAAe,KAClBvB,EAAOpkB,KAAKyjB,EAAmBkC,IAIjC,MAAMC,EAAcxB,EAAO/lB,OAC3B,IAAIwnB,EAAiBD,EAMjBA,GACHxB,EAAOpkB,KAAKkjB,GAIb,MAAO2C,EAAiBV,EAAa,CAIpC,IAAIniB,EAAI0f,EACR,IAAK,MAAMiD,KAAgBT,EACtBS,GAAgBP,GAAKO,EAAe3iB,IACvCA,EAAI2iB,GAMN,MAAMG,EAAwBD,EAAiB,EAC3C7iB,EAAIoiB,EAAI5B,GAAOd,EAASqC,GAASe,IACpCpC,EAAM,YAGPqB,IAAU/hB,EAAIoiB,GAAKU,EACnBV,EAAIpiB,EAEJ,IAAK,MAAM2iB,KAAgBT,EAI1B,GAHIS,EAAeP,KAAOL,EAAQrC,GACjCgB,EAAM,YAEHiC,IAAiBP,EAAG,CAEvB,IAAIW,EAAIhB,EACR,IAAK,IAAI1nB,EAAIslB,GAA0BtlB,GAAKslB,EAAM,CACjD,MAAMpL,EAAIla,GAAKgoB,EAAOzC,EAAQvlB,GAAKgoB,EAAOxC,EAAOA,EAAOxlB,EAAIgoB,EAC5D,GAAIU,EAAIxO,EACP,MAED,MAAMyO,EAAUD,EAAIxO,EACdkO,EAAa9C,EAAOpL,EAC1B6M,EAAOpkB,KACNyjB,EAAmBkB,EAAapN,EAAIyO,EAAUP,EAAY,KAE3DM,EAAIvC,EAAMwC,EAAUP,EACrB,CAEArB,EAAOpkB,KAAKyjB,EAAmBkB,EAAaoB,EAAG,KAC/CV,EAAOP,EAAMC,EAAOe,EAAuBD,IAAmBD,GAC9Db,EAAQ,IACNc,CACH,GAGCd,IACAK,CAEH,CACA,OAAOhB,EAAOlkB,KAAK,GACpB,EAaMuL,EAAY,SAASyZ,GAC1B,OAAOpB,EAAUoB,GAAO,SAAS9F,GAChC,OAAO+D,EAAchlB,KAAKihB,GACvB1T,EAAO0T,EAAOvjB,MAAM,GAAGuG,eACvBgd,CACJ,GACD,EAaMhU,EAAU,SAAS8Z,GACxB,OAAOpB,EAAUoB,GAAO,SAAS9F,GAChC,OAAOgE,EAAcjlB,KAAKihB,GACvB,OAAS9T,EAAO8T,GAChBA,CACJ,GACD,EAKM7U,EAAW,CAMhB,QAAW,QAQX,KAAQ,CACP,OAAU4Z,EACV,OAAUI,GAEX,OAAU7Y,EACV,OAAUJ,EACV,QAAWF,EACX,UAAaK,GAId,c,mBC3bAnH,EAAOC,QAAQ,oB,mBCAfD,EAAOC,QAAQ,uN,kBCAfD,EAAOC,QAAQ,o2D,mBCAfD,EAAOC,QAAQ,0D,mCCEfA,EAAQ0hB,IAAM,EAAd1hB,KACAA,EAAQ2hB,GAAR3hB,EAAAA,MACAA,EAAQ4hB,GAAR5hB,EAAAA,MACAA,EAAQ6hB,EAAR7hB,EAAAA,KACAA,EAAQ8hB,EAAR9hB,EAAAA,K,kBCNAD,EAAOC,QAAQ,kI","sources":["webpack://weblog/./src/pages/Article/Article.vue","webpack://weblog/./src/pages/Article/Article.vue?a4ab","webpack://weblog/./src/pages/Article/Article.vue?c019","webpack://weblog/./src/pages/Article/Article.vue?f44b","webpack://weblog/./src/widgets/ui/PageLayout/PageLayout.vue","webpack://weblog/./src/widgets/ui/PageLayout/PageLayout.vue?0d7d","webpack://weblog/./src/widgets/ui/PageLayout/PageLayout.vue?04b3","webpack://weblog/./src/widgets/ui/PageLayout/PageLayout.vue?88bc","webpack://weblog/./node_modules/linkify-it/index.js","webpack://weblog/./node_modules/linkify-it/lib/re.js","webpack://weblog/./node_modules/markdown-it/index.js","webpack://weblog/./node_modules/markdown-it/lib/common/entities.js","webpack://weblog/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://weblog/./node_modules/markdown-it/lib/common/html_re.js","webpack://weblog/./node_modules/markdown-it/lib/common/utils.js","webpack://weblog/./node_modules/markdown-it/lib/helpers/index.js","webpack://weblog/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://weblog/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://weblog/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://weblog/./node_modules/markdown-it/lib/index.js","webpack://weblog/./node_modules/markdown-it/lib/parser_block.js","webpack://weblog/./node_modules/markdown-it/lib/parser_core.js","webpack://weblog/./node_modules/markdown-it/lib/parser_inline.js","webpack://weblog/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://weblog/./node_modules/markdown-it/lib/presets/default.js","webpack://weblog/./node_modules/markdown-it/lib/presets/zero.js","webpack://weblog/./node_modules/markdown-it/lib/renderer.js","webpack://weblog/./node_modules/markdown-it/lib/ruler.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/code.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/list.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://weblog/./node_modules/markdown-it/lib/rules_block/table.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/block.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://weblog/./node_modules/markdown-it/lib/rules_core/text_join.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://weblog/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://weblog/./node_modules/markdown-it/lib/token.js","webpack://weblog/./node_modules/mdurl/decode.js","webpack://weblog/./node_modules/mdurl/encode.js","webpack://weblog/./node_modules/mdurl/format.js","webpack://weblog/./node_modules/mdurl/index.js","webpack://weblog/./node_modules/mdurl/parse.js","webpack://weblog/./node_modules/punycode/punycode.es6.js","webpack://weblog/./node_modules/uc.micro/categories/Cc/regex.js","webpack://weblog/./node_modules/uc.micro/categories/Cf/regex.js","webpack://weblog/./node_modules/uc.micro/categories/P/regex.js","webpack://weblog/./node_modules/uc.micro/categories/Z/regex.js","webpack://weblog/./node_modules/uc.micro/index.js","webpack://weblog/./node_modules/uc.micro/properties/Any/regex.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"article\"},[(_vm.article)?_c('page-layout',{attrs:{\"title\":_vm.article.title,\"size\":\"s\"}},[_c('div',{staticClass:\"article__image\"},[_c('img',{attrs:{\"src\":_vm.article.image.src,\"alt\":_vm.article.image.alt,\"width\":_vm.imageSize[0],\"height\":_vm.imageSize[1]}})]),_c('div',{staticClass:\"article__description\"},[_vm._v(_vm._s(_vm.article.description))]),_c('div',{staticClass:\"article__content text\",domProps:{\"innerHTML\":_vm._s(_vm.article.content)}})]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport { Component, Vue } from 'vue-property-decorator'\n// @ts-ignore\nimport MarkdownIt from 'markdown-it'\nimport { PageLayout } from '@/widgets/ui/PageLayout'\n\nexport type ArticleProps = {\n    //\n}\n\n@Component({\n    components: {\n        'page-layout': PageLayout,\n    },\n})\nexport default class Article extends Vue {\n    get activeArticle() {\n        return this.$store.getters?.['articles/active']\n    }\n\n    get imageSize() {\n        if (this.$device.size.maxMobile) return ['320', '240']\n        return ['650', '420']\n    }\n\n    get content() {\n        const article = this.activeArticle\n\n        if (!article) return ''\n\n        return article.content.trim().replace(/\\n\\s+/g, '\\n')\n    }\n\n    get article() {\n        const article = this.activeArticle\n\n        if (!article) return null\n\n        const md = new MarkdownIt()\n\n        return {\n            ...article,\n            content: md.render(this.content),\n        }\n    }\n\n    async created() {\n        const route = this.$route\n        const store = this.$store\n        const { id } = route.params\n\n        await store.dispatch('articles/fetchItem', id)\n    }\n}\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-38.use[2]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Article.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-38.use[2]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Article.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Article.vue?vue&type=template&id=7006806a&scoped=true&lang=pug&\"\nimport script from \"./Article.vue?vue&type=script&lang=ts&\"\nexport * from \"./Article.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Article.critical.scss?vue&type=style&index=0&id=7006806a&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7006806a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"page-layout\"},[_c('div',{staticClass:\"page-layout__container\",class:`page-layout__container--size-${_vm.size}`},[_c('h2',{staticClass:\"page-layout__title\"},[_vm._v(_vm._s(_vm.title))]),_vm._t(\"default\")],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport type { PartialPick } from '@/globals'\n\nexport type PageLayoutProps = Pick<PageLayout, 'title'> &\n    PartialPick<PageLayout, 'size'>\n\n@Component\nexport default class PageLayout extends Vue {\n    @Prop() readonly title!: string\n    @Prop({ default: 'm' }) readonly size!: 's' | 'm'\n}\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-38.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PageLayout.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-38.use[2]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PageLayout.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PageLayout.vue?vue&type=template&id=09eeb168&lang=pug&\"\nimport script from \"./PageLayout.vue?vue&type=script&lang=ts&\"\nexport * from \"./PageLayout.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PageLayout.critical.scss?vue&type=style&index=0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/"],"names":["render","_vm","this","_c","_self","_setupProxy","staticClass","article","attrs","title","image","src","alt","imageSize","_v","_s","description","domProps","content","_e","staticRenderFns","Article","Vue","activeArticle","$store","getters","$device","size","maxMobile","trim","replace","md","MarkdownIt","async","route","$route","store","id","params","dispatch","__decorate","Component","components","PageLayout","component","class","_t","constructor","args","_defineProperty","Prop","default","assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isString","isObject","isRegExp","isFunction","escapeRE","str","require","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","add","definition","set","m","ml","me","len","next","tld_pos","at_pos","exec","testSchemaAt","search","indexOf","result","matchAtStart","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","TypeError","arrayReplaceAt","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","charCodeAt","parseInt","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","toUpperCase","lib","mdurl","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","lines","ok","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","presetName","block","core","renderer","linkify","configure","presets","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","apply","env","State","process","tokens","parseInline","inlineMode","renderInline","Ruler","_rules","i","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","_endLine","destEndPos","destEndLineNo","href","label","res","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","curr","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","ch1","ch2","origStr","escapedStr","isLetter","lc","linkLevel","labelStart","ref","parseReference","SCHEME_RE","proto","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","decodeCache","getDecodeCache","exclude","string","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","codePoints","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z"],"sourceRoot":""}